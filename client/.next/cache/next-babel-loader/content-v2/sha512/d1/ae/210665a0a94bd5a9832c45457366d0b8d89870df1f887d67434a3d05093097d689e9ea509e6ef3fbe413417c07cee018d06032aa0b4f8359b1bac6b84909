{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport default class AbstractCursorController {\n  constructor() {\n    _defineProperty(this, \"indexToInsert\", void 0);\n\n    _defineProperty(this, \"indexToGo\", void 0);\n\n    _defineProperty(this, \"moveCursorAfterEdit\", moveCursor => {\n      console.log(this.indexToGo);\n      moveCursor(this.indexToGo);\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/markdownEditor/AbstractCursorController.ts"],"names":["AbstractCursorController","moveCursor","console","log","indexToGo"],"mappings":";;AAAA,eAAe,MAAeA,wBAAf,CAAwC;AAAA;AAAA;;AAAA;;AAAA,iDAOvBC,UAAD,IAAwD;AACnFC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,SAAjB;AACAH,MAAAA,UAAU,CAAC,KAAKG,SAAN,CAAV;AACD,KAVoD;AAAA;;AAAA","sourcesContent":["export default abstract class AbstractCursorController {\n  protected abstract indexToInsert: number;\n\n  protected abstract indexToGo: number[];\n\n  protected abstract setIndexToInsert(currentCursorIndex: number, input?: string): void;\n\n  public moveCursorAfterEdit = (moveCursor: (positionToGo: number[]) => void): void => {\n    console.log(this.indexToGo);\n    moveCursor(this.indexToGo);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}