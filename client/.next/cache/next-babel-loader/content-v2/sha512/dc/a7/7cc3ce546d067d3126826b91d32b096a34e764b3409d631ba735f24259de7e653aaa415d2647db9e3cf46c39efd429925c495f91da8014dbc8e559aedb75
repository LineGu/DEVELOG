{"ast":null,"code":"import _slicedToArray from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar insertTable = function insertTable(_ref) {\n  var input = _ref.input,\n      cursorPosition = _ref.cursorPosition,\n      insertText = _ref.insertText,\n      setInput = _ref.setInput;\n\n  var _cursorPosition = _slicedToArray(cursorPosition, 2),\n      endPosition = _cursorPosition[1];\n\n  var cursorPositionToGo = [0, 0];\n  setInput(input.slice(0, endPosition) + insertText + input.slice(endPosition));\n  cursorPositionToGo = [endPosition + 1, endPosition + 1];\n  return cursorPositionToGo;\n};\n\nvar addTable = function addTable(_ref2) {\n  var tableCount = _ref2.tableCount,\n      input = _ref2.input,\n      setInput = _ref2.setInput,\n      cursorPosition = _ref2.cursorPosition;\n  //   const [row, column] = tableCount!;\n  console.log(input);\n  var insertText = '\\n\\n|    |    |    |\\n|----|----|----|\\n|    |    |    |\\n\\n';\n  var cursorToGo = insertTable({\n    input: input,\n    cursorPosition: cursorPosition,\n    insertText: insertText,\n    setInput: setInput\n  });\n  return cursorToGo;\n};\n\nexport default addTable;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/addTable.ts"],"names":["insertTable","input","cursorPosition","insertText","setInput","endPosition","cursorPositionToGo","slice","addTable","tableCount","console","log","cursorToGo"],"mappings":";;AAUA,IAAMA,WAAW,GAAG,SAAdA,WAAc,OAAuE;AAAA,MAApEC,KAAoE,QAApEA,KAAoE;AAAA,MAA7DC,cAA6D,QAA7DA,cAA6D;AAAA,MAA7CC,UAA6C,QAA7CA,UAA6C;AAAA,MAAjCC,QAAiC,QAAjCA,QAAiC;;AAAA,uCACjEF,cADiE;AAAA,MAChFG,WADgF;;AAGzF,MAAIC,kBAAkB,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAzB;AAEAF,EAAAA,QAAQ,CAACH,KAAK,CAACM,KAAN,CAAY,CAAZ,EAAeF,WAAf,IAA8BF,UAA9B,GAA2CF,KAAK,CAACM,KAAN,CAAYF,WAAZ,CAA5C,CAAR;AACAC,EAAAA,kBAAkB,GAAG,CAACD,WAAW,GAAG,CAAf,EAAkBA,WAAW,GAAG,CAAhC,CAArB;AAEA,SAAOC,kBAAP;AACD,CATD;;AAWA,IAAME,QAAQ,GAAG,SAAXA,QAAW,QAAkE;AAAA,MAA/DC,UAA+D,SAA/DA,UAA+D;AAAA,MAAnDR,KAAmD,SAAnDA,KAAmD;AAAA,MAA5CG,QAA4C,SAA5CA,QAA4C;AAAA,MAAlCF,cAAkC,SAAlCA,cAAkC;AACjF;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACA,MAAME,UAAU,GAAG,8DAAnB;AACA,MAAMS,UAAU,GAAGZ,WAAW,CAAC;AAAEC,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,cAAc,EAAdA,cAAT;AAAyBC,IAAAA,UAAU,EAAVA,UAAzB;AAAqCC,IAAAA,QAAQ,EAARA;AAArC,GAAD,CAA9B;AAEA,SAAOQ,UAAP;AACD,CAPD;;AASA,eAAeJ,QAAf","sourcesContent":["import { Dispatch, SetStateAction } from 'react';\nimport { ITableProps } from '@interfaces';\n\ninterface IInsertSideProps {\n  input: string;\n  cursorPosition: number[];\n  insertText: string;\n  setInput: Dispatch<SetStateAction<string>>;\n}\n\nconst insertTable = ({ input, cursorPosition, insertText, setInput }: IInsertSideProps) => {\n  const [, endPosition] = cursorPosition;\n\n  let cursorPositionToGo = [0, 0];\n\n  setInput(input.slice(0, endPosition) + insertText + input.slice(endPosition));\n  cursorPositionToGo = [endPosition + 1, endPosition + 1];\n\n  return cursorPositionToGo;\n};\n\nconst addTable = ({ tableCount, input, setInput, cursorPosition }: ITableProps) => {\n  //   const [row, column] = tableCount!;\n  console.log(input);\n  const insertText = '\\n\\n|    |    |    |\\n|----|----|----|\\n|    |    |    |\\n\\n';\n  const cursorToGo = insertTable({ input, cursorPosition, insertText, setInput });\n\n  return cursorToGo;\n};\n\nexport default addTable;\n"]},"metadata":{},"sourceType":"module"}