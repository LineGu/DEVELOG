{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useRef, useEffect } from 'react';\nvar SCROLL_DEBOUNCE_MS = 200;\nvar SCROLL_PATH_X = 0;\n\nvar useScroll = function useScroll() {\n  _s();\n\n  var timerRef = useRef();\n  var scrollRef = useRef(0);\n  var scrollHandler = useCallback(function () {\n    scrollRef.current = document.body.scrollTop;\n  }, []);\n  var debounceHandler = useCallback(function () {\n    if (timerRef.current) clearTimeout(timerRef.current);\n    timerRef.current = setTimeout(scrollHandler, SCROLL_DEBOUNCE_MS);\n  }, [timerRef.current, scrollHandler]);\n  useEffect(function () {\n    document.body.scrollTo(SCROLL_PATH_X, scrollRef.current);\n    document.body.addEventListener('scroll', debounceHandler);\n    return function () {\n      document.body.removeEventListener('scroll', debounceHandler);\n    };\n  }, []);\n  return {\n    scroll: scrollRef.current\n  };\n};\n\n_s(useScroll, \"zYDkzbTc3kKMM6p5UnECylx0XiY=\");\n\nexport default useScroll;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/hooks/useScroll.ts"],"names":["useCallback","useRef","useEffect","SCROLL_DEBOUNCE_MS","SCROLL_PATH_X","useScroll","timerRef","scrollRef","scrollHandler","current","document","body","scrollTop","debounceHandler","clearTimeout","setTimeout","scrollTo","addEventListener","removeEventListener","scroll"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,MAAtB,EAA8BC,SAA9B,QAA+C,OAA/C;AAEA,IAAMC,kBAAkB,GAAG,GAA3B;AACA,IAAMC,aAAa,GAAG,CAAtB;;AAEA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,GAAM;AAAA;;AAChD,MAAMC,QAAQ,GAAGL,MAAM,EAAvB;AACA,MAAMM,SAAS,GAAGN,MAAM,CAAS,CAAT,CAAxB;AAEA,MAAMO,aAAa,GAAGR,WAAW,CAAC,YAAM;AACtCO,IAAAA,SAAS,CAACE,OAAV,GAAoBC,QAAQ,CAACC,IAAT,CAAcC,SAAlC;AACD,GAFgC,EAE9B,EAF8B,CAAjC;AAIA,MAAMC,eAAe,GAAGb,WAAW,CAAC,YAAM;AACxC,QAAIM,QAAQ,CAACG,OAAb,EAAsBK,YAAY,CAACR,QAAQ,CAACG,OAAV,CAAZ;AACtBH,IAAAA,QAAQ,CAACG,OAAT,GAAmBM,UAAU,CAACP,aAAD,EAAgBL,kBAAhB,CAA7B;AACD,GAHkC,EAGhC,CAACG,QAAQ,CAACG,OAAV,EAAmBD,aAAnB,CAHgC,CAAnC;AAKAN,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,QAAQ,CAACC,IAAT,CAAcK,QAAd,CAAuBZ,aAAvB,EAAsCG,SAAS,CAACE,OAAhD;AACAC,IAAAA,QAAQ,CAACC,IAAT,CAAcM,gBAAd,CAA+B,QAA/B,EAAyCJ,eAAzC;AAEA,WAAO,YAAM;AACXH,MAAAA,QAAQ,CAACC,IAAT,CAAcO,mBAAd,CAAkC,QAAlC,EAA4CL,eAA5C;AACD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;AASA,SAAO;AAAEM,IAAAA,MAAM,EAAEZ,SAAS,CAACE;AAApB,GAAP;AACD,CAvBD;;GAAMJ,S;;AAyBN,eAAeA,SAAf","sourcesContent":["import { useCallback, useRef, useEffect } from 'react';\n\nconst SCROLL_DEBOUNCE_MS = 200;\nconst SCROLL_PATH_X = 0;\n\nconst useScroll: () => { scroll: number } = () => {\n  const timerRef = useRef<NodeJS.Timeout>();\n  const scrollRef = useRef<number>(0);\n\n  const scrollHandler = useCallback(() => {\n    scrollRef.current = document.body.scrollTop;\n  }, []);\n\n  const debounceHandler = useCallback(() => {\n    if (timerRef.current) clearTimeout(timerRef.current);\n    timerRef.current = setTimeout(scrollHandler, SCROLL_DEBOUNCE_MS);\n  }, [timerRef.current, scrollHandler]);\n\n  useEffect(() => {\n    document.body.scrollTo(SCROLL_PATH_X, scrollRef.current);\n    document.body.addEventListener('scroll', debounceHandler);\n\n    return () => {\n      document.body.removeEventListener('scroll', debounceHandler);\n    };\n  }, []);\n\n  return { scroll: scrollRef.current };\n};\n\nexport default useScroll;\n"]},"metadata":{},"sourceType":"module"}