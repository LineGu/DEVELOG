{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/PostTagInput/PostTagInput.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport message from '@construction/message';\nconst TextAreaForTag = styled.textarea.withConfig({\n  displayName: \"PostTagInput__TextAreaForTag\",\n  componentId: \"sc-5hze2e-0\"\n})([\"border:none;outline:none;resize:none;pointer-events:auto;font-size:1.5em;font-weight:400;margin-left:0.4rem;background-color:\", \";color:\", \";&::placeholder{color:\", \";}&::selection{background-color:inherit;color:\", \";}@media (max-width:\", \"){font-size:1.3em;margin-left:0.6em;height:1em;}\"], () => Theme.HEADER_BACK, () => Theme.INTRO, () => Theme.TAG_PLACEHOLDER, () => Theme.TAG_PLACEHOLDER, () => Theme.MOBILE);\n\nconst renderTagChanged = (event, setTagInput) => {\n  if (!event) return;\n  const newTag = event.target.value;\n  const isValidTagForm = newTag[0] === '#' || newTag.length === 0;\n  if (isValidTagForm) setTagInput(newTag);\n};\n\nfunction PostTagInput({\n  addTag,\n  setModalState,\n  setTagInput,\n  tagInput\n}) {\n  return /*#__PURE__*/_jsxDEV(TextAreaForTag, {\n    placeholder: message.TAG_PLACEHOLDER,\n    onFocus: () => setModalState('show'),\n    onBlur: () => setModalState('hidden'),\n    value: tagInput,\n    onChange: event => renderTagChanged(event, setTagInput),\n    onKeyDown: addTag\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\nexport default PostTagInput;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/PostTagInput/PostTagInput.tsx"],"names":["React","styled","Theme","message","TextAreaForTag","textarea","HEADER_BACK","INTRO","TAG_PLACEHOLDER","MOBILE","renderTagChanged","event","setTagInput","newTag","target","value","isValidTagForm","length","PostTagInput","addTag","setModalState","tagInput"],"mappings":";;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAWA,MAAMC,cAAc,GAAGH,MAAM,CAACI,QAAV;AAAA;AAAA;AAAA,ySASE,MAAMH,KAAK,CAACI,WATd,EAUT,MAAMJ,KAAK,CAACK,KAVH,EAYP,MAAML,KAAK,CAACM,eAZL,EAgBP,MAAMN,KAAK,CAACM,eAhBL,EAmBG,MAAMN,KAAK,CAACO,MAnBf,CAApB;;AA0BA,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAqBC,WAArB,KAA2D;AAClF,MAAI,CAACD,KAAL,EAAY;AACZ,QAAME,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAA5B;AACA,QAAMC,cAAc,GAAGH,MAAM,CAAC,CAAD,CAAN,KAAc,GAAd,IAAqBA,MAAM,CAACI,MAAP,KAAkB,CAA9D;AACA,MAAID,cAAJ,EAAoBJ,WAAW,CAACC,MAAD,CAAX;AACrB,CALD;;AAOA,SAASK,YAAT,CAAsB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,aAAV;AAAyBR,EAAAA,WAAzB;AAAsCS,EAAAA;AAAtC,CAAtB,EAA0G;AACxG,sBACE,QAAC,cAAD;AACE,IAAA,WAAW,EAAElB,OAAO,CAACK,eADvB;AAEE,IAAA,OAAO,EAAE,MAAMY,aAAa,CAAC,MAAD,CAF9B;AAGE,IAAA,MAAM,EAAE,MAAMA,aAAa,CAAC,QAAD,CAH7B;AAIE,IAAA,KAAK,EAAEC,QAJT;AAKE,IAAA,QAAQ,EAAGV,KAAD,IAAWD,gBAAgB,CAACC,KAAD,EAAQC,WAAR,CALvC;AAME,IAAA,SAAS,EAAEO;AANb;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;AAED,eAAeD,YAAf","sourcesContent":["import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport message from '@construction/message';\nimport { SetStateString, ChangeEvent } from '@types';\nimport { IOnKeyboardFunc } from '@eventInterfaces';\n\ninterface IPostTagInputProps {\n  addTag: IOnKeyboardFunc;\n  setModalState: SetStateString;\n  setTagInput: SetStateString;\n  tagInput: string;\n}\n\nconst TextAreaForTag = styled.textarea`\n  border: none;\n  outline: none;\n  resize: none;\n  pointer-events: auto;\n  font-size: 1.5em;\n  font-weight: 400;\n  margin-left: 0.4rem;\n\n  background-color: ${() => Theme.HEADER_BACK};\n  color: ${() => Theme.INTRO};\n  &::placeholder {\n    color: ${() => Theme.TAG_PLACEHOLDER};\n  }\n  &::selection {\n    background-color: inherit;\n    color: ${() => Theme.TAG_PLACEHOLDER};\n  }\n\n  @media (max-width: ${() => Theme.MOBILE}) {\n    font-size: 1.3em;\n    margin-left: 0.6em;\n    height: 1em;\n  }\n`;\n\nconst renderTagChanged = (event: ChangeEvent, setTagInput: SetStateString): void => {\n  if (!event) return;\n  const newTag = event.target.value;\n  const isValidTagForm = newTag[0] === '#' || newTag.length === 0;\n  if (isValidTagForm) setTagInput(newTag);\n};\n\nfunction PostTagInput({ addTag, setModalState, setTagInput, tagInput }: IPostTagInputProps): ReactElement {\n  return (\n    <TextAreaForTag\n      placeholder={message.TAG_PLACEHOLDER}\n      onFocus={() => setModalState('show')}\n      onBlur={() => setModalState('hidden')}\n      value={tagInput}\n      onChange={(event) => renderTagChanged(event, setTagInput)}\n      onKeyDown={addTag}\n    />\n  );\n}\n\nexport default PostTagInput;\n"]},"metadata":{},"sourceType":"module"}