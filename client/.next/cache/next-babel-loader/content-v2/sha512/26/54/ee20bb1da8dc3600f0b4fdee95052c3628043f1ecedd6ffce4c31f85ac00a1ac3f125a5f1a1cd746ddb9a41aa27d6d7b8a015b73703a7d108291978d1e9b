{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/MarkdownEditor/MarkdownEditor.tsx\";\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport WritingArea from '@organisms/Editor/WritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport EditorTagArea from '@organisms/Editor/TagArea/index';\nimport EditButtonBox from '@organisms/Editor/ButtonBox/index';\nimport editInputText from '@utils/editInputText';\nimport ProcessBar from '@molecules/ProcessBar';\nimport useCursorPoint from '@hook/useCursorPoint';\nimport Devider from '@atoms/Devider';\nimport useUloadingImg from '@hook/useUploadingImg';\nconst EditorAreaWrapper = styled.div.withConfig({\n  displayName: \"MarkdownEditor__EditorAreaWrapper\",\n  componentId: \"sc-13p7271-0\"\n})([\"width:50%;height:100vh;@media (max-width:\", \"){width:100%;}.show{animation-name:bounce;animation-duration:0.5s;}\"], () => Theme.MOBILE);\nconst StyeldDevider = styled(Devider).withConfig({\n  displayName: \"MarkdownEditor__StyeldDevider\",\n  componentId: \"sc-13p7271-1\"\n})([\"top:13vh;left:3vw;@media (max-width:\", \"){top:2.7em;left:0.8em;}\"], () => Theme.MOBILE);\n\nfunction MarkDownEditor({\n  input,\n  setInput\n}) {\n  const inputAreaElem = useRef(null);\n  const {\n    cursorPosition,\n    moveCursor\n  } = useCursorPoint(inputAreaElem.current);\n  const {\n    0: cursorToGoByEditButton,\n    1: setCursorToGo\n  } = useState(cursorPosition);\n  const {\n    setImageUrl,\n    setUploadState,\n    uploadState\n  } = useUloadingImg(input, cursorPosition, setInput);\n  const textInputProps = {\n    input,\n    setInput,\n    inputAreaElem,\n    setImageUrl,\n    setUploadState\n  };\n  const updateByEditButton = useCallback(event => {\n    var _inputAreaElem$curren;\n\n    const pointToGo = editInputText({\n      event,\n      input,\n      setInput,\n      cursorPosition\n    });\n    (_inputAreaElem$curren = inputAreaElem.current) === null || _inputAreaElem$curren === void 0 ? void 0 : _inputAreaElem$curren.focus();\n    setCursorToGo(pointToGo);\n  }, [input, cursorPosition]);\n  useEffect(() => {\n    moveCursor(cursorToGoByEditButton);\n  }, [cursorToGoByEditButton]);\n  return /*#__PURE__*/_jsxDEV(EditorAreaWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ProcessBar, {\n      uploadState: uploadState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostTitleInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyeldDevider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditorTagArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditButtonBox, {\n      onClick: updateByEditButton,\n      tableProps: {\n        input,\n        setInput,\n        cursorPosition\n      },\n      setImageUrl: setImageUrl,\n      setUploadState: setUploadState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WritingArea, {\n      className: \"textInput\",\n      writingAreaProps: writingAreaProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MarkDownEditor;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/MarkdownEditor/MarkdownEditor.tsx"],"names":["React","useCallback","useState","useEffect","useRef","styled","Theme","WritingArea","PostTitleInput","EditorTagArea","EditButtonBox","editInputText","ProcessBar","useCursorPoint","Devider","useUloadingImg","EditorAreaWrapper","div","MOBILE","StyeldDevider","MarkDownEditor","input","setInput","inputAreaElem","cursorPosition","moveCursor","current","cursorToGoByEditButton","setCursorToGo","setImageUrl","setUploadState","uploadState","textInputProps","updateByEditButton","event","pointToGo","focus","writingAreaProps"],"mappings":"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","sourcesContent":["import React, { ReactElement, useCallback, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport WritingArea from '@organisms/Editor/WritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport EditorTagArea from '@organisms/Editor/TagArea/index';\nimport EditButtonBox from '@organisms/Editor/ButtonBox/index';\nimport editInputText from '@utils/editInputText';\nimport { IPostInputProps, IUploadState } from '@interfaces';\nimport ProcessBar from '@molecules/ProcessBar';\nimport useCursorPoint from '@hook/useCursorPoint';\nimport Devider from '@atoms/Devider';\nimport useUloadingImg from '@hook/useUploadingImg';\n\nconst EditorAreaWrapper = styled.div`\n  width: 50%;\n  height: 100vh;\n\n  @media (max-width: ${() => Theme.MOBILE}) {\n    width: 100%;\n  }\n\n  .show {\n    animation-name: bounce;\n    animation-duration: 0.5s;\n  }\n`;\n\nconst StyeldDevider = styled(Devider)`\n  top: 13vh;\n  left: 3vw;\n  @media (max-width: ${() => Theme.MOBILE}) {\n    top: 2.7em;\n    left: 0.8em;\n  }\n`;\n\nfunction MarkDownEditor({ input, setInput }: IPostInputProps): ReactElement {\n  const inputAreaElem = useRef<HTMLTextAreaElement>(null);\n  const { cursorPosition, moveCursor } = useCursorPoint(inputAreaElem.current);\n  const [cursorToGoByEditButton, setCursorToGo] = useState(cursorPosition);\n\n  const { setImageUrl, setUploadState, uploadState } = useUloadingImg(input, cursorPosition, setInput);\n\n  const textInputProps = {\n    input,\n    setInput,\n    inputAreaElem,\n    setImageUrl,\n    setUploadState,\n  };\n\n  const updateByEditButton = useCallback(\n    (event: React.MouseEvent<SVGElement, MouseEvent>) => {\n      const pointToGo = editInputText({ event, input, setInput, cursorPosition });\n      inputAreaElem.current?.focus();\n      setCursorToGo(pointToGo);\n    },\n    [input, cursorPosition],\n  );\n\n  useEffect(() => {\n    moveCursor(cursorToGoByEditButton);\n  }, [cursorToGoByEditButton]);\n\n  return (\n    <EditorAreaWrapper>\n      <ProcessBar uploadState={uploadState} />\n      <PostTitleInput />\n      <StyeldDevider />\n      <EditorTagArea />\n      <EditButtonBox\n        onClick={updateByEditButton}\n        tableProps={{ input, setInput, cursorPosition }}\n        setImageUrl={setImageUrl}\n        setUploadState={setUploadState}\n      />\n      <WritingArea className=\"textInput\" writingAreaProps={writingAreaProps} />\n    </EditorAreaWrapper>\n  );\n}\n\nexport default MarkDownEditor;\n"]},"metadata":{},"sourceType":"module"}