{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/MarkdownEditor/MarkdownEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport WritingArea from '@molecules/EditorWritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport EditorTagArea from '@molecules/EditorTagArea/index';\nimport EditButtonBox from '@molecules/EditButtonBox/index';\nimport editInputText from '@utils/editInputText';\nvar EditorAreaWrapper = styled.div.withConfig({\n  displayName: \"MarkdownEditor__EditorAreaWrapper\",\n  componentId: \"sc-13p7271-0\"\n})([\"width:50%;height:100vh;& > hr{position:absolute;top:13vh;left:3vw;width:9vw;border:4px solid \", \";padding-bottm:300px;}.tagModal{top:13.5em;}.show{animation-name:bounce;animation-duration:0.5s;}\"], function () {\n  return Theme.EMPHASIS;\n});\n_c = EditorAreaWrapper;\n\nvar findCursorPoint = function findCursorPoint(element) {\n  var cursorPointStart = element === null || element === void 0 ? void 0 : element.selectionStart;\n  var cursorPointEnd = element === null || element === void 0 ? void 0 : element.selectionEnd;\n  var cursorPosition = [cursorPointStart, cursorPointEnd];\n  return cursorPosition;\n};\n\nfunction MarkDownEditor(_ref) {\n  _s();\n\n  var input = _ref.input,\n      setInput = _ref.setInput;\n\n  var _useState = useState(''),\n      imageUrl = _useState[0],\n      setImageUrl = _useState[1];\n\n  var _useState2 = useState(0),\n      uploadProcess = _useState2[0],\n      setUploadProcess = _useState2[1];\n\n  var infoOfCursorToGo = useRef([false, [0, 0]]);\n\n  var _useState3 = useState([0, 0]),\n      cursorPosition = _useState3[0],\n      setCursorPosition = _useState3[1];\n\n  var inputAreaElem = useRef(null);\n  var propsAboutTextComponent = {\n    input: input,\n    setInput: setInput,\n    cursorPosition: cursorPosition,\n    setCursorPosition: setCursorPosition,\n    findCursorPoint: findCursorPoint,\n    inputAreaElem: inputAreaElem,\n    infoOfCursorToGo: infoOfCursorToGo\n  };\n  var controlInputAndCursor = useCallback(function (event) {\n    var _inputAreaElem$curren;\n\n    var cursorPositionToGo = editInputText({\n      event: event,\n      input: input,\n      setInput: setInput,\n      cursorPosition: cursorPosition\n    });\n    infoOfCursorToGo.current = [true, cursorPositionToGo];\n    (_inputAreaElem$curren = inputAreaElem.current) === null || _inputAreaElem$curren === void 0 ? void 0 : _inputAreaElem$curren.focus();\n  }, [input, cursorPosition]);\n  var insertImageMarkdown = useCallback(function () {\n    var isNotVaildUrl = imageUrl === null || imageUrl === undefined || imageUrl.length === 0;\n    if (isNotVaildUrl) return;\n    var inputWithNewImg = \"\".concat(input.slice(0, cursorPosition[0]), \"![](\").concat(imageUrl, \")\").concat(input.slice(cursorPosition[0]));\n    setInput(inputWithNewImg);\n    setImageUrl('');\n  }, [imageUrl]);\n  var moveCursorAfterEdit = useCallback(function () {\n    var _inputAreaElem$curren2, _inputAreaElem$curren3;\n\n    var didClickedEditButton = infoOfCursorToGo.current[0];\n    if (!didClickedEditButton) return;\n    var cursorPositionToGo = infoOfCursorToGo.current[1];\n\n    var _ref2 = cursorPositionToGo,\n        _ref3 = _slicedToArray(_ref2, 2),\n        startPosition = _ref3[0],\n        endPosition = _ref3[1];\n\n    (_inputAreaElem$curren2 = inputAreaElem.current) === null || _inputAreaElem$curren2 === void 0 ? void 0 : _inputAreaElem$curren2.focus();\n    (_inputAreaElem$curren3 = inputAreaElem.current) === null || _inputAreaElem$curren3 === void 0 ? void 0 : _inputAreaElem$curren3.setSelectionRange(startPosition, endPosition);\n    infoOfCursorToGo.current = [false, [0, 0]];\n    setCursorPosition(findCursorPoint(inputAreaElem.current));\n  }, [input]);\n  useEffect(function () {\n    moveCursorAfterEdit();\n  }, [input]);\n  useEffect(function () {\n    insertImageMarkdown();\n  }, [imageUrl]);\n  return /*#__PURE__*/_jsxDEV(EditorAreaWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(PostTitleInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditorTagArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditButtonBox, {\n      onClick: function onClick(event) {\n        return controlInputAndCursor(event);\n      },\n      setImageUrl: setImageUrl,\n      setUploadProcess: setUploadProcess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WritingArea, {\n      className: \"textInput\",\n      propsAboutTextComponent: propsAboutTextComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MarkDownEditor, \"wl/oH9OAEf314/RMbKC+3ZVoA0c=\");\n\n_c2 = MarkDownEditor;\nexport default MarkDownEditor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditorAreaWrapper\");\n$RefreshReg$(_c2, \"MarkDownEditor\");","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/MarkdownEditor/MarkdownEditor.tsx"],"names":["React","useCallback","useState","useEffect","useRef","styled","Theme","WritingArea","PostTitleInput","EditorTagArea","EditButtonBox","editInputText","EditorAreaWrapper","div","EMPHASIS","findCursorPoint","element","cursorPointStart","selectionStart","cursorPointEnd","selectionEnd","cursorPosition","MarkDownEditor","input","setInput","imageUrl","setImageUrl","uploadProcess","setUploadProcess","infoOfCursorToGo","setCursorPosition","inputAreaElem","propsAboutTextComponent","controlInputAndCursor","event","cursorPositionToGo","current","focus","insertImageMarkdown","isNotVaildUrl","undefined","length","inputWithNewImg","slice","moveCursorAfterEdit","didClickedEditButton","startPosition","endPosition","setSelectionRange"],"mappings":"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","sourcesContent":["import React, { ReactElement, useCallback, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport WritingArea from '@molecules/EditorWritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport EditorTagArea from '@molecules/EditorTagArea/index';\nimport EditButtonBox from '@molecules/EditButtonBox/index';\nimport editInputText from '@utils/editInputText';\nimport { IPostInputProps } from '@interfaces';\n\nconst EditorAreaWrapper = styled.div`\n  width: 50%;\n  height: 100vh;\n  & > hr {\n    position: absolute;\n    top: 13vh;\n    left: 3vw;\n    width: 9vw;\n    border: 4px solid ${() => Theme.EMPHASIS};\n    padding-bottm: 300px;\n  }\n\n  .tagModal {\n    top: 13.5em;\n  }\n\n  .show {\n    animation-name: bounce;\n    animation-duration: 0.5s;\n  }\n`;\n\nconst findCursorPoint = (element: HTMLTextAreaElement): number[] => {\n  const cursorPointStart = element?.selectionStart;\n  const cursorPointEnd = element?.selectionEnd;\n  const cursorPosition = [cursorPointStart, cursorPointEnd];\n\n  return cursorPosition;\n};\n\nfunction MarkDownEditor({ input, setInput }: IPostInputProps): ReactElement {\n  const [imageUrl, setImageUrl] = useState<string>('');\n  const [uploadProcess, setUploadProcess] = useState<number>(0);\n  const infoOfCursorToGo = useRef<[boolean, number[]]>([false, [0, 0]]);\n  const [cursorPosition, setCursorPosition] = useState([0, 0]);\n  const inputAreaElem = useRef<HTMLTextAreaElement>(null);\n\n  const propsAboutTextComponent = {\n    input,\n    setInput,\n    cursorPosition,\n    setCursorPosition,\n    findCursorPoint,\n    inputAreaElem,\n    infoOfCursorToGo,\n  };\n\n  const controlInputAndCursor = useCallback(\n    (event: React.MouseEvent<SVGElement, MouseEvent>) => {\n      const cursorPositionToGo = editInputText({ event, input, setInput, cursorPosition });\n      infoOfCursorToGo.current = [true, cursorPositionToGo];\n      inputAreaElem.current?.focus();\n    },\n    [input, cursorPosition],\n  );\n\n  const insertImageMarkdown = useCallback(() => {\n    const isNotVaildUrl = imageUrl === null || imageUrl === undefined || imageUrl.length === 0;\n    if (isNotVaildUrl) return;\n    const inputWithNewImg = `${input.slice(0, cursorPosition[0])}![](${imageUrl})${input.slice(cursorPosition[0])}`;\n    setInput(inputWithNewImg);\n    setImageUrl('');\n  }, [imageUrl]);\n\n  const moveCursorAfterEdit = useCallback(() => {\n    const didClickedEditButton = infoOfCursorToGo.current[0];\n    if (!didClickedEditButton) return;\n    const cursorPositionToGo = infoOfCursorToGo.current[1];\n    const [startPosition, endPosition] = cursorPositionToGo as number[];\n\n    inputAreaElem.current?.focus();\n    inputAreaElem.current?.setSelectionRange(startPosition, endPosition);\n    infoOfCursorToGo.current = [false, [0, 0]];\n    setCursorPosition(findCursorPoint(inputAreaElem.current as HTMLTextAreaElement));\n  }, [input]);\n\n  useEffect(() => {\n    moveCursorAfterEdit();\n  }, [input]);\n\n  useEffect(() => {\n    insertImageMarkdown();\n  }, [imageUrl]);\n\n  return (\n    <EditorAreaWrapper>\n      <PostTitleInput />\n      <hr />\n      <EditorTagArea />\n      <EditButtonBox\n        onClick={(event) => controlInputAndCursor(event)}\n        setImageUrl={setImageUrl}\n        setUploadProcess={setUploadProcess}\n      />\n      <WritingArea className=\"textInput\" propsAboutTextComponent={propsAboutTextComponent} />\n    </EditorAreaWrapper>\n  );\n}\n\nexport default MarkDownEditor;\n"]},"metadata":{},"sourceType":"module"}