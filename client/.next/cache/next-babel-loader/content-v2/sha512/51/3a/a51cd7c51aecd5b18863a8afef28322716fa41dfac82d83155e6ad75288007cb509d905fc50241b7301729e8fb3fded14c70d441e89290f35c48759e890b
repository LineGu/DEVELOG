{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/WritingArea/WritingArea.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nvar StyledMarkdownArea = styled.textarea.withConfig({\n  displayName: \"WritingArea__StyledMarkdownArea\",\n  componentId: \"sc-1i85scv-0\"\n})([\"width:100%;height:68vh;padding-left:3vw;font-size:1.5rem;pointer-events:auto;background-color:\", \";color:\", \";border:none;outline:none;resize:none;@media (max-width:\", \"){width:100%;border:none;}&::selection{background-color:#dfdfdf;}\"], function () {\n  return Theme.HEADER_BACK;\n}, function () {\n  return Theme.INTRO;\n}, function () {\n  return Theme.TABLET;\n});\n_c = StyledMarkdownArea;\n\nfunction WritingArea(_ref) {\n  var propsAboutTextComponent = _ref.propsAboutTextComponent,\n      className = _ref.className;\n  var input = propsAboutTextComponent.input,\n      setInput = propsAboutTextComponent.setInput,\n      setCursorPosition = propsAboutTextComponent.setCursorPosition,\n      findCursorPoint = propsAboutTextComponent.findCursorPoint,\n      inputAreaElem = propsAboutTextComponent.inputAreaElem;\n  return /*#__PURE__*/_jsxDEV(StyledMarkdownArea, {\n    className: className,\n    spellCheck: \"false\",\n    placeholder: \"\\uC774\\uC57C\\uAE30\\uB97C \\uC801\\uC5B4\\uBCF4\\uC138\\uC694..\",\n    value: input,\n    onChange: function onChange(event) {\n      setInput(event.target.value);\n    },\n    onClick: function onClick() {\n      return setCursorPosition(findCursorPoint(inputAreaElem.current));\n    },\n    onKeyUp: function onKeyUp(event) {\n      var cursorFinder = setTimeout(function () {\n        return setCursorPosition(findCursorPoint(inputAreaElem.current));\n      }, 400);\n      event.target.addEventListener('keyup', function () {\n        return clearTimeout(cursorFinder);\n      });\n    },\n    ref: inputAreaElem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = WritingArea;\nexport default WritingArea;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledMarkdownArea\");\n$RefreshReg$(_c2, \"WritingArea\");","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/WritingArea/WritingArea.tsx"],"names":["React","styled","Theme","StyledMarkdownArea","textarea","HEADER_BACK","INTRO","TABLET","WritingArea","propsAboutTextComponent","className","input","setInput","setCursorPosition","findCursorPoint","inputAreaElem","event","target","value","current","cursorFinder","setTimeout","addEventListener","clearTimeout"],"mappings":";;AAAA,OAAOA,KAAP,MAA8D,OAA9D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAGA,IAAMC,kBAAkB,GAAGF,MAAM,CAACG,QAAV;AAAA;AAAA;AAAA,mPAOF;AAAA,SAAMF,KAAK,CAACG,WAAZ;AAAA,CAPE,EASb;AAAA,SAAMH,KAAK,CAACI,KAAZ;AAAA,CATa,EAcD;AAAA,SAAMJ,KAAK,CAACK,MAAZ;AAAA,CAdC,CAAxB;KAAMJ,kB;;AAwBN,SAASK,WAAT,OAAyF;AAAA,MAAlEC,uBAAkE,QAAlEA,uBAAkE;AAAA,MAAzCC,SAAyC,QAAzCA,SAAyC;AAAA,MAC/EC,KAD+E,GACRF,uBADQ,CAC/EE,KAD+E;AAAA,MACxEC,QADwE,GACRH,uBADQ,CACxEG,QADwE;AAAA,MAC9DC,iBAD8D,GACRJ,uBADQ,CAC9DI,iBAD8D;AAAA,MAC3CC,eAD2C,GACRL,uBADQ,CAC3CK,eAD2C;AAAA,MAC1BC,aAD0B,GACRN,uBADQ,CAC1BM,aAD0B;AAEvF,sBACE,QAAC,kBAAD;AACE,IAAA,SAAS,EAAEL,SADb;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,WAAW,EAAC,2DAHd;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,QAAQ,EAAE,kBAACK,KAAD,EAAW;AACnBJ,MAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,KAPH;AAQE,IAAA,OAAO,EAAE;AAAA,aAAML,iBAAiB,CAACC,eAAe,CAACC,aAAa,CAACI,OAAf,CAAhB,CAAvB;AAAA,KARX;AASE,IAAA,OAAO,EAAE,iBAACH,KAAD,EAAW;AAClB,UAAMI,YAAY,GAAGC,UAAU,CAC7B;AAAA,eAAMR,iBAAiB,CAACC,eAAe,CAACC,aAAa,CAACI,OAAf,CAAhB,CAAvB;AAAA,OAD6B,EAE7B,GAF6B,CAA/B;AAIAH,MAAAA,KAAK,CAACC,MAAN,CAAaK,gBAAb,CAA8B,OAA9B,EAAuC;AAAA,eAAMC,YAAY,CAACH,YAAD,CAAlB;AAAA,OAAvC;AACD,KAfH;AAgBE,IAAA,GAAG,EAAEL;AAhBP;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;MAtBQP,W;AAwBT,eAAeA,WAAf","sourcesContent":["import React, { ReactElement, SetStateAction, Dispatch } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport { IEditorProps } from '@interfaces';\n\nconst StyledMarkdownArea = styled.textarea`\n  width: 100%;\n  height: 68vh;\n  padding-left: 3vw;\n  font-size: 1.5rem;\n  pointer-events: auto;\n\n  background-color: ${() => Theme.HEADER_BACK};\n\n  color: ${() => Theme.INTRO};\n  border: none;\n\n  outline: none;\n  resize: none;\n  @media (max-width: ${() => Theme.TABLET}) {\n    width: 100%;\n    border: none;\n  }\n\n  &::selection {\n    background-color: #dfdfdf;\n  }\n`;\n\nfunction WritingArea({ propsAboutTextComponent, className }: IEditorProps): ReactElement {\n  const { input, setInput, setCursorPosition, findCursorPoint, inputAreaElem } = propsAboutTextComponent;\n  return (\n    <StyledMarkdownArea\n      className={className}\n      spellCheck=\"false\"\n      placeholder=\"이야기를 적어보세요..\"\n      value={input}\n      onChange={(event) => {\n        setInput(event.target.value);\n      }}\n      onClick={() => setCursorPosition(findCursorPoint(inputAreaElem.current as HTMLTextAreaElement))}\n      onKeyUp={(event) => {\n        const cursorFinder = setTimeout(\n          () => setCursorPosition(findCursorPoint(inputAreaElem.current as HTMLTextAreaElement)),\n          400,\n        );\n        event.target.addEventListener('keyup', () => clearTimeout(cursorFinder));\n      }}\n      ref={inputAreaElem}\n    />\n  );\n}\n\nexport default WritingArea;\n"]},"metadata":{},"sourceType":"module"}