{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/PostTagInput/PostTagInput.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport MESSAGE from '@construction/message';\nimport TextInput from '@atoms/TextInput/index';\nimport STATE from '@construction/state';\nconst TextAreaForTag = styled(TextInput).withConfig({\n  displayName: \"PostTagInput__TextAreaForTag\",\n  componentId: \"sc-5hze2e-0\"\n})([\"border:none;outline:none;resize:none;pointer-events:auto;font-size:1.5em;font-weight:400;margin-left:0.4rem;background-color:\", \";color:\", \";&::placeholder{color:\", \";}&::selection{background-color:inherit;color:\", \";}@media (max-width:\", \"){font-size:1em;margin-left:1em;height:1.5em;}\"], () => Theme.HEADER_BACK, () => Theme.INTRO, () => Theme.TAG_PLACEHOLDER, () => Theme.TAG_PLACEHOLDER, () => Theme.MOBILE);\n\nfunction PostTagInput({\n  addTag,\n  setModalState,\n  setTagInput,\n  tagInput\n}) {\n  const renderTagChanged = event => {\n    const newTag = event.target.value;\n    const isValidTagForm = newTag[0] === '#' || newTag.length === 0;\n    if (isValidTagForm) setTagInput(newTag);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TextAreaForTag, {\n    placeholder: MESSAGE.TAG_PLACEHOLDER,\n    onFocus: () => setModalState(STATE.SHOW),\n    onBlur: () => setModalState(STATE.HIDE),\n    state: tagInput,\n    setState: setTagInput,\n    onChange: renderTagChanged,\n    onKeyDown: addTag\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\nexport default PostTagInput;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/PostTagInput/PostTagInput.tsx"],"names":["React","styled","Theme","MESSAGE","TextInput","STATE","TextAreaForTag","HEADER_BACK","INTRO","TAG_PLACEHOLDER","MOBILE","PostTagInput","addTag","setModalState","setTagInput","tagInput","renderTagChanged","event","newTag","target","value","isValidTagForm","length","SHOW","HIDE"],"mappings":";;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAGA,OAAOC,KAAP,MAAkB,qBAAlB;AASA,MAAMC,cAAc,GAAGL,MAAM,CAACG,SAAD,CAAT;AAAA;AAAA;AAAA,uSASE,MAAMF,KAAK,CAACK,WATd,EAUT,MAAML,KAAK,CAACM,KAVH,EAYP,MAAMN,KAAK,CAACO,eAZL,EAgBP,MAAMP,KAAK,CAACO,eAhBL,EAmBG,MAAMP,KAAK,CAACQ,MAnBf,CAApB;;AA0BA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,aAAV;AAAyBC,EAAAA,WAAzB;AAAsCC,EAAAA;AAAtC,CAAtB,EAA0G;AACxG,QAAMC,gBAAgB,GAAIC,KAAD,IAA8B;AACrD,UAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA5B;AACA,UAAMC,cAAc,GAAGH,MAAM,CAAC,CAAD,CAAN,KAAc,GAAd,IAAqBA,MAAM,CAACI,MAAP,KAAkB,CAA9D;AACA,QAAID,cAAJ,EAAoBP,WAAW,CAACI,MAAD,CAAX;AACrB,GAJD;;AAMA,sBACE,QAAC,cAAD;AACE,IAAA,WAAW,EAAEf,OAAO,CAACM,eADvB;AAEE,IAAA,OAAO,EAAE,MAAMI,aAAa,CAACR,KAAK,CAACkB,IAAP,CAF9B;AAGE,IAAA,MAAM,EAAE,MAAMV,aAAa,CAACR,KAAK,CAACmB,IAAP,CAH7B;AAIE,IAAA,KAAK,EAAET,QAJT;AAKE,IAAA,QAAQ,EAAED,WALZ;AAME,IAAA,QAAQ,EAAEE,gBANZ;AAOE,IAAA,SAAS,EAAEJ;AAPb;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;AAED,eAAeD,YAAf","sourcesContent":["import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport MESSAGE from '@construction/message';\nimport TextInput from '@atoms/TextInput/index';\nimport { SetStateString, ChangeEvent } from '@types';\nimport { IOnKeyboardFunc } from '@eventInterfaces';\nimport STATE from '@construction/state';\n\ninterface IPostTagInputProps {\n  addTag: IOnKeyboardFunc;\n  setModalState: SetStateString;\n  setTagInput: SetStateString;\n  tagInput: string;\n}\n\nconst TextAreaForTag = styled(TextInput)`\n  border: none;\n  outline: none;\n  resize: none;\n  pointer-events: auto;\n  font-size: 1.5em;\n  font-weight: 400;\n  margin-left: 0.4rem;\n\n  background-color: ${() => Theme.HEADER_BACK};\n  color: ${() => Theme.INTRO};\n  &::placeholder {\n    color: ${() => Theme.TAG_PLACEHOLDER};\n  }\n  &::selection {\n    background-color: inherit;\n    color: ${() => Theme.TAG_PLACEHOLDER};\n  }\n\n  @media (max-width: ${() => Theme.MOBILE}) {\n    font-size: 1em;\n    margin-left: 1em;\n    height: 1.5em;\n  }\n`;\n\nfunction PostTagInput({ addTag, setModalState, setTagInput, tagInput }: IPostTagInputProps): ReactElement {\n  const renderTagChanged = (event: ChangeEvent): void => {\n    const newTag = event.target.value;\n    const isValidTagForm = newTag[0] === '#' || newTag.length === 0;\n    if (isValidTagForm) setTagInput(newTag);\n  };\n\n  return (\n    <TextAreaForTag\n      placeholder={MESSAGE.TAG_PLACEHOLDER}\n      onFocus={() => setModalState(STATE.SHOW)}\n      onBlur={() => setModalState(STATE.HIDE)}\n      state={tagInput}\n      setState={setTagInput}\n      onChange={renderTagChanged}\n      onKeyDown={addTag}\n    />\n  );\n}\n\nexport default PostTagInput;\n"]},"metadata":{},"sourceType":"module"}