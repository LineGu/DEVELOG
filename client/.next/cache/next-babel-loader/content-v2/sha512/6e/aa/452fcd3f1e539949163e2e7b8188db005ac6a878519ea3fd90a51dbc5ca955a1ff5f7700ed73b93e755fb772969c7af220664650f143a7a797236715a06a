{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/EditorWritingArea/EditorWritingArea.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nconst StyledMarkdownArea = styled.textarea.withConfig({\n  displayName: \"EditorWritingArea__StyledMarkdownArea\",\n  componentId: \"kkpzo3-0\"\n})([\"width:100%;height:68vh;padding-left:3vw;font-size:1.5rem;pointer-events:auto;background-color:\", \";color:\", \";border:none;outline:none;resize:none;@media (max-width:\", \"){width:100%;border:none;}&::selection{background-color:#dfdfdf;}\"], () => Theme.HEADER_BACK, () => Theme.INTRO, () => Theme.TABLET);\n\nfunction EditorWritingArea({\n  propsAboutTextComponent,\n  className\n}) {\n  const {\n    input,\n    setInput,\n    setCursorPosition,\n    findCursorPoint,\n    inputAreaElem\n  } = propsAboutTextComponent;\n  return /*#__PURE__*/_jsxDEV(StyledMarkdownArea, {\n    className: className,\n    spellCheck: \"false\",\n    placeholder: \"\\uC774\\uC57C\\uAE30\\uB97C \\uC801\\uC5B4\\uBCF4\\uC138\\uC694..\",\n    value: input,\n    onChange: event => {\n      setInput(event.target.value);\n    },\n    onClick: () => setCursorPosition(findCursorPoint(inputAreaElem.current)),\n    onKeyUp: event => {\n      const cursorFinder = setTimeout(() => setCursorPosition(findCursorPoint(inputAreaElem.current)), 400);\n      event.target.addEventListener('keyup', () => clearTimeout(cursorFinder));\n    },\n    ref: inputAreaElem,\n    onDrop: event => {\n      const files = event.dataTransfer.files;\n      const isImage = files[0].type.includes('image');\n\n      if (!isImage) {\n        alert('이미지가 아닙니다.');\n        return;\n      }\n\n      console.log(files);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\nexport default EditorWritingArea;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/EditorWritingArea/EditorWritingArea.tsx"],"names":["React","styled","Theme","StyledMarkdownArea","textarea","HEADER_BACK","INTRO","TABLET","EditorWritingArea","propsAboutTextComponent","className","input","setInput","setCursorPosition","findCursorPoint","inputAreaElem","event","target","value","current","cursorFinder","setTimeout","addEventListener","clearTimeout","files","dataTransfer","isImage","type","includes","alert","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAGA,MAAMC,kBAAkB,GAAGF,MAAM,CAACG,QAAV;AAAA;AAAA;AAAA,mPAOF,MAAMF,KAAK,CAACG,WAPV,EASb,MAAMH,KAAK,CAACI,KATC,EAcD,MAAMJ,KAAK,CAACK,MAdX,CAAxB;;AAwBA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA,uBAAF;AAA2BC,EAAAA;AAA3B,CAA3B,EAA+F;AAC7F,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,iBAAnB;AAAsCC,IAAAA,eAAtC;AAAuDC,IAAAA;AAAvD,MAAyEN,uBAA/E;AAEA,sBACE,QAAC,kBAAD;AACE,IAAA,SAAS,EAAEC,SADb;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,WAAW,EAAC,2DAHd;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,QAAQ,EAAGK,KAAD,IAAW;AACnBJ,MAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,KAPH;AAQE,IAAA,OAAO,EAAE,MAAML,iBAAiB,CAACC,eAAe,CAACC,aAAa,CAACI,OAAf,CAAhB,CARlC;AASE,IAAA,OAAO,EAAGH,KAAD,IAAW;AAClB,YAAMI,YAAY,GAAGC,UAAU,CAC7B,MAAMR,iBAAiB,CAACC,eAAe,CAACC,aAAa,CAACI,OAAf,CAAhB,CADM,EAE7B,GAF6B,CAA/B;AAIAH,MAAAA,KAAK,CAACC,MAAN,CAAaK,gBAAb,CAA8B,OAA9B,EAAuC,MAAMC,YAAY,CAACH,YAAD,CAAzD;AACD,KAfH;AAgBE,IAAA,GAAG,EAAEL,aAhBP;AAiBE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,YAAMQ,KAAK,GAAGR,KAAK,CAACS,YAAN,CAAmBD,KAAjC;AACA,YAAME,OAAO,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASG,IAAT,CAAcC,QAAd,CAAuB,OAAvB,CAAhB;;AACA,UAAI,CAACF,OAAL,EAAc;AACZG,QAAAA,KAAK,CAAC,YAAD,CAAL;AACA;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD;AAzBH;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;AAED,eAAehB,iBAAf","sourcesContent":["import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport { IEditorProps } from '@interfaces';\n\nconst StyledMarkdownArea = styled.textarea`\n  width: 100%;\n  height: 68vh;\n  padding-left: 3vw;\n  font-size: 1.5rem;\n  pointer-events: auto;\n\n  background-color: ${() => Theme.HEADER_BACK};\n\n  color: ${() => Theme.INTRO};\n  border: none;\n\n  outline: none;\n  resize: none;\n  @media (max-width: ${() => Theme.TABLET}) {\n    width: 100%;\n    border: none;\n  }\n\n  &::selection {\n    background-color: #dfdfdf;\n  }\n`;\n\nfunction EditorWritingArea({ propsAboutTextComponent, className }: IEditorProps): ReactElement {\n  const { input, setInput, setCursorPosition, findCursorPoint, inputAreaElem } = propsAboutTextComponent;\n\n  return (\n    <StyledMarkdownArea\n      className={className}\n      spellCheck=\"false\"\n      placeholder=\"이야기를 적어보세요..\"\n      value={input}\n      onChange={(event) => {\n        setInput(event.target.value);\n      }}\n      onClick={() => setCursorPosition(findCursorPoint(inputAreaElem.current as HTMLTextAreaElement))}\n      onKeyUp={(event) => {\n        const cursorFinder = setTimeout(\n          () => setCursorPosition(findCursorPoint(inputAreaElem.current as HTMLTextAreaElement)),\n          400,\n        );\n        event.target.addEventListener('keyup', () => clearTimeout(cursorFinder));\n      }}\n      ref={inputAreaElem}\n      onDrop={(event) => {\n        const files = event.dataTransfer.files;\n        const isImage = files[0].type.includes('image');\n        if (!isImage) {\n          alert('이미지가 아닙니다.');\n          return;\n        }\n        console.log(files);\n      }}\n    />\n  );\n}\n\nexport default EditorWritingArea;\n"]},"metadata":{},"sourceType":"module"}