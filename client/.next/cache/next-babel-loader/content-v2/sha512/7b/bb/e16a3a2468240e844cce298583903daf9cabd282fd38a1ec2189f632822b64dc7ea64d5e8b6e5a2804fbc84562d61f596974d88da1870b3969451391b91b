{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/write/MarkdownStyleWrapper/CodeBoxStyle.tsx\";\nimport React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport useDependencyTheme from '@hooks/useDependencyTheme';\nimport { atelierCaveLight, a11yDark } from 'react-syntax-highlighter/dist/cjs/styles/hljs';\nimport Theme from 'src/constants/Theme';\nimport MODE from '@constants/mode';\n\nconst CodeBox = ({\n  value = '',\n  language = ''\n}) => {\n  const {\n    mode\n  } = useDependencyTheme();\n  const codeBoxThemeStyle = mode === MODE.LIGHT ? atelierCaveLight : a11yDark;\n  const codeBoxCustomStyle = {\n    lineHeight: '1.4em',\n    fontSize: '1.2em',\n    borderRadius: '0.5em',\n    backgroundColor: Theme.CODE_BOX\n  };\n  return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n    language: language,\n    style: codeBoxThemeStyle,\n    customStyle: codeBoxCustomStyle,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CodeBox;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/write/MarkdownStyleWrapper/CodeBoxStyle.tsx"],"names":["React","SyntaxHighlighter","useDependencyTheme","atelierCaveLight","a11yDark","Theme","MODE","CodeBox","value","language","mode","codeBoxThemeStyle","LIGHT","codeBoxCustomStyle","lineHeight","fontSize","borderRadius","backgroundColor","CODE_BOX"],"mappings":";;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,+CAA3C;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAQA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,EAAV;AAAcC,EAAAA,QAAQ,GAAG;AAAzB,CAAD,KAAgE;AAC9E,QAAM;AAAEC,IAAAA;AAAF,MAAWR,kBAAkB,EAAnC;AAEA,QAAMS,iBAAiB,GAAGD,IAAI,KAAKJ,IAAI,CAACM,KAAd,GAAsBT,gBAAtB,GAAyCC,QAAnE;AACA,QAAMS,kBAAkB,GAAG;AACzBC,IAAAA,UAAU,EAAE,OADa;AAEzBC,IAAAA,QAAQ,EAAE,OAFe;AAGzBC,IAAAA,YAAY,EAAE,OAHW;AAIzBC,IAAAA,eAAe,EAAEZ,KAAK,CAACa;AAJE,GAA3B;AAOA,sBACE,QAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAET,QAA7B;AAAuC,IAAA,KAAK,EAAEE,iBAA9C;AAAiE,IAAA,WAAW,EAAEE,kBAA9E;AAAA,cACGL;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhBD;;AAkBA,eAAeD,OAAf","sourcesContent":["import React, { ReactElement } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport useDependencyTheme from '@hooks/useDependencyTheme';\nimport { atelierCaveLight, a11yDark } from 'react-syntax-highlighter/dist/cjs/styles/hljs';\nimport Theme from 'src/constants/Theme';\nimport MODE from '@constants/mode';\n\ninterface ICodeBoxProps {\n  value: string;\n  language: string;\n  className: string;\n}\n\nconst CodeBox = ({ value = '', language = '' }: ICodeBoxProps): ReactElement => {\n  const { mode } = useDependencyTheme();\n\n  const codeBoxThemeStyle = mode === MODE.LIGHT ? atelierCaveLight : a11yDark;\n  const codeBoxCustomStyle = {\n    lineHeight: '1.4em',\n    fontSize: '1.2em',\n    borderRadius: '0.5em',\n    backgroundColor: Theme.CODE_BOX,\n  };\n\n  return (\n    <SyntaxHighlighter language={language} style={codeBoxThemeStyle} customStyle={codeBoxCustomStyle}>\n      {value}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default CodeBox;\n"]},"metadata":{},"sourceType":"module"}