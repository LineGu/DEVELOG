{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/atoms/TableModal/TableModal.tsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nconst StyledModal = styled.div.withConfig({\n  displayName: \"TableModal__StyledModal\",\n  componentId: \"sc-17zwdtm-0\"\n})([\"display:\", \";flex-direction:column;pointer-events:visibleFill;position:absolute;margin:0;padding:5px 15px 10px 15px;border-radius:0.2em;& > span{color:\", \";margin-bottom:10px;}& > div{display:flex;margin:0;padding:0;}background-color:\", \";\"], ({\n  isHidden\n}) => isHidden ? 'none' : 'flex', () => Theme.HEADER_BACK, () => Theme.MODAL_EDIT);\nconst StyledBlock = styled.div.withConfig({\n  displayName: \"TableModal__StyledBlock\",\n  componentId: \"sc-17zwdtm-1\"\n})([\"width:20px;height:20px;border:1px solid \", \";background-color:\", \";margin:2px;padding:0;\"], ({\n  colorProps\n}) => colorProps === Theme.HEADER_BACK ? Theme.OUT_LINE : Theme.HEADER_BACK, ({\n  colorProps\n}) => colorProps);\n\nfunction TableModal({\n  className,\n  isHidden\n}) {\n  const {\n    0: check,\n    1: setCheck\n  } = useState([-1, -1]);\n  const rowCount = new Array(10).fill(0);\n  const columnCount = new Array(8).fill(0);\n\n  const changeCheckPoint = event => {\n    const newCheckStr = event.currentTarget.id.split(',');\n    const newCheck = [parseInt(newCheckStr[0], 10), parseInt(newCheckStr[1], 10)];\n    setCheck(newCheck);\n    event.stopPropagation();\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledModal, {\n    isHidden: isHidden,\n    className: className,\n    onMouseLeave: () => setCheck([-1, -1]),\n    onMouseOver: () => setCheck([-1, -1]),\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: check[0] === -1 ? '표 삽입' : `${check[0] + 1} x ${check[1] + 1} 표`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), columnCount.map((__, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onMouseLeave: event => event.stopPropagation(),\n        onMouseOver: event => event.stopPropagation(),\n        onClick: () => console.log(document.getElementById('table')),\n        children: rowCount.map((__, subIndex) => /*#__PURE__*/_jsxDEV(StyledBlock, {\n          id: `${subIndex},${index}`,\n          onMouseOver: changeCheckPoint,\n          onMouseLeave: event => event.stopPropagation(),\n          colorProps: check[0] >= subIndex && check[1] >= index ? Theme.HEADER_BACK : Theme.MODAL_EDIT\n        }, index * 10 + subIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\nexport default TableModal;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/atoms/TableModal/TableModal.tsx"],"names":["React","useState","styled","Theme","StyledModal","div","isHidden","HEADER_BACK","MODAL_EDIT","StyledBlock","colorProps","OUT_LINE","TableModal","className","check","setCheck","rowCount","Array","fill","columnCount","changeCheckPoint","event","newCheckStr","currentTarget","id","split","newCheck","parseInt","stopPropagation","map","__","index","console","log","document","getElementById","subIndex"],"mappings":"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","sourcesContent":["import { IComponentProps } from '@interfaces';\nimport React, { ReactElement, useState } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport { IOnHoverDivFunc } from '@eventInterfaces';\n\ninterface ITableModalProps extends IComponentProps {\n  isHidden: boolean;\n}\n\nconst StyledModal = styled.div<{ isHidden: boolean }>`\n  display: ${({ isHidden }) => (isHidden ? 'none' : 'flex')};\n  flex-direction: column;\n  pointer-events: visibleFill;\n  position: absolute;\n  margin: 0;\n  padding: 5px 15px 10px 15px;\n  border-radius: 0.2em;\n  & > span {\n    color: ${() => Theme.HEADER_BACK};\n    margin-bottom: 10px;\n  }\n  & > div {\n    display: flex;\n    margin: 0;\n    padding: 0;\n  }\n  background-color: ${() => Theme.MODAL_EDIT};\n`;\n\nconst StyledBlock = styled.div<{ colorProps: string }>`\n  width: 20px;\n  height: 20px;\n  border: 1px solid ${({ colorProps }) => (colorProps === Theme.HEADER_BACK ? Theme.OUT_LINE : Theme.HEADER_BACK)};\n  background-color: ${({ colorProps }) => colorProps};\n  margin: 2px;\n  padding: 0;\n`;\n\nfunction TableModal({ className, isHidden }: ITableModalProps): ReactElement {\n  const [check, setCheck] = useState<number[]>([-1, -1]);\n  const rowCount = new Array(10).fill(0);\n  const columnCount = new Array(8).fill(0);\n\n  const changeCheckPoint: IOnHoverDivFunc = (event) => {\n    const newCheckStr: string[] = event.currentTarget.id.split(',');\n    const newCheck = [parseInt(newCheckStr[0], 10), parseInt(newCheckStr[1], 10)];\n    setCheck(newCheck);\n    event.stopPropagation();\n  };\n\n  return (\n    <StyledModal\n      isHidden={isHidden}\n      className={className}\n      onMouseLeave={() => setCheck([-1, -1])}\n      onMouseOver={() => setCheck([-1, -1])}\n    >\n      <span>{check[0] === -1 ? '표 삽입' : `${check[0] + 1} x ${check[1] + 1} 표`}</span>\n      {columnCount.map((__, index) => {\n        return (\n          <div\n            key={index}\n            onMouseLeave={(event) => event.stopPropagation()}\n            onMouseOver={(event) => event.stopPropagation()}\n            onClick={() => console.log(document.getElementById('table'))}\n          >\n            {rowCount.map((__, subIndex) => (\n              <StyledBlock\n                key={index * 10 + subIndex}\n                id={`${subIndex},${index}`}\n                onMouseOver={changeCheckPoint}\n                onMouseLeave={(event) => event.stopPropagation()}\n                colorProps={check[0] >= subIndex && check[1] >= index ? Theme.HEADER_BACK : Theme.MODAL_EDIT}\n              />\n            ))}\n          </div>\n        );\n      })}\n    </StyledModal>\n  );\n}\n\nexport default TableModal;\n"]},"metadata":{},"sourceType":"module"}