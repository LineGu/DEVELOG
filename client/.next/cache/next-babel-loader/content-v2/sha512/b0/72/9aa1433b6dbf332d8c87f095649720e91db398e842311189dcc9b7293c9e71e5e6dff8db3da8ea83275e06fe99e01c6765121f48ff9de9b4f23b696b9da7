{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/post/ToolBar/ToolBar.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Theme from '@constants/Theme';\nimport Buttons from '@components/post/ToolBar/Buttons';\nimport { Editors, tableEditor } from 'src/markdownController/ToolBarEditors';\nvar StyledEditButtonBox = styled.div.withConfig({\n  displayName: \"ToolBar__StyledEditButtonBox\",\n  componentId: \"hpu4uh-0\"\n})([\"display:flex;position:relative;-webkit-box-align:center;align-items:center;flex-wrap:wrap;margin:0 0 20px 60px;pointer-events:none;@media (max-width:\", \"){flex-wrap:nowrap;margin:0.2em 0.5em 1em 0.5em;pointer-events:auto;}@media (max-width:\", \"){flex-wrap:wrap;}& > svg,& > div > svg{margin:0 20px 15px 20px;@media (max-width:\", \"){margin:0 0.5em;}}\"], function () {\n  return Theme.MOBILE;\n}, function () {\n  return Theme.PC;\n}, function () {\n  return Theme.MOBILE;\n});\n_c = StyledEditButtonBox;\n\nfunction ToolBar(_ref) {\n  var editButtonProps = _ref.editButtonProps;\n  var input = editButtonProps.input,\n      setInput = editButtonProps.setInput,\n      setUploadState = editButtonProps.setUploadState,\n      moveCursor = editButtonProps.moveCursor,\n      cursorPosition = editButtonProps.cursorPosition;\n\n  var onClickEditButton = function onClickEditButton(editType) {\n    var editor = Editors[editType];\n    var updatedInput = editor.onClickEditButton({\n      input: input,\n      cursorPosition: cursorPosition,\n      moveCursor: moveCursor\n    });\n    setInput(updatedInput);\n  };\n\n  var onClickTableButton = function onClickTableButton(tableCount) {\n    var updatedInput = tableEditor.onClickEditButton({\n      input: input,\n      cursorPosition: cursorPosition,\n      moveCursor: moveCursor,\n      tableCount: tableCount\n    });\n    setInput(updatedInput);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledEditButtonBox, {\n    children: [/*#__PURE__*/_jsxDEV(Buttons.H1, {\n      onClick: function onClick() {\n        return onClickEditButton('h1');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons.H2, {\n      onClick: function onClick() {\n        return onClickEditButton('h2');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons.H3, {\n      onClick: function onClick() {\n        return onClickEditButton('h3');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons.Bold, {\n      onClick: function onClick() {\n        return onClickEditButton('bold');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons.Italic, {\n      onClick: function onClick() {\n        return onClickEditButton('italic');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons.Link, {\n      onClick: function onClick() {\n        return onClickEditButton('link');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons.Img, {\n      onClick: onClickEditButton,\n      setUploadState: setUploadState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons.Quote, {\n      onClick: function onClick() {\n        return onClickEditButton('quote');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons.Table, {\n      onClick: onClickTableButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons.Code, {\n      onClick: function onClick() {\n        return onClickEditButton('code');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons.CheckBox, {\n      onClick: function onClick() {\n        return onClickEditButton('checkbox');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = ToolBar;\nexport default ToolBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledEditButtonBox\");\n$RefreshReg$(_c2, \"ToolBar\");","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/post/ToolBar/ToolBar.tsx"],"names":["React","styled","Theme","Buttons","Editors","tableEditor","StyledEditButtonBox","div","MOBILE","PC","ToolBar","editButtonProps","input","setInput","setUploadState","moveCursor","cursorPosition","onClickEditButton","editType","editor","updatedInput","onClickTableButton","tableCount"],"mappings":"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","sourcesContent":["import React, { ReactElement, Dispatch, SetStateAction } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@constants/Theme';\nimport Buttons from '@components/post/ToolBar/Buttons';\nimport { IUploadState } from '@types';\nimport { Editors, tableEditor } from 'src/markdownController/ToolBarEditors';\n\ninterface IEditButtonProps {\n  editButtonProps: {\n    inputAreaElem: React.RefObject<HTMLTextAreaElement>;\n    setUploadState: React.Dispatch<React.SetStateAction<IUploadState>>;\n    moveCursor: (positionToGo: number[]) => void;\n    input: string;\n    setInput: Dispatch<SetStateAction<string>>;\n    cursorPosition: number[];\n  };\n}\n\nconst StyledEditButtonBox = styled.div`\n  display: flex;\n  position: relative;\n  -webkit-box-align: center;\n  align-items: center;\n  flex-wrap: wrap;\n  margin: 0 0 20px 60px;\n  pointer-events: none;\n\n  @media (max-width: ${() => Theme.MOBILE}) {\n    flex-wrap: nowrap;\n    margin: 0.2em 0.5em 1em 0.5em;\n    pointer-events: auto;\n  }\n\n  @media (max-width: ${() => Theme.PC}) {\n    flex-wrap: wrap;\n  }\n\n  & > svg,\n  & > div > svg {\n    margin: 0 20px 15px 20px;\n    @media (max-width: ${() => Theme.MOBILE}) {\n      margin: 0 0.5em;\n    }\n  }\n`;\n\nfunction ToolBar({ editButtonProps }: IEditButtonProps): ReactElement {\n  const { input, setInput, setUploadState, moveCursor, cursorPosition } = editButtonProps;\n\n  const onClickEditButton = (editType: string): void => {\n    const editor = Editors[editType];\n    const updatedInput = editor.onClickEditButton({ input, cursorPosition, moveCursor });\n    setInput(updatedInput);\n  };\n\n  const onClickTableButton = (tableCount: number[]) => {\n    const updatedInput = tableEditor.onClickEditButton({ input, cursorPosition, moveCursor, tableCount });\n    setInput(updatedInput);\n  };\n\n  return (\n    <StyledEditButtonBox>\n      <Buttons.H1 onClick={() => onClickEditButton('h1')} />\n      <Buttons.H2 onClick={() => onClickEditButton('h2')} />\n      <Buttons.H3 onClick={() => onClickEditButton('h3')} />\n      <Buttons.Bold onClick={() => onClickEditButton('bold')} />\n      <Buttons.Italic onClick={() => onClickEditButton('italic')} />\n      <Buttons.Link onClick={() => onClickEditButton('link')} />\n      <Buttons.Img onClick={onClickEditButton} setUploadState={setUploadState} />\n      <Buttons.Quote onClick={() => onClickEditButton('quote')} />\n      <Buttons.Table onClick={onClickTableButton} />\n      <Buttons.Code onClick={() => onClickEditButton('code')} />\n      <Buttons.CheckBox onClick={() => onClickEditButton('checkbox')} />\n    </StyledEditButtonBox>\n  );\n}\n\nexport default ToolBar;\n"]},"metadata":{},"sourceType":"module"}