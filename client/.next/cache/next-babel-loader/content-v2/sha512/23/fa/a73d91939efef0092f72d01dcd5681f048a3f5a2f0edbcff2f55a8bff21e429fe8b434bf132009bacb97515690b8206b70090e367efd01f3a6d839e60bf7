{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState, useEffect, useRef } from 'react';\nimport editByButton from '@utils/markdownEditor/index';\n\nvar useUloadingImg = function useUloadingImg(input, cursorPosition, setInput, setCursorToGo) {\n  _s();\n\n  var uploadStateInit = {\n    process: 0,\n    error: ''\n  };\n\n  var _useState = useState(''),\n      imageUrl = _useState[0],\n      setImageUrl = _useState[1];\n\n  var _useState2 = useState(uploadStateInit),\n      uploadState = _useState2[0],\n      setUploadState = _useState2[1];\n\n  var isUploading = useRef(false);\n  isUploading.current = uploadState.process !== 0;\n  useEffect(function () {\n    if (!isUploading.current) return;\n    var currentCursor = cursorPosition[0];\n    var inputInsertedUploading = \"\".concat(input.slice(0, currentCursor), \"![Loading...]()\").concat(input.slice(currentCursor));\n    setInput(inputInsertedUploading);\n  }, [isUploading.current]);\n  var insertImageMarkdown = useCallback(function () {\n    var isNotVaildUrl = imageUrl === null || imageUrl === undefined || imageUrl.length === 0;\n\n    if (uploadState.error) {\n      alert('이미지 업로드 실패');\n      var previousInput = \"\".concat(input.slice(0, cursorPosition[0])).concat(input.slice(cursorPosition[0] + 15));\n      setInput(previousInput);\n      setImageUrl('');\n      setUploadState(uploadStateInit);\n      return;\n    }\n\n    if (isNotVaildUrl) return;\n    var inputAfterLoading = input.slice(0, cursorPosition[0]) + input.slice(cursorPosition[0] + 15);\n\n    var _editByButton = editByButton({\n      input: inputAfterLoading,\n      cursorPosition: cursorPosition,\n      url: imageUrl\n    }),\n        updatedText = _editByButton.updatedText,\n        cursorToGo = _editByButton.cursorToGo;\n\n    setInput(updatedText);\n    setImageUrl('');\n  }, [imageUrl, uploadState]);\n  useEffect(function () {\n    insertImageMarkdown();\n  }, [imageUrl, uploadState]);\n  return {\n    uploadState: uploadState,\n    setImageUrl: setImageUrl,\n    setUploadState: setUploadState\n  };\n};\n\n_s(useUloadingImg, \"L71XcUkDfBUXmUfOsmaL0qqnAGw=\");\n\nexport default useUloadingImg;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/hooks/useUploadingImg.tsx"],"names":["useCallback","useState","useEffect","useRef","editByButton","useUloadingImg","input","cursorPosition","setInput","setCursorToGo","uploadStateInit","process","error","imageUrl","setImageUrl","uploadState","setUploadState","isUploading","current","currentCursor","inputInsertedUploading","slice","insertImageMarkdown","isNotVaildUrl","undefined","length","alert","previousInput","inputAfterLoading","url","updatedText","cursorToGo"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from 'react';\nimport { IUploadState } from '@interfaces';\nimport { SetStateString } from '@types';\nimport editByButton from '@utils/markdownEditor/index';\n\ninterface IUploadingImgHook {\n  (\n    input: string,\n    cursorPosition: number[],\n    setInput: SetStateString,\n    setCursorToGo: React.Dispatch<React.SetStateAction<number[]>>,\n  ): {\n    setImageUrl: SetStateString;\n    setUploadState: React.Dispatch<React.SetStateAction<IUploadState>>;\n    uploadState: IUploadState;\n  };\n}\n\nconst useUloadingImg: IUploadingImgHook = (input, cursorPosition, setInput, setCursorToGo) => {\n  const uploadStateInit = { process: 0, error: '' };\n  const [imageUrl, setImageUrl] = useState<string>('');\n  const [uploadState, setUploadState] = useState<IUploadState>(uploadStateInit);\n  const isUploading = useRef(false);\n\n  isUploading.current = uploadState.process !== 0;\n  useEffect(() => {\n    if (!isUploading.current) return;\n    const currentCursor = cursorPosition[0];\n    const inputInsertedUploading = `${input.slice(0, currentCursor)}![Loading...]()${input.slice(currentCursor)}`;\n    setInput(inputInsertedUploading);\n  }, [isUploading.current]);\n\n  const insertImageMarkdown = useCallback(() => {\n    const isNotVaildUrl = imageUrl === null || imageUrl === undefined || imageUrl.length === 0;\n    if (uploadState.error) {\n      alert('이미지 업로드 실패');\n      const previousInput = `${input.slice(0, cursorPosition[0])}${input.slice(cursorPosition[0] + 15)}`;\n      setInput(previousInput);\n      setImageUrl('');\n      setUploadState(uploadStateInit);\n      return;\n    }\n    if (isNotVaildUrl) return;\n\n    const inputAfterLoading = input.slice(0, cursorPosition[0]) + input.slice(cursorPosition[0] + 15);\n    const { updatedText, cursorToGo } = editByButton({ input: inputAfterLoading, cursorPosition, url: imageUrl });\n\n    setInput(updatedText);\n    setImageUrl('');\n  }, [imageUrl, uploadState]);\n\n  useEffect(() => {\n    insertImageMarkdown();\n  }, [imageUrl, uploadState]);\n\n  return { uploadState, setImageUrl, setUploadState };\n};\n\nexport default useUloadingImg;\n"]},"metadata":{},"sourceType":"module"}