{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useTextLoop = introList => {\n  const {\n    0: margin,\n    1: setMargin\n  } = useState('100%');\n  const {\n    0: opacity,\n    1: setOpacity\n  } = useState('100%');\n  const {\n    0: intro,\n    1: setIntro\n  } = useState(introList[0]);\n  useEffect(() => {\n    let mounted = true;\n    let i = 1;\n    setMargin('0%');\n    const timerToSetTiming = setTimeout(() => {\n      if (!mounted) {\n        clearTimeout(timerToSetTiming);\n        return;\n      }\n\n      setOpacity('0%');\n      const timerToHide = setInterval(() => {\n        if (!mounted) {\n          clearInterval(timerToHide);\n          return;\n        }\n\n        setMargin('-100%');\n        setOpacity('0%');\n      }, 4000);\n    }, 3000);\n    const timerToShow = setInterval(() => {\n      if (!mounted) {\n        clearInterval(timerToShow);\n        return;\n      }\n\n      setOpacity('100%');\n      setIntro(introList[i]);\n      i += 1;\n      i = i > 3 ? 0 : i;\n    }, 4000);\n    return function cleanUp() {\n      mounted = false;\n    };\n  }, []);\n  return {\n    margin,\n    opacity,\n    intro\n  };\n};\n\nexport default useTextLoop;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/textLoop.tsx"],"names":["useState","useEffect","useTextLoop","introList","margin","setMargin","opacity","setOpacity","intro","setIntro","mounted","i","timerToSetTiming","setTimeout","clearTimeout","timerToHide","setInterval","clearInterval","timerToShow","cleanUp"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAQA,MAAMC,WAAW,GAAIC,SAAD,IAAqC;AACvD,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBL,QAAQ,CAAS,MAAT,CAApC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAS,MAAT,CAAtC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAASG,SAAS,CAAC,CAAD,CAAlB,CAAlC;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,OAAO,GAAG,IAAd;AACA,QAAIC,CAAC,GAAG,CAAR;AAEAN,IAAAA,SAAS,CAAC,IAAD,CAAT;AACA,UAAMO,gBAAgB,GAAGC,UAAU,CAAC,MAAM;AACxC,UAAI,CAACH,OAAL,EAAc;AACZI,QAAAA,YAAY,CAACF,gBAAD,CAAZ;AACA;AACD;;AACDL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMQ,WAAW,GAAGC,WAAW,CAAC,MAAM;AACpC,YAAI,CAACN,OAAL,EAAc;AACZO,UAAAA,aAAa,CAACF,WAAD,CAAb;AACA;AACD;;AACDV,QAAAA,SAAS,CAAC,OAAD,CAAT;AACAE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAP8B,EAO5B,IAP4B,CAA/B;AAQD,KAdkC,EAchC,IAdgC,CAAnC;AAgBA,UAAMW,WAAW,GAAGF,WAAW,CAAC,MAAM;AACpC,UAAI,CAACN,OAAL,EAAc;AACZO,QAAAA,aAAa,CAACC,WAAD,CAAb;AACA;AACD;;AACDX,MAAAA,UAAU,CAAC,MAAD,CAAV;AACAE,MAAAA,QAAQ,CAACN,SAAS,CAACQ,CAAD,CAAV,CAAR;AACAA,MAAAA,CAAC,IAAI,CAAL;AACAA,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAYA,CAAhB;AACD,KAT8B,EAS5B,IAT4B,CAA/B;AAWA,WAAO,SAASQ,OAAT,GAAmB;AACxBT,MAAAA,OAAO,GAAG,KAAV;AACD,KAFD;AAGD,GAnCQ,EAmCN,EAnCM,CAAT;AAqCA,SAAO;AAAEN,IAAAA,MAAF;AAAUE,IAAAA,OAAV;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CA1CD;;AA4CA,eAAeN,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\ntype ReturnType = {\n  margin: string;\n  opacity: string;\n  intro: string;\n};\n\nconst useTextLoop = (introList: string[]): ReturnType => {\n  const [margin, setMargin] = useState<string>('100%');\n  const [opacity, setOpacity] = useState<string>('100%');\n  const [intro, setIntro] = useState<string>(introList[0]);\n  useEffect(() => {\n    let mounted = true;\n    let i = 1;\n\n    setMargin('0%');\n    const timerToSetTiming = setTimeout(() => {\n      if (!mounted) {\n        clearTimeout(timerToSetTiming);\n        return;\n      }\n      setOpacity('0%');\n      const timerToHide = setInterval(() => {\n        if (!mounted) {\n          clearInterval(timerToHide);\n          return;\n        }\n        setMargin('-100%');\n        setOpacity('0%');\n      }, 4000);\n    }, 3000);\n\n    const timerToShow = setInterval(() => {\n      if (!mounted) {\n        clearInterval(timerToShow);\n        return;\n      }\n      setOpacity('100%');\n      setIntro(introList[i]);\n      i += 1;\n      i = i > 3 ? 0 : i;\n    }, 4000);\n\n    return function cleanUp() {\n      mounted = false;\n    };\n  }, []);\n\n  return { margin, opacity, intro };\n};\n\nexport default useTextLoop;\n"]},"metadata":{},"sourceType":"module"}