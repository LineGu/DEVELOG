{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/ProcessBar/ProcessBar.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nconst StyledProcessBar = styled.hr.withConfig({\n  displayName: \"ProcessBar__StyledProcessBar\",\n  componentId: \"sc-1b6svix-0\"\n})([\"position:fixed;visibility:\", \";width:\", \"vw;border:8px solid \", \";margin:0;top:0;left:0;\"], ({\n  progress\n}) => progress === 0 ? 'hidden' : 'visible', ({\n  progress\n}) => progress, () => Theme.HOVER_POINT);\n\nfunction ProcessBar({\n  uploadState\n}) {\n  return /*#__PURE__*/_jsxDEV(StyledProcessBar, {\n    process: uploadState.progress !== 0 ? uploadState.progress : 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n}\n\nexport default ProcessBar;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/ProcessBar/ProcessBar.tsx"],"names":["React","styled","Theme","StyledProcessBar","hr","progress","HOVER_POINT","ProcessBar","uploadState"],"mappings":";;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAOA,MAAMC,gBAAgB,GAAGF,MAAM,CAACG,EAAV;AAAA;AAAA;AAAA,iGAEN,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmBA,QAAQ,KAAK,CAAb,GAAiB,QAAjB,GAA4B,SAFzC,EAGX,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAkBA,QAHP,EAIA,MAAMH,KAAK,CAACI,WAJZ,CAAtB;;AAUA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAsE;AACpE,sBAAO,QAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEA,WAAW,CAACH,QAAZ,KAAyB,CAAzB,GAA6BG,WAAW,CAACH,QAAzC,GAAoD;AAA/E;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,eAAeE,UAAf","sourcesContent":["import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport { IUploadState } from '@interfaces';\n\ninterface IPropcessBarProps {\n  uploadState: IUploadState;\n}\n\nconst StyledProcessBar = styled.hr<{ progress: number }>`\n  position: fixed;\n  visibility: ${({ progress }) => (progress === 0 ? 'hidden' : 'visible')};\n  width: ${({ progress }) => progress}vw;\n  border: 8px solid ${() => Theme.HOVER_POINT};\n  margin: 0;\n  top: 0;\n  left: 0;\n`;\n\nfunction ProcessBar({ uploadState }: IPropcessBarProps): ReactElement {\n  return <StyledProcessBar process={uploadState.progress !== 0 ? uploadState.progress : 0} />;\n}\n\nexport default ProcessBar;\n"]},"metadata":{},"sourceType":"module"}