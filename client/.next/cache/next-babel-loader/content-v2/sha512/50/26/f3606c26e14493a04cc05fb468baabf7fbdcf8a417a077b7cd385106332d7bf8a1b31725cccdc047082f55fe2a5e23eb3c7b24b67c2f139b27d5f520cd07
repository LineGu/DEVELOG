{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/MarkdownPreview/MarkdownPreview.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport useDependencyTheme from '@hook/useDependencyTheme';\nimport { atelierCaveLight, a11yDark } from 'react-syntax-highlighter/dist/cjs/styles/hljs';\nconst StyledPreviewBox = styled.div.withConfig({\n  displayName: \"MarkdownPreview__StyledPreviewBox\",\n  componentId: \"sc-14yslkb-0\"\n})([\"width:50%;background-color:\", \";@media (max-width:\", \"){display:none;}.preview{height:79vh;font-size:1.2rem;padding:10vh 6vw;outline:none;overflow-y:scroll;pointer-events:auto;color:\", \";h1{padding-bottom:1rem;border-bottom:1px solid \", \";}table{border-collapse:collapse;font-size:1rem;& th{border:1px solid \", \";border-bottom:2px solid \", \";padding:0.8rem 1.4rem;}& td{border:1px solid \", \";border-top:none;padding:0.8rem;}}a{color:\", \";text-decoration:none;}blockquote{margin:0;padding:0.2em;padding-left:3em;line-height:2rem;border-left:0.4em \", \" solid;background-color:\", \";}hr{width:100%;margin:2rem 0;color:\", \";opacity:60%;}p > code{font-size:1.3rem;font-weight:800;color:\", \";background-color:\", \";border-radius:0.3em;padding:0.15rem 0.5rem;margin:0 0.2rem 0 0.5rem;}img{width:25em;height:15em;}& > *::selection{background-color:inherit;}}\"], () => Theme.PREVIEW_BACK, () => Theme.PC, () => Theme.INTRO, () => Theme.LINK_MODAL, () => Theme.BASE, () => Theme.INTRO, () => Theme.BASE, () => Theme.MODE_MARK, () => Theme.POINT, () => Theme.QUOTE_BOX, () => Theme.BASE, () => Theme.CODE, () => Theme.EMPHASIS);\n\nconst CodeBox = ({\n  value,\n  language\n}) => {\n  const {\n    mode\n  } = useDependencyTheme();\n  const style = mode === 'LightMode' ? atelierCaveLight : a11yDark;\n  return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n    language: language !== null && language !== void 0 ? language : '',\n    style: style,\n    customStyle: {\n      lineHeight: '1.4em',\n      fontSize: '1.2em',\n      borderRadius: '0.5em',\n      backgroundColor: Theme.CODE_BOX\n    },\n    children: value !== null && value !== void 0 ? value : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\nconst LinkRenderer = props => /*#__PURE__*/_jsxDEV(\"a\", {\n  href: `http://${props.href}`,\n  target: \"_blank\",\n  rel: \"external nofollow noopener noreferrer\",\n  children: props.children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 111,\n  columnNumber: 3\n}, this);\n\nfunction MarkdownPreview({\n  input\n}) {\n  let source = input.replace(/\\n/gi, '\\\\\\n');\n\n  if (source.slice(source.length - 1, source.length) === '\\\\') {\n    source = source.slice(0, source.length - 100);\n  }\n\n  console.log(source);\n  console.log(input);\n  return /*#__PURE__*/_jsxDEV(StyledPreviewBox, {\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      plugins: [[gfm, {\n        tableCellPadding: 'true'\n      }]],\n      source: source,\n      className: \"preview\",\n      renderers: {\n        code: CodeBox,\n        link: LinkRenderer\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MarkdownPreview;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/MarkdownPreview/MarkdownPreview.tsx"],"names":["React","styled","Theme","ReactMarkdown","gfm","SyntaxHighlighter","useDependencyTheme","atelierCaveLight","a11yDark","StyledPreviewBox","div","PREVIEW_BACK","PC","INTRO","LINK_MODAL","BASE","MODE_MARK","POINT","QUOTE_BOX","CODE","EMPHASIS","CodeBox","value","language","mode","style","lineHeight","fontSize","borderRadius","backgroundColor","CODE_BOX","LinkRenderer","props","href","children","MarkdownPreview","input","source","replace","slice","length","console","log","tableCellPadding","code","link"],"mappings":"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","sourcesContent":["import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport useDependencyTheme from '@hook/useDependencyTheme';\nimport { atelierCaveLight, a11yDark } from 'react-syntax-highlighter/dist/cjs/styles/hljs';\nimport { ILinkProps } from '@interfaces';\n\ninterface ICodeBoxProps {\n  value: string;\n  language: string;\n  className: string;\n}\n\ninterface IPreviewProps {\n  input: string;\n}\n\nconst StyledPreviewBox = styled.div`\n  width: 50%;\n  background-color: ${() => Theme.PREVIEW_BACK};\n  @media (max-width: ${() => Theme.PC}) {\n    display: none;\n  }\n  .preview {\n    height: 79vh;\n    font-size: 1.2rem;\n    padding: 10vh 6vw;\n    outline: none;\n    overflow-y: scroll;\n    pointer-events: auto;\n    color: ${() => Theme.INTRO};\n\n    h1 {\n      padding-bottom: 1rem;\n      border-bottom: 1px solid ${() => Theme.LINK_MODAL};\n    }\n    table {\n      border-collapse: collapse;\n      font-size: 1rem;\n      & th {\n        border: 1px solid ${() => Theme.BASE};\n        border-bottom: 2px solid ${() => Theme.INTRO};\n        padding: 0.8rem 1.4rem;\n      }\n      & td {\n        border: 1px solid ${() => Theme.BASE};\n        border-top: none;\n        padding: 0.8rem;\n      }\n    }\n    a {\n      color: ${() => Theme.MODE_MARK};\n      text-decoration: none;\n    }\n    blockquote {\n      margin: 0;\n      padding: 0.2em;\n      padding-left: 3em;\n      line-height: 2rem;\n      border-left: 0.4em ${() => Theme.POINT} solid;\n      background-color: ${() => Theme.QUOTE_BOX};\n    }\n    hr {\n      width: 100%;\n      margin: 2rem 0;\n      color: ${() => Theme.BASE};\n      opacity: 60%;\n    }\n    p > code {\n      font-size: 1.3rem;\n      font-weight: 800;\n      color: ${() => Theme.CODE};\n      background-color: ${() => Theme.EMPHASIS};\n      border-radius: 0.3em;\n      padding: 0.15rem 0.5rem;\n      margin: 0 0.2rem 0 0.5rem;\n    }\n    img {\n      width: 25em;\n      height: 15em;\n    }\n    & > *::selection {\n      background-color: inherit;\n    }\n  }\n`;\n\nconst CodeBox = ({ value, language }: ICodeBoxProps): ReactElement => {\n  const { mode } = useDependencyTheme();\n  const style = mode === 'LightMode' ? atelierCaveLight : a11yDark;\n  return (\n    <SyntaxHighlighter\n      language={language ?? ''}\n      style={style}\n      customStyle={{\n        lineHeight: '1.4em',\n        fontSize: '1.2em',\n        borderRadius: '0.5em',\n        backgroundColor: Theme.CODE_BOX,\n      }}\n    >\n      {value ?? ''}\n    </SyntaxHighlighter>\n  );\n};\n\nconst LinkRenderer = (props: ILinkProps): ReactElement => (\n  <a href={`http://${props.href}`} target=\"_blank\" rel=\"external nofollow noopener noreferrer\">\n    {props.children}\n  </a>\n);\n\nfunction MarkdownPreview({ input }: IPreviewProps): ReactElement {\n  let source = input.replace(/\\n/gi, '\\\\\\n');\n  if (source.slice(source.length - 1, source.length) === '\\\\') {\n    source = source.slice(0, source.length - 100);\n  }\n  console.log(source);\n  console.log(input);\n  return (\n    <StyledPreviewBox>\n      <ReactMarkdown\n        plugins={[[gfm, { tableCellPadding: 'true' }]]}\n        source={source}\n        className=\"preview\"\n        renderers={{ code: CodeBox, link: LinkRenderer }}\n      />\n    </StyledPreviewBox>\n  );\n}\n\nexport default MarkdownPreview;\n"]},"metadata":{},"sourceType":"module"}