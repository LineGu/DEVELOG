{"ast":null,"code":"import _toConsumableArray from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { changeText, insertText, createTextsByLine, applyBlankToMarkdown, getBlankIdxsAfterLastText, getBlankIdxsBeforeText, getBlankIdxsInCodeBox, getBlankIdxsAfterTable } from '@utils/markdown/markdown';\n\nvar blankController = function blankController() {\n  var _this = this;\n\n  _classCallCheck(this, blankController);\n\n  _defineProperty(this, \"_enterStr\", '\\n');\n\n  _defineProperty(this, \"_spaceStr\", \"&nbsp;\");\n\n  _defineProperty(this, \"joinTexts\", function (TextsByLine) {\n    return TextsByLine.join(_this._enterStr);\n  });\n\n  _defineProperty(this, \"devideTextsByLine\", function (input) {\n    var TextsByLine = createTextsByLine(input);\n    return TextsByLine;\n  });\n\n  _defineProperty(this, \"applyBlank\", function (TextsByLine) {\n    var updatedTextsByLine = TextsByLine.map(function (text) {\n      return applyBlankToMarkdown(text);\n    });\n    return updatedTextsByLine;\n  });\n\n  _defineProperty(this, \"delInvalidBlank\", function (TextsByLine) {\n    var updatedTextsByLine = _toConsumableArray(TextsByLine);\n\n    updatedTextsByLine = _this._delBlankAfterLastText(TextsByLine);\n    console.log(updatedTextsByLine);\n    updatedTextsByLine = _this._delSlashBeforeText(TextsByLine);\n    updatedTextsByLine = _this._delBlankInCode(TextsByLine);\n    updatedTextsByLine = _this._delSlashAfterTable(TextsByLine);\n    return updatedTextsByLine;\n  });\n\n  _defineProperty(this, \"_delBlankAfterLastText\", function (TextsByLine) {\n    var blankIdxs = getBlankIdxsAfterLastText(TextsByLine);\n    return changeText(TextsByLine, blankIdxs, '');\n  });\n\n  _defineProperty(this, \"_delSlashBeforeText\", function (TextsByLine) {\n    var blankIdxsBeforeText = getBlankIdxsBeforeText(TextsByLine);\n    return changeText(TextsByLine, blankIdxsBeforeText, _this._spaceStr);\n  });\n\n  _defineProperty(this, \"_delBlankInCode\", function (TextsByLine) {\n    var idxsBlankInCodeBox = getBlankIdxsInCodeBox(TextsByLine);\n    return changeText(TextsByLine, idxsBlankInCodeBox, '');\n  });\n\n  _defineProperty(this, \"_delSlashAfterTable\", function (TextsByLine) {\n    var idxsSlashAfterTable = getBlankIdxsAfterTable(TextsByLine);\n    return insertText(TextsByLine, idxsSlashAfterTable, '');\n  });\n};\n\nexport { blankController as default };","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/markdownController/Controller/blank.ts"],"names":["changeText","insertText","createTextsByLine","applyBlankToMarkdown","getBlankIdxsAfterLastText","getBlankIdxsBeforeText","getBlankIdxsInCodeBox","getBlankIdxsAfterTable","blankController","TextsByLine","join","_enterStr","input","updatedTextsByLine","map","text","_delBlankAfterLastText","console","log","_delSlashBeforeText","_delBlankInCode","_delSlashAfterTable","blankIdxs","blankIdxsBeforeText","_spaceStr","idxsBlankInCodeBox","idxsSlashAfterTable"],"mappings":";;;AAAA,SACEA,UADF,EAEEC,UAFF,EAGEC,iBAHF,EAIEC,oBAJF,EAKEC,yBALF,EAMEC,sBANF,EAOEC,qBAPF,EAQEC,sBARF,QASO,0BATP;;IAWqBC,e;;;;;qCACC,I;;;;qCAIE,UAACC,WAAD,EAAmC;AACvD,WAAOA,WAAW,CAACC,IAAZ,CAAiB,KAAI,CAACC,SAAtB,CAAP;AACD,G;;6CAE6B,UAACC,KAAD,EAA6B;AACzD,QAAMH,WAAW,GAAGP,iBAAiB,CAACU,KAAD,CAArC;AACA,WAAOH,WAAP;AACD,G;;sCAEsB,UAACA,WAAD,EAAqC;AAC1D,QAAMI,kBAAkB,GAAGJ,WAAW,CAACK,GAAZ,CAAgB,UAACC,IAAD;AAAA,aAAUZ,oBAAoB,CAACY,IAAD,CAA9B;AAAA,KAAhB,CAA3B;AACA,WAAOF,kBAAP;AACD,G;;2CAE2B,UAACJ,WAAD,EAAqC;AAC/D,QAAII,kBAA4B,sBAAOJ,WAAP,CAAhC;;AACAI,IAAAA,kBAAkB,GAAG,KAAI,CAACG,sBAAL,CAA4BP,WAA5B,CAArB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYL,kBAAZ;AACAA,IAAAA,kBAAkB,GAAG,KAAI,CAACM,mBAAL,CAAyBV,WAAzB,CAArB;AACAI,IAAAA,kBAAkB,GAAG,KAAI,CAACO,eAAL,CAAqBX,WAArB,CAArB;AACAI,IAAAA,kBAAkB,GAAG,KAAI,CAACQ,mBAAL,CAAyBZ,WAAzB,CAArB;AACA,WAAOI,kBAAP;AACD,G;;kDAEgC,UAACJ,WAAD,EAAqC;AACpE,QAAMa,SAAS,GAAGlB,yBAAyB,CAACK,WAAD,CAA3C;AACA,WAAOT,UAAU,CAACS,WAAD,EAAca,SAAd,EAAyB,EAAzB,CAAjB;AACD,G;;+CAE6B,UAACb,WAAD,EAAqC;AACjE,QAAMc,mBAAmB,GAAGlB,sBAAsB,CAACI,WAAD,CAAlD;AACA,WAAOT,UAAU,CAACS,WAAD,EAAcc,mBAAd,EAAmC,KAAI,CAACC,SAAxC,CAAjB;AACD,G;;2CAEyB,UAACf,WAAD,EAAqC;AAC7D,QAAMgB,kBAA4B,GAAGnB,qBAAqB,CAACG,WAAD,CAA1D;AACA,WAAOT,UAAU,CAACS,WAAD,EAAcgB,kBAAd,EAAkC,EAAlC,CAAjB;AACD,G;;+CAE6B,UAAChB,WAAD,EAAqC;AACjE,QAAMiB,mBAA6B,GAAGnB,sBAAsB,CAACE,WAAD,CAA5D;AACA,WAAOR,UAAU,CAACQ,WAAD,EAAciB,mBAAd,EAAmC,EAAnC,CAAjB;AACD,G;;;SA/CkBlB,e","sourcesContent":["import {\n  changeText,\n  insertText,\n  createTextsByLine,\n  applyBlankToMarkdown,\n  getBlankIdxsAfterLastText,\n  getBlankIdxsBeforeText,\n  getBlankIdxsInCodeBox,\n  getBlankIdxsAfterTable,\n} from '@utils/markdown/markdown';\n\nexport default class blankController {\n  private _enterStr = '\\n';\n\n  private _spaceStr = `&nbsp;`;\n\n  protected joinTexts = (TextsByLine: string[]): string => {\n    return TextsByLine.join(this._enterStr);\n  };\n\n  protected devideTextsByLine = (input: string): string[] => {\n    const TextsByLine = createTextsByLine(input);\n    return TextsByLine;\n  };\n\n  protected applyBlank = (TextsByLine: string[]): string[] => {\n    const updatedTextsByLine = TextsByLine.map((text) => applyBlankToMarkdown(text));\n    return updatedTextsByLine;\n  };\n\n  protected delInvalidBlank = (TextsByLine: string[]): string[] => {\n    let updatedTextsByLine: string[] = [...TextsByLine];\n    updatedTextsByLine = this._delBlankAfterLastText(TextsByLine);\n    console.log(updatedTextsByLine);\n    updatedTextsByLine = this._delSlashBeforeText(TextsByLine);\n    updatedTextsByLine = this._delBlankInCode(TextsByLine);\n    updatedTextsByLine = this._delSlashAfterTable(TextsByLine);\n    return updatedTextsByLine;\n  };\n\n  private _delBlankAfterLastText = (TextsByLine: string[]): string[] => {\n    const blankIdxs = getBlankIdxsAfterLastText(TextsByLine);\n    return changeText(TextsByLine, blankIdxs, '');\n  };\n\n  private _delSlashBeforeText = (TextsByLine: string[]): string[] => {\n    const blankIdxsBeforeText = getBlankIdxsBeforeText(TextsByLine);\n    return changeText(TextsByLine, blankIdxsBeforeText, this._spaceStr);\n  };\n\n  private _delBlankInCode = (TextsByLine: string[]): string[] => {\n    const idxsBlankInCodeBox: number[] = getBlankIdxsInCodeBox(TextsByLine);\n    return changeText(TextsByLine, idxsBlankInCodeBox, '');\n  };\n\n  private _delSlashAfterTable = (TextsByLine: string[]): string[] => {\n    const idxsSlashAfterTable: number[] = getBlankIdxsAfterTable(TextsByLine);\n    return insertText(TextsByLine, idxsSlashAfterTable, '');\n  };\n}\n"]},"metadata":{},"sourceType":"module"}