{"ast":null,"code":"import _classCallCheck from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport CurrentInsertion from './CurrentInsertion';\n\nvar AbstractTextEditor = /*#__PURE__*/function (_CurrentInsertion) {\n  _inherits(AbstractTextEditor, _CurrentInsertion);\n\n  var _super = _createSuper(AbstractTextEditor);\n\n  function AbstractTextEditor() {\n    var _this;\n\n    _classCallCheck(this, AbstractTextEditor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickEditButton\", function (_ref) {\n      var input = _ref.input,\n          cursorPosition = _ref.cursorPosition,\n          moveCursor = _ref.moveCursor;\n      var currentCursorIndex = cursorPosition[0];\n      var isSelected = cursorPosition[0] !== cursorPosition[1];\n\n      _this.setIndexToInsert(currentCursorIndex);\n\n      _this.setIndexToGo(currentCursorIndex);\n\n      var updatedText = _this.insertText(input);\n\n      _this.moveCursorAfterEdit(moveCursor);\n\n      return updatedText;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"delSelectText\", function (input, cursorPosition) {\n      var updatedInput = input.slice(0, cursorPosition[0]) + input.slice(cursorPosition[1]);\n      return updatedInput;\n    });\n\n    return _this;\n  }\n\n  return AbstractTextEditor;\n}(CurrentInsertion);\n\nexport { AbstractTextEditor as default };","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/markdownController/ToolBarEditors/Abstract/TextEditor.ts"],"names":["CurrentInsertion","AbstractTextEditor","input","cursorPosition","moveCursor","currentCursorIndex","isSelected","setIndexToInsert","setIndexToGo","updatedText","insertText","moveCursorAfterEdit","updatedInput","slice"],"mappings":";;;;;;;;;;;AACA,OAAOA,gBAAP,MAA6B,oBAA7B;;IAE8BC,kB;;;;;;;;;;;;;;;;wEACD,gBAAuE;AAAA,UAApEC,KAAoE,QAApEA,KAAoE;AAAA,UAA7DC,cAA6D,QAA7DA,cAA6D;AAAA,UAA7CC,UAA6C,QAA7CA,UAA6C;AAChG,UAAMC,kBAAkB,GAAGF,cAAc,CAAC,CAAD,CAAzC;AACA,UAAMG,UAAU,GAAGH,cAAc,CAAC,CAAD,CAAd,KAAsBA,cAAc,CAAC,CAAD,CAAvD;;AACA,YAAKI,gBAAL,CAAsBF,kBAAtB;;AACA,YAAKG,YAAL,CAAkBH,kBAAlB;;AACA,UAAMI,WAAW,GAAG,MAAKC,UAAL,CAAgBR,KAAhB,CAApB;;AACA,YAAKS,mBAAL,CAAyBP,UAAzB;;AAEA,aAAOK,WAAP;AACD,K;;oEAEsB,UAACP,KAAD,EAAgBC,cAAhB,EAAqD;AAC1E,UAAMS,YAAY,GAAGV,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAeV,cAAc,CAAC,CAAD,CAA7B,IAAoCD,KAAK,CAACW,KAAN,CAAYV,cAAc,CAAC,CAAD,CAA1B,CAAzD;AAEA,aAAOS,YAAP;AACD,K;;;;;;EAhBsDZ,gB;;SAA3BC,kB","sourcesContent":["import { IOnClickEditButton } from '@types';\nimport CurrentInsertion from './CurrentInsertion';\n\nexport default abstract class AbstractTextEditor extends CurrentInsertion {\n  public onClickEditButton = ({ input, cursorPosition, moveCursor }: IOnClickEditButton): string => {\n    const currentCursorIndex = cursorPosition[0];\n    const isSelected = cursorPosition[0] !== cursorPosition[1];\n    this.setIndexToInsert(currentCursorIndex);\n    this.setIndexToGo(currentCursorIndex);\n    const updatedText = this.insertText(input);\n    this.moveCursorAfterEdit(moveCursor);\n\n    return updatedText;\n  };\n\n  public delSelectText = (input: string, cursorPosition: number[]): string => {\n    const updatedInput = input.slice(0, cursorPosition[0]) + input.slice(cursorPosition[1]);\n\n    return updatedInput;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}