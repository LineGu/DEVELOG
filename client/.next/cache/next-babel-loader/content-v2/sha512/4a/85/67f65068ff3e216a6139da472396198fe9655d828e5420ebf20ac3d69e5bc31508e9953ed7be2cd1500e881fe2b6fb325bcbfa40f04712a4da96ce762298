{"ast":null,"code":"import { useState, useEffect } from 'react';\n\nconst useTimeLoop = introList => {\n  const {\n    0: margin,\n    1: setMargin\n  } = useState('100%');\n  const {\n    0: opacity,\n    1: setOpacity\n  } = useState('100%');\n  const {\n    0: intro,\n    1: setIntro\n  } = useState(introList[0]);\n  useEffect(() => {\n    let mounted = true;\n\n    function interactiveIntro() {\n      let i = 1;\n      setMargin('0%');\n      setTimeout(() => {\n        setOpacity('0%');\n        const timerToHide = setInterval(() => {\n          if (!mounted) {\n            clearInterval(timerToHide);\n            return;\n          }\n\n          setOpacity('0%');\n        }, 4000);\n      }, 3000);\n      const timerToShow = setInterval(() => {\n        if (!mounted) {\n          clearInterval(timerToShow);\n          return;\n        }\n\n        setOpacity('100%');\n        setIntro(introList[i]);\n        i += 1;\n        i = i > 3 ? 0 : i;\n      }, 4000);\n    }\n\n    interactiveIntro();\n    return function cleanUp() {\n      mounted = false;\n    };\n  }, []);\n  return {\n    margin,\n    opacity,\n    intro\n  };\n};\n\nexport default useTimeLoop;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/textLoop.tsx"],"names":["useState","useEffect","useTimeLoop","introList","margin","setMargin","opacity","setOpacity","intro","setIntro","mounted","interactiveIntro","i","setTimeout","timerToHide","setInterval","clearInterval","timerToShow","cleanUp"],"mappings":"AAAA,SAAgBA,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAQA,MAAMC,WAAW,GAAIC,SAAD,IAAqC;AACvD,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBL,QAAQ,CAAS,MAAT,CAApC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAS,MAAT,CAAtC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAASG,SAAS,CAAC,CAAD,CAAlB,CAAlC;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,OAAO,GAAG,IAAd;;AACA,aAASC,gBAAT,GAA4B;AAC1B,UAAIC,CAAC,GAAG,CAAR;AACAP,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAQ,MAAAA,UAAU,CAAC,MAAM;AACfN,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAMO,WAAW,GAAGC,WAAW,CAAC,MAAM;AACpC,cAAI,CAACL,OAAL,EAAc;AACZM,YAAAA,aAAa,CAACF,WAAD,CAAb;AACA;AACD;;AACDP,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD,SAN8B,EAM5B,IAN4B,CAA/B;AAOD,OATS,EASP,IATO,CAAV;AAWA,YAAMU,WAAW,GAAGF,WAAW,CAAC,MAAM;AACpC,YAAI,CAACL,OAAL,EAAc;AACZM,UAAAA,aAAa,CAACC,WAAD,CAAb;AACA;AACD;;AACDV,QAAAA,UAAU,CAAC,MAAD,CAAV;AACAE,QAAAA,QAAQ,CAACN,SAAS,CAACS,CAAD,CAAV,CAAR;AACAA,QAAAA,CAAC,IAAI,CAAL;AACAA,QAAAA,CAAC,GAAGA,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAYA,CAAhB;AACD,OAT8B,EAS5B,IAT4B,CAA/B;AAUD;;AACDD,IAAAA,gBAAgB;AAChB,WAAO,SAASO,OAAT,GAAmB;AACxBR,MAAAA,OAAO,GAAG,KAAV;AACD,KAFD;AAGD,GA/BQ,EA+BN,EA/BM,CAAT;AAiCA,SAAO;AAAEN,IAAAA,MAAF;AAAUE,IAAAA,OAAV;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CAtCD;;AAwCA,eAAeN,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\ntype ReturnType = {\n  margin: string;\n  opacity: string;\n  intro: string;\n};\n\nconst useTimeLoop = (introList: string[]): ReturnType => {\n  const [margin, setMargin] = useState<string>('100%');\n  const [opacity, setOpacity] = useState<string>('100%');\n  const [intro, setIntro] = useState<string>(introList[0]);\n  useEffect(() => {\n    let mounted = true;\n    function interactiveIntro() {\n      let i = 1;\n      setMargin('0%');\n      setTimeout(() => {\n        setOpacity('0%');\n        const timerToHide = setInterval(() => {\n          if (!mounted) {\n            clearInterval(timerToHide);\n            return;\n          }\n          setOpacity('0%');\n        }, 4000);\n      }, 3000);\n\n      const timerToShow = setInterval(() => {\n        if (!mounted) {\n          clearInterval(timerToShow);\n          return;\n        }\n        setOpacity('100%');\n        setIntro(introList[i]);\n        i += 1;\n        i = i > 3 ? 0 : i;\n      }, 4000);\n    }\n    interactiveIntro();\n    return function cleanUp() {\n      mounted = false;\n    };\n  }, []);\n\n  return { margin, opacity, intro };\n};\n\nexport default useTimeLoop;\n"]},"metadata":{},"sourceType":"module"}