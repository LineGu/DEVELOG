{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Editor from './Editor';\nexport default class CurrentInsertEditor extends Editor {\n  constructor(editType) {\n    super();\n\n    _defineProperty(this, \"insertionText\", void 0);\n\n    _defineProperty(this, \"editType\", void 0);\n\n    _defineProperty(this, \"positionToMove\", {\n      bold: [2, 5],\n      italic: [1, 4],\n      link: [1, 6],\n      code: [5, 9]\n    });\n\n    _defineProperty(this, \"editInput\", (input, cursorPosition) => {\n      const currentPositon = cursorPosition[0];\n      const updatedText = this.insertText(this.insertionText, input, currentPositon);\n      const pointToGo = this.positionToMove[this.editType];\n      return {\n        updatedText,\n        cursorToGo: pointToGo\n      };\n    });\n\n    this.insertionText = this.stringToInsert[editType];\n    this.editType = editType;\n  }\n\n}","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/markdownEditor/CurrentInsertEditor.ts"],"names":["Editor","CurrentInsertEditor","constructor","editType","bold","italic","link","code","input","cursorPosition","currentPositon","updatedText","insertText","insertionText","pointToGo","positionToMove","cursorToGo","stringToInsert"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AAUA,eAAe,MAAMC,mBAAN,SAAkCD,MAAlC,CAAyC;AAK/CE,EAAAA,WAAP,CAAmBC,QAAnB,EAAqC;AACnC;;AADmC;;AAAA;;AAAA,4CAMM;AACzCC,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CADmC;AAEzCC,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFiC;AAGzCC,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAHmC;AAIzCC,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AAJmC,KANN;;AAAA,uCAalB,CAACC,KAAD,EAAgBC,cAAhB,KAA4F;AAC7G,YAAMC,cAAc,GAAGD,cAAc,CAAC,CAAD,CAArC;AACA,YAAME,WAAW,GAAG,KAAKC,UAAL,CAAgB,KAAKC,aAArB,EAAoCL,KAApC,EAA2CE,cAA3C,CAApB;AACA,YAAMI,SAAS,GAAG,KAAKC,cAAL,CAAoB,KAAKZ,QAAzB,CAAlB;AACA,aAAO;AAAEQ,QAAAA,WAAF;AAAeK,QAAAA,UAAU,EAAEF;AAA3B,OAAP;AACD,KAlBoC;;AAEnC,SAAKD,aAAL,GAAqB,KAAKI,cAAL,CAAoBd,QAApB,CAArB;AACA,SAAKA,QAAL,GAAgBA,QAAhB;AACD;;AATqD","sourcesContent":["import Editor from './Editor';\n\ntype positionToMoveObj = {\n  [type: string]: number[];\n  bold: number[];\n  italic: number[];\n  link: number[];\n  code: number[];\n};\n\nexport default class CurrentInsertEditor extends Editor {\n  public insertionText: string;\n\n  public editType: string;\n\n  public constructor(editType: string) {\n    super();\n    this.insertionText = this.stringToInsert[editType];\n    this.editType = editType;\n  }\n\n  public positionToMove: positionToMoveObj = {\n    bold: [2, 5],\n    italic: [1, 4],\n    link: [1, 6],\n    code: [5, 9],\n  };\n\n  public editInput = (input: string, cursorPosition: number[]): { updatedText: string; cursorToGo: number[] } => {\n    const currentPositon = cursorPosition[0];\n    const updatedText = this.insertText(this.insertionText, input, currentPositon);\n    const pointToGo = this.positionToMove[this.editType];\n    return { updatedText, cursorToGo: pointToGo };\n  };\n}\n"]},"metadata":{},"sourceType":"module"}