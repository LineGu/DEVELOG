{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/MarkdownPreview/MarkdownPreview.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport { MarkdownStyleWrapper, CodeBox, LinkRenderer } from '@molecules/MarkdownStyleWrapper/index';\nvar StyledPreviewBox = styled(MarkdownStyleWrapper).withConfig({\n  displayName: \"MarkdownPreview__StyledPreviewBox\",\n  componentId: \"sc-14yslkb-0\"\n})([\"width:50%;background-color:\", \";@media (max-width:\", \"){display:none;}\"], function () {\n  return Theme.PREVIEW_BACK;\n}, function () {\n  return Theme.PC;\n});\n_c = StyledPreviewBox;\n\nfunction MarkdownPreview(_ref) {\n  var input = _ref.input;\n  var source = input.replace(/\\n/gi, '\\\\\\n');\n\n  if (source.slice(source.length - 1, source.length) === '\\n') {\n    source += '&nbsp;';\n  }\n\n  var strList = source.split('\\n');\n  var isFirstSlash = false;\n  source.split('\\n').forEach(function (str, index) {\n    if (str !== '\\\\' && strList[index - 1] === '\\\\' && str !== '&nbsp;') {\n      strList[index - 1] += '\\n&nbsp;';\n    }\n\n    if (str.length !== 1 && str.slice(str.length - 1, str.length) === '\\\\') {\n      strList[index] = str.slice(0, str.length - 1);\n    }\n\n    if (str !== '\\\\') {\n      isFirstSlash = false;\n    }\n\n    if (str === '\\\\' && isFirstSlash === false && strList[index + 1] !== '\\\\') {\n      isFirstSlash = true;\n      strList[index] = '\\n\\\\\\n&nbsp;';\n    }\n\n    if (str === '\\\\' && isFirstSlash === false && strList[index + 1] === '\\\\') {\n      isFirstSlash = true;\n      strList[index] = '\\n\\\\';\n    }\n  });\n  source = strList.join('\\n');\n  return /*#__PURE__*/_jsxDEV(StyledPreviewBox, {\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      plugins: [[gfm, {\n        tableCellPadding: 'true'\n      }]],\n      source: source,\n      className: \"preview\",\n      renderers: {\n        code: CodeBox,\n        link: LinkRenderer\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = MarkdownPreview;\nexport default MarkdownPreview;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledPreviewBox\");\n$RefreshReg$(_c2, \"MarkdownPreview\");","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/MarkdownPreview/MarkdownPreview.tsx"],"names":["React","styled","Theme","ReactMarkdown","gfm","MarkdownStyleWrapper","CodeBox","LinkRenderer","StyledPreviewBox","PREVIEW_BACK","PC","MarkdownPreview","input","source","replace","slice","length","strList","split","isFirstSlash","forEach","str","index","join","tableCellPadding","code","link"],"mappings":"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","sourcesContent":["import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport { MarkdownStyleWrapper, CodeBox, LinkRenderer } from '@molecules/MarkdownStyleWrapper/index';\n\ninterface IPreviewProps {\n  input: string;\n}\n\nconst StyledPreviewBox = styled(MarkdownStyleWrapper)`\n  width: 50%;\n  background-color: ${() => Theme.PREVIEW_BACK};\n  @media (max-width: ${() => Theme.PC}) {\n    display: none;\n  }\n`;\n\nfunction MarkdownPreview({ input }: IPreviewProps): ReactElement {\n  let source = input.replace(/\\n/gi, '\\\\\\n');\n\n  if (source.slice(source.length - 1, source.length) === '\\n') {\n    source += '&nbsp;';\n  }\n\n  const strList = source.split('\\n');\n  let isFirstSlash = false;\n  source.split('\\n').forEach((str, index) => {\n    if (str !== '\\\\' && strList[index - 1] === '\\\\' && str !== '&nbsp;') {\n      strList[index - 1] += '\\n&nbsp;';\n    }\n\n    if (str.length !== 1 && str.slice(str.length - 1, str.length) === '\\\\') {\n      strList[index] = str.slice(0, str.length - 1);\n    }\n    if (str !== '\\\\') {\n      isFirstSlash = false;\n    }\n    if (str === '\\\\' && isFirstSlash === false && strList[index + 1] !== '\\\\') {\n      isFirstSlash = true;\n      strList[index] = '\\n\\\\\\n&nbsp;';\n    }\n    if (str === '\\\\' && isFirstSlash === false && strList[index + 1] === '\\\\') {\n      isFirstSlash = true;\n      strList[index] = '\\n\\\\';\n    }\n  });\n  source = strList.join('\\n');\n\n  return (\n    <StyledPreviewBox>\n      <ReactMarkdown\n        plugins={[[gfm, { tableCellPadding: 'true' }]]}\n        source={source}\n        className=\"preview\"\n        renderers={{ code: CodeBox, link: LinkRenderer }}\n      />\n    </StyledPreviewBox>\n  );\n}\n\nexport default MarkdownPreview;\n"]},"metadata":{},"sourceType":"module"}