{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/EditorTagArea/EditorTagArea.tsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport PostTagInput from '@molecules/PostTagInput/index';\nimport message from '@message';\nconst StyledTagContainer = styled.div.withConfig({\n  displayName: \"EditorTagArea__StyledTagContainer\",\n  componentId: \"cdxihv-0\"\n})([\"display:flex;position:relative;flex-wrap:wrap;align-items:space-beetween;margin:1.2rem 0 0.4rem 2.5vw;@media (max-width:\", \"){margin:0 0 1em 0;width:100%;}\"], () => Theme.MOBILE);\nconst StyledTagUnit = styled.div.withConfig({\n  displayName: \"EditorTagArea__StyledTagUnit\",\n  componentId: \"cdxihv-1\"\n})([\"height:1.7rem;font-size:1.2rem;font-weight:600;margin:0 3rem 0.7rem 0.5rem;color:\", \";pointer-events:auto;&:hover{opacity:60%;cursor:pointer;}@media (max-width:\", \"){font-size:0.7em;margin:0 0.4em 0.3rem 1rem;}\"], () => Theme.MODE_MARK, () => Theme.MOBILE);\nconst StyledTagModal = styled(DescriptiveModal).withConfig({\n  displayName: \"EditorTagArea__StyledTagModal\",\n  componentId: \"cdxihv-2\"\n})([\"z-index:2;width:400px;background-color:\", \";color:\", \";padding:15px 20px;line-height:1.5em;bottom:-4em;@media (max-width:\", \"){font-size:0.43em;height:4.7em;width:60vw;padding:0.5em 0.8em;margin-left:1.7em;bottom:-5.3em;}\"], () => Theme.EMPHASIS, () => Theme.HEADER_BACK, () => Theme.MOBILE);\n\nfunction EditorTagArea() {\n  const {\n    0: tagInput,\n    1: setTagInput\n  } = useState('');\n  const {\n    0: tagList,\n    1: setTagList\n  } = useState([]);\n  const {\n    0: modalState,\n    1: setModalState\n  } = useState('hidden');\n\n  const addTag = event => {\n    const isNotValidTag = !event || event.currentTarget.value.length < 2;\n    if (isNotValidTag) return;\n    const isRequestToAdd = event.key === ' ' || event.key === 'Enter';\n\n    if (isRequestToAdd) {\n      const tagListCopied = [...tagList];\n      tagListCopied.push(tagInput.slice(1));\n      setTagList(tagListCopied);\n      setModalState('hidden');\n      setTagInput('');\n    }\n  };\n\n  const deleteTagUnit = index => {\n    const tagIndex = index;\n    const tagListCopied = [...tagList];\n    tagListCopied.splice(tagIndex, 1);\n    setTagList(tagListCopied);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledTagContainer, {\n    children: [tagList.map((tag, index) => /*#__PURE__*/_jsxDEV(StyledTagUnit, {\n      onClick: () => deleteTagUnit(index),\n      children: tag\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(PostTagInput, {\n      addTag: addTag,\n      setModalState: setModalState,\n      setTagInput: setTagInput,\n      tagInput: tagInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTagModal, {\n      className: modalState,\n      visibleState: modalState,\n      children: message.DESCRIPTION_TAG\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\nexport default EditorTagArea;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/EditorTagArea/EditorTagArea.tsx"],"names":["React","useState","styled","Theme","PostTagInput","message","StyledTagContainer","div","MOBILE","StyledTagUnit","MODE_MARK","StyledTagModal","DescriptiveModal","EMPHASIS","HEADER_BACK","EditorTagArea","tagInput","setTagInput","tagList","setTagList","modalState","setModalState","addTag","event","isNotValidTag","currentTarget","value","length","isRequestToAdd","key","tagListCopied","push","slice","deleteTagUnit","index","tagIndex","splice","map","tag","DESCRIPTION_TAG"],"mappings":";;AAAA,OAAOA,KAAP,IAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,OAAP,MAAoB,UAApB;AAGA,MAAMC,kBAAkB,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,oKAMD,MAAMJ,KAAK,CAACK,MANX,CAAxB;AAYA,MAAMC,aAAa,GAAGP,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,2NAKR,MAAMJ,KAAK,CAACO,SALJ,EAWI,MAAMP,KAAK,CAACK,MAXhB,CAAnB;AAiBA,MAAMG,cAAc,GAAGT,MAAM,CAACU,gBAAD,CAAT;AAAA;AAAA;AAAA,sOAGE,MAAMT,KAAK,CAACU,QAHd,EAIT,MAAMV,KAAK,CAACW,WAJH,EAQG,MAAMX,KAAK,CAACK,MARf,CAApB;;AAkBA,SAASO,aAAT,GAAuC;AACrC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BhB,QAAQ,CAAS,EAAT,CAAxC;AACA,QAAM;AAAA,OAACiB,OAAD;AAAA,OAAUC;AAAV,MAAwBlB,QAAQ,CAAW,EAAX,CAAtC;AACA,QAAM;AAAA,OAACmB,UAAD;AAAA,OAAaC;AAAb,MAA8BpB,QAAQ,CAAS,QAAT,CAA5C;;AAEA,QAAMqB,MAAuB,GAAIC,KAAD,IAAW;AACzC,UAAMC,aAAa,GAAG,CAACD,KAAD,IAAUA,KAAK,CAACE,aAAN,CAAoBC,KAApB,CAA0BC,MAA1B,GAAmC,CAAnE;AACA,QAAIH,aAAJ,EAAmB;AACnB,UAAMI,cAAc,GAAGL,KAAK,CAACM,GAAN,KAAc,GAAd,IAAqBN,KAAK,CAACM,GAAN,KAAc,OAA1D;;AACA,QAAID,cAAJ,EAAoB;AAClB,YAAME,aAAuB,GAAG,CAAC,GAAGZ,OAAJ,CAAhC;AACAY,MAAAA,aAAa,CAACC,IAAd,CAAmBf,QAAQ,CAACgB,KAAT,CAAe,CAAf,CAAnB;AACAb,MAAAA,UAAU,CAACW,aAAD,CAAV;AACAT,MAAAA,aAAa,CAAC,QAAD,CAAb;AACAJ,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,GAXD;;AAaA,QAAMgB,aAAa,GAAIC,KAAD,IAAmB;AACvC,UAAMC,QAAQ,GAAGD,KAAjB;AACA,UAAMJ,aAAuB,GAAG,CAAC,GAAGZ,OAAJ,CAAhC;AACAY,IAAAA,aAAa,CAACM,MAAd,CAAqBD,QAArB,EAA+B,CAA/B;AACAhB,IAAAA,UAAU,CAACW,aAAD,CAAV;AACD,GALD;;AAOA,sBACE,QAAC,kBAAD;AAAA,eACGZ,OAAO,CAACmB,GAAR,CAAY,CAACC,GAAD,EAAMJ,KAAN,kBACX,QAAC,aAAD;AAA2B,MAAA,OAAO,EAAE,MAAMD,aAAa,CAACC,KAAD,CAAvD;AAAA,gBACGI;AADH,OAAoBJ,KAApB;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAME,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEZ,MAAtB;AAA8B,MAAA,aAAa,EAAED,aAA7C;AAA4D,MAAA,WAAW,EAAEJ,WAAzE;AAAsF,MAAA,QAAQ,EAAED;AAAhG;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEI,UAA3B;AAAuC,MAAA,YAAY,EAAEA,UAArD;AAAA,gBACGf,OAAO,CAACkC;AADX;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;AAED,eAAexB,aAAf","sourcesContent":["import React, { ReactElement, useState } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport Modal from '@atoms/Modal/index';\nimport PostTagInput from '@molecules/PostTagInput/index';\nimport message from '@message';\nimport { IOnKeyboardFunc } from '@eventInterfaces';\n\nconst StyledTagContainer = styled.div`\n  display: flex;\n  position: relative;\n  flex-wrap: wrap;\n  align-items: space-beetween;\n  margin: 1.2rem 0 0.4rem 2.5vw;\n  @media (max-width: ${() => Theme.MOBILE}) {\n    margin: 0 0 1em 0;\n    width: 100%;\n  }\n`;\n\nconst StyledTagUnit = styled.div`\n  height: 1.7rem;\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin: 0 3rem 0.7rem 0.5rem;\n  color: ${() => Theme.MODE_MARK};\n  pointer-events: auto;\n  &:hover {\n    opacity: 60%;\n    cursor: pointer;\n  }\n  @media (max-width: ${() => Theme.MOBILE}) {\n    font-size: 0.7em;\n    margin: 0 0.4em 0.3rem 1rem;\n  }\n`;\n\nconst StyledTagModal = styled(DescriptiveModal)`\n  z-index: 2;\n  width: 400px;\n  background-color: ${() => Theme.EMPHASIS};\n  color: ${() => Theme.HEADER_BACK};\n  padding: 15px 20px;\n  line-height: 1.5em;\n  bottom: -4em;\n  @media (max-width: ${() => Theme.MOBILE}) {\n    font-size: 0.43em;\n    height: 4.7em;\n    width: 60vw;\n    padding: 0.5em 0.8em;\n    margin-left: 1.7em;\n    bottom: -5.3em;\n  }\n`;\n\nfunction EditorTagArea(): ReactElement {\n  const [tagInput, setTagInput] = useState<string>('');\n  const [tagList, setTagList] = useState<string[]>([]);\n  const [modalState, setModalState] = useState<string>('hidden');\n\n  const addTag: IOnKeyboardFunc = (event) => {\n    const isNotValidTag = !event || event.currentTarget.value.length < 2;\n    if (isNotValidTag) return;\n    const isRequestToAdd = event.key === ' ' || event.key === 'Enter';\n    if (isRequestToAdd) {\n      const tagListCopied: string[] = [...tagList];\n      tagListCopied.push(tagInput.slice(1));\n      setTagList(tagListCopied);\n      setModalState('hidden');\n      setTagInput('');\n    }\n  };\n\n  const deleteTagUnit = (index: number) => {\n    const tagIndex = index;\n    const tagListCopied: string[] = [...tagList];\n    tagListCopied.splice(tagIndex, 1);\n    setTagList(tagListCopied);\n  };\n\n  return (\n    <StyledTagContainer>\n      {tagList.map((tag, index) => (\n        <StyledTagUnit key={index} onClick={() => deleteTagUnit(index)}>\n          {tag}\n        </StyledTagUnit>\n      ))}\n      <PostTagInput addTag={addTag} setModalState={setModalState} setTagInput={setTagInput} tagInput={tagInput} />\n      <StyledTagModal className={modalState} visibleState={modalState}>\n        {message.DESCRIPTION_TAG}\n      </StyledTagModal>\n    </StyledTagContainer>\n  );\n}\n\nexport default EditorTagArea;\n"]},"metadata":{},"sourceType":"module"}