{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/post/Editor/Buttons/Image.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { BsFillImageFill } from 'react-icons/bs';\nimport Theme from '@constants/Theme';\nimport Finder from '@components/post/Editor/Buttons/Finder';\nimport { Editors } from '@utils/markdown/markdownEditor/index';\nvar StyledImageIcon = styled(BsFillImageFill).withConfig({\n  displayName: \"Image__StyledImageIcon\",\n  componentId: \"jktujs-0\"\n})([\"width:20px;height:20px;color:\", \";opacity:60%;pointer-events:visibleFill;@media (max-width:\", \"){width:15px;height:15px;}&:hover{opacity:100%;cursor:pointer;}\"], function () {\n  return Theme.INTRO;\n}, function () {\n  return Theme.MOBILE;\n});\n_c = StyledImageIcon;\n\nfunction ImgButton(_ref) {\n  var onClick = _ref.onClick,\n      setUploadState = _ref.setUploadState;\n\n  var openFinder = function openFinder(event) {\n    var finderElem = event.currentTarget.nextSibling;\n    finderElem.click();\n  };\n\n  var selectImgAndUpload = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var finderElem, _ref3, file, checkUploadState;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              finderElem = event.target;\n              _ref3 = finderElem.files, file = _ref3[0];\n\n              if (file) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 4:\n              checkUploadState = setInterval(function () {\n                setUploadState(Editors.img.uploadingState);\n              }, 10);\n              _context.next = 7;\n              return Editors.img.uploadImg(file);\n\n            case 7:\n              onClick('img');\n              setUploadState(Editors.img.uploadingState);\n              clearInterval(checkUploadState);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function selectImgAndUpload(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledImageIcon, {\n      id: \"image\",\n      onClick: openFinder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), \";\", /*#__PURE__*/_jsxDEV(Finder, {\n      onChange: selectImgAndUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = ImgButton;\nexport default ImgButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledImageIcon\");\n$RefreshReg$(_c2, \"ImgButton\");","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/post/Editor/Buttons/Image.tsx"],"names":["React","styled","BsFillImageFill","Theme","Finder","Editors","StyledImageIcon","INTRO","MOBILE","ImgButton","onClick","setUploadState","openFinder","event","finderElem","currentTarget","nextSibling","click","selectImgAndUpload","target","files","file","checkUploadState","setInterval","img","uploadingState","uploadImg","clearInterval"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,SAASC,OAAT,QAAwB,sCAAxB;AAQA,IAAMC,eAAe,GAAGL,MAAM,CAACC,eAAD,CAAT;AAAA;AAAA;AAAA,uKAGV;AAAA,SAAMC,KAAK,CAACI,KAAZ;AAAA,CAHU,EAOE;AAAA,SAAMJ,KAAK,CAACK,MAAZ;AAAA,CAPF,CAArB;KAAMF,e;;AAiBN,SAASG,SAAT,OAA+E;AAAA,MAA1DC,OAA0D,QAA1DA,OAA0D;AAAA,MAAjDC,cAAiD,QAAjDA,cAAiD;;AAC7E,MAAMC,UAA2B,GAAG,SAA9BA,UAA8B,CAACC,KAAD,EAAW;AAC7C,QAAMC,UAAU,GAAGD,KAAK,CAACE,aAAN,CAAoBC,WAAvC;AACAF,IAAAA,UAAU,CAACG,KAAX;AACD,GAHD;;AAKA,MAAMC,kBAAgC;AAAA,yEAAG,iBAAOL,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjCC,cAAAA,UADiC,GACpBD,KAAK,CAACM,MADc;AAAA,sBAEnBL,UAAU,CAACM,KAFQ,EAE5BC,IAF4B,SAE/B,CAF+B;;AAAA,kBAGlCA,IAHkC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIjCC,cAAAA,gBAJiC,GAIdC,WAAW,CAAC,YAAM;AACzCZ,gBAAAA,cAAc,CAACN,OAAO,CAACmB,GAAR,CAAYC,cAAb,CAAd;AACD,eAFmC,EAEjC,EAFiC,CAJG;AAAA;AAAA,qBAQjCpB,OAAO,CAACmB,GAAR,CAAYE,SAAZ,CAAsBL,IAAtB,CARiC;;AAAA;AASvCX,cAAAA,OAAO,CAAC,KAAD,CAAP;AACAC,cAAAA,cAAc,CAACN,OAAO,CAACmB,GAAR,CAAYC,cAAb,CAAd;AACAE,cAAAA,aAAa,CAACL,gBAAD,CAAb;;AAXuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAhCJ,kBAAgC;AAAA;AAAA;AAAA,KAAtC;;AAcA,sBACE;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,EAAE,EAAC,OAApB;AAA4B,MAAA,OAAO,EAAEN;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,oBAEE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEM;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;MA1BQT,S;AA4BT,eAAeA,SAAf","sourcesContent":["import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport { BsFillImageFill } from 'react-icons/bs';\nimport Theme from '@constants/Theme';\nimport Finder from '@components/post/Editor/Buttons/Finder';\nimport { Editors } from '@utils/markdown/markdownEditor/index';\nimport { IOnClickSvgFunc, IEditImgFunc, SetStateProcess } from '@types';\n\ninterface IImgButtonProps {\n  onClick: (editType: string) => void;\n  setUploadState: SetStateProcess;\n}\n\nconst StyledImageIcon = styled(BsFillImageFill)`\n  width: 20px;\n  height: 20px;\n  color: ${() => Theme.INTRO};\n  opacity: 60%;\n  pointer-events: visibleFill;\n\n  @media (max-width: ${() => Theme.MOBILE}) {\n    width: 15px;\n    height: 15px;\n  }\n  &:hover {\n    opacity: 100%;\n    cursor: pointer;\n  }\n`;\n\nfunction ImgButton({ onClick, setUploadState }: IImgButtonProps): ReactElement {\n  const openFinder: IOnClickSvgFunc = (event) => {\n    const finderElem = event.currentTarget.nextSibling as HTMLButtonElement;\n    finderElem.click();\n  };\n\n  const selectImgAndUpload: IEditImgFunc = async (event) => {\n    const finderElem = event.target as HTMLInputElement;\n    const { 0: file } = finderElem.files as FileList;\n    if (!file) return;\n    const checkUploadState = setInterval(() => {\n      setUploadState(Editors.img.uploadingState);\n    }, 10);\n\n    await Editors.img.uploadImg(file);\n    onClick('img');\n    setUploadState(Editors.img.uploadingState);\n    clearInterval(checkUploadState);\n  };\n\n  return (\n    <>\n      <StyledImageIcon id=\"image\" onClick={openFinder} />;\n      <Finder onChange={selectImgAndUpload} />\n    </>\n  );\n}\n\nexport default ImgButton;\n"]},"metadata":{},"sourceType":"module"}