{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/MarkdownEditor/MarkdownEditor.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport WritingArea from '@organisms/Editor/WritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport EditorTagArea from '@organisms/Editor/TagArea/index';\nimport EditButtonBox from '@organisms/Editor/ButtonBox/index';\nimport ProcessBar from '@molecules/ProcessBar';\nimport useCursorPoint from '@hook/useCursorPoint';\nimport Devider from '@atoms/Devider';\nimport useUloadingImg from '@hook/useUploadingImg';\nimport editByButton from '@utils/markdownEditor/index';\nvar EditorAreaWrapper = styled.div.withConfig({\n  displayName: \"MarkdownEditor__EditorAreaWrapper\",\n  componentId: \"sc-13p7271-0\"\n})([\"width:50%;height:100vh;@media (max-width:\", \"){width:100%;}\"], function () {\n  return Theme.MOBILE;\n});\n_c = EditorAreaWrapper;\nvar StyeldDevider = styled(Devider).withConfig({\n  displayName: \"MarkdownEditor__StyeldDevider\",\n  componentId: \"sc-13p7271-1\"\n})([\"top:13vh;left:3vw;@media (max-width:\", \"){top:2.7em;left:0.8em;}\"], function () {\n  return Theme.MOBILE;\n});\n_c2 = StyeldDevider;\n\nfunction MarkDownEditor(MarkDownProps) {\n  _s();\n\n  var input = MarkDownProps.input,\n      setInput = MarkDownProps.setInput;\n  var inputAreaElem = useRef(null);\n\n  var _useCursorPoint = useCursorPoint(inputAreaElem.current),\n      cursorPosition = _useCursorPoint.cursorPosition,\n      moveCursor = _useCursorPoint.moveCursor;\n\n  var _useState = useState(cursorPosition),\n      cursorToGoByEditButton = _useState[0],\n      setCursorToGo = _useState[1]; // 반성하세요\n\n\n  var _useUloadingImg = useUloadingImg(input, cursorPosition, setInput),\n      setImageUrl = _useUloadingImg.setImageUrl,\n      setUploadState = _useUloadingImg.setUploadState,\n      uploadState = _useUloadingImg.uploadState;\n\n  useEffect(function () {\n    moveCursor(cursorToGoByEditButton);\n  }, [cursorToGoByEditButton]);\n\n  var textInputProps = _objectSpread(_objectSpread({}, MarkDownProps), {}, {\n    inputAreaElem: inputAreaElem,\n    setImageUrl: setImageUrl,\n    setUploadState: setUploadState\n  });\n\n  var updateByEditButton = useCallback(function (event) {\n    var _inputAreaElem$curren;\n\n    var tableCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0];\n\n    var _editByButton = editByButton({\n      input: input,\n      event: event,\n      cursorPosition: cursorPosition,\n      tableCount: tableCount\n    }),\n        updatedText = _editByButton.updatedText,\n        cursorToGo = _editByButton.cursorToGo; // 새로운 포인터의 위치와 로직 분리\n\n\n    setInput(updatedText);\n    (_inputAreaElem$curren = inputAreaElem.current) === null || _inputAreaElem$curren === void 0 ? void 0 : _inputAreaElem$curren.focus();\n    setCursorToGo(cursorToGo);\n  }, [input, cursorPosition]);\n  return /*#__PURE__*/_jsxDEV(EditorAreaWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ProcessBar, {\n      uploadState: uploadState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostTitleInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyeldDevider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditorTagArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditButtonBox, {\n      onClick: updateByEditButton,\n      tableProps: {\n        input: input,\n        setInput: setInput,\n        cursorPosition: cursorPosition\n      },\n      setImageUrl: setImageUrl,\n      setUploadState: setUploadState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WritingArea, {\n      className: \"textInput\",\n      writingAreaProps: textInputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MarkDownEditor, \"vL7RmIq4P3RmK+NGrRski51xVZg=\", false, function () {\n  return [useCursorPoint, useUloadingImg];\n});\n\n_c3 = MarkDownEditor;\nexport default MarkDownEditor;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EditorAreaWrapper\");\n$RefreshReg$(_c2, \"StyeldDevider\");\n$RefreshReg$(_c3, \"MarkDownEditor\");","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/MarkdownEditor/MarkdownEditor.tsx"],"names":["React","useCallback","useState","useEffect","useRef","styled","Theme","WritingArea","PostTitleInput","EditorTagArea","EditButtonBox","ProcessBar","useCursorPoint","Devider","useUloadingImg","editByButton","EditorAreaWrapper","div","MOBILE","StyeldDevider","MarkDownEditor","MarkDownProps","input","setInput","inputAreaElem","current","cursorPosition","moveCursor","cursorToGoByEditButton","setCursorToGo","setImageUrl","setUploadState","uploadState","textInputProps","updateByEditButton","event","tableCount","updatedText","cursorToGo","focus"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAA8BC,WAA9B,EAA2CC,QAA3C,EAAqDC,SAArD,EAAgEC,MAAhE,QAA8E,OAA9E;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AAGA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,IAAMC,iBAAiB,GAAGX,MAAM,CAACY,GAAV;AAAA;AAAA;AAAA,oEAIA;AAAA,SAAMX,KAAK,CAACY,MAAZ;AAAA,CAJA,CAAvB;KAAMF,iB;AASN,IAAMG,aAAa,GAAGd,MAAM,CAACQ,OAAD,CAAT;AAAA;AAAA;AAAA,yEAGI;AAAA,SAAMP,KAAK,CAACY,MAAZ;AAAA,CAHJ,CAAnB;MAAMC,a;;AASN,SAASC,cAAT,CAAwBC,aAAxB,EAAsE;AAAA;;AAAA,MAC5DC,KAD4D,GACxCD,aADwC,CAC5DC,KAD4D;AAAA,MACrDC,QADqD,GACxCF,aADwC,CACrDE,QADqD;AAEpE,MAAMC,aAAa,GAAGpB,MAAM,CAAsB,IAAtB,CAA5B;;AAFoE,wBAG7BQ,cAAc,CAACY,aAAa,CAACC,OAAf,CAHe;AAAA,MAG5DC,cAH4D,mBAG5DA,cAH4D;AAAA,MAG5CC,UAH4C,mBAG5CA,UAH4C;;AAAA,kBAIpBzB,QAAQ,CAACwB,cAAD,CAJY;AAAA,MAI7DE,sBAJ6D;AAAA,MAIrCC,aAJqC,iBAIM;;;AAJN,wBAKff,cAAc,CAACQ,KAAD,EAAQI,cAAR,EAAwBH,QAAxB,CALC;AAAA,MAK5DO,WAL4D,mBAK5DA,WAL4D;AAAA,MAK/CC,cAL+C,mBAK/CA,cAL+C;AAAA,MAK/BC,WAL+B,mBAK/BA,WAL+B;;AAOpE7B,EAAAA,SAAS,CAAC,YAAM;AACdwB,IAAAA,UAAU,CAACC,sBAAD,CAAV;AACD,GAFQ,EAEN,CAACA,sBAAD,CAFM,CAAT;;AAIA,MAAMK,cAAc,mCAAQZ,aAAR;AAAuBG,IAAAA,aAAa,EAAbA,aAAvB;AAAsCM,IAAAA,WAAW,EAAXA,WAAtC;AAAmDC,IAAAA,cAAc,EAAdA;AAAnD,IAApB;;AAEA,MAAMG,kBAAkC,GAAGjC,WAAW,CACpD,UAACkC,KAAD,EAAgC;AAAA;;AAAA,QAAxBC,UAAwB,uEAAX,CAAC,CAAD,EAAI,CAAJ,CAAW;;AAAA,wBACMrB,YAAY,CAAC;AAAEO,MAAAA,KAAK,EAALA,KAAF;AAASa,MAAAA,KAAK,EAALA,KAAT;AAAgBT,MAAAA,cAAc,EAAdA,cAAhB;AAAgCU,MAAAA,UAAU,EAAVA;AAAhC,KAAD,CADlB;AAAA,QACtBC,WADsB,iBACtBA,WADsB;AAAA,QACTC,UADS,iBACTA,UADS,EACkE;;;AAChGf,IAAAA,QAAQ,CAACc,WAAD,CAAR;AACA,6BAAAb,aAAa,CAACC,OAAd,gFAAuBc,KAAvB;AACAV,IAAAA,aAAa,CAACS,UAAD,CAAb;AACD,GANmD,EAOpD,CAAChB,KAAD,EAAQI,cAAR,CAPoD,CAAtD;AAUA,sBACE,QAAC,iBAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEM;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,aAAD;AACE,MAAA,OAAO,EAAEE,kBADX;AAEE,MAAA,UAAU,EAAE;AAAEZ,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,QAAQ,EAARA,QAAT;AAAmBG,QAAAA,cAAc,EAAdA;AAAnB,OAFd;AAGE,MAAA,WAAW,EAAEI,WAHf;AAIE,MAAA,cAAc,EAAEC;AAJlB;AAAA;AAAA;AAAA;AAAA,YALF,eAWE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,WAAvB;AAAmC,MAAA,gBAAgB,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAtCQb,c;UAGgCR,c,EAEcE,c;;;MAL9CM,c;AAwCT,eAAeA,cAAf","sourcesContent":["import React, { ReactElement, useCallback, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport WritingArea from '@organisms/Editor/WritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport EditorTagArea from '@organisms/Editor/TagArea/index';\nimport EditButtonBox from '@organisms/Editor/ButtonBox/index';\nimport editInputText from '@utils/editInputText';\nimport { IPostInputProps, IEditFuncProps } from '@interfaces';\nimport ProcessBar from '@molecules/ProcessBar';\nimport useCursorPoint from '@hook/useCursorPoint';\nimport Devider from '@atoms/Devider';\nimport useUloadingImg from '@hook/useUploadingImg';\nimport { IOnClickSvgFunc } from '@eventInterfaces';\nimport editByButton from '@utils/markdownEditor/index';\n\nconst EditorAreaWrapper = styled.div`\n  width: 50%;\n  height: 100vh;\n\n  @media (max-width: ${() => Theme.MOBILE}) {\n    width: 100%;\n  }\n`;\n\nconst StyeldDevider = styled(Devider)`\n  top: 13vh;\n  left: 3vw;\n  @media (max-width: ${() => Theme.MOBILE}) {\n    top: 2.7em;\n    left: 0.8em;\n  }\n`;\n\nfunction MarkDownEditor(MarkDownProps: IPostInputProps): ReactElement {\n  const { input, setInput } = MarkDownProps;\n  const inputAreaElem = useRef<HTMLTextAreaElement>(null);\n  const { cursorPosition, moveCursor } = useCursorPoint(inputAreaElem.current);\n  const [cursorToGoByEditButton, setCursorToGo] = useState(cursorPosition); // 반성하세요\n  const { setImageUrl, setUploadState, uploadState } = useUloadingImg(input, cursorPosition, setInput);\n\n  useEffect(() => {\n    moveCursor(cursorToGoByEditButton);\n  }, [cursorToGoByEditButton]);\n\n  const textInputProps = { ...MarkDownProps, inputAreaElem, setImageUrl, setUploadState };\n\n  const updateByEditButton: IEditFuncProps = useCallback(\n    (event, tableCount = [0, 0]) => {\n      const { updatedText, cursorToGo } = editByButton({ input, event, cursorPosition, tableCount }); // 새로운 포인터의 위치와 로직 분리\n      setInput(updatedText);\n      inputAreaElem.current?.focus();\n      setCursorToGo(cursorToGo);\n    },\n    [input, cursorPosition],\n  );\n\n  return (\n    <EditorAreaWrapper>\n      <ProcessBar uploadState={uploadState} />\n      <PostTitleInput />\n      <StyeldDevider />\n      <EditorTagArea />\n      <EditButtonBox\n        onClick={updateByEditButton}\n        tableProps={{ input, setInput, cursorPosition }}\n        setImageUrl={setImageUrl}\n        setUploadState={setUploadState}\n      />\n      <WritingArea className=\"textInput\" writingAreaProps={textInputProps} />\n    </EditorAreaWrapper>\n  );\n}\n\nexport default MarkDownEditor;\n"]},"metadata":{},"sourceType":"module"}