{"ast":null,"code":"import { useCallback, useRef, useEffect, useState } from 'react';\nconst SCROLL_DEBOUNCE_MS = 200;\nconst SCROLL_PATH_X = 0;\n\nconst useScroll = () => {\n  const timerRef = useRef();\n  const scrollRef = useRef(0);\n  const scroll = useState(scrollRef.current);\n  const scrollHandler = useCallback(() => {\n    scrollRef.current = document.body.scrollTop;\n  }, []);\n  const debounceHandler = useCallback(() => {\n    if (timerRef.current) clearTimeout(timerRef.current);\n    timerRef.current = setTimeout(scrollHandler, SCROLL_DEBOUNCE_MS);\n  }, [timerRef.current, scrollHandler]);\n  useEffect(() => {\n    document.body.scrollTo(SCROLL_PATH_X, scrollRef.current);\n    document.body.addEventListener('scroll', debounceHandler);\n    return () => {\n      document.body.removeEventListener('scroll', debounceHandler);\n    };\n  }, []);\n  return {\n    scroll: scrollRef.current\n  };\n};\n\nexport default useScroll;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/hooks/useScroll.ts"],"names":["useCallback","useRef","useEffect","useState","SCROLL_DEBOUNCE_MS","SCROLL_PATH_X","useScroll","timerRef","scrollRef","scroll","current","scrollHandler","document","body","scrollTop","debounceHandler","clearTimeout","setTimeout","scrollTo","addEventListener","removeEventListener"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,EAA8BC,SAA9B,EAAyCC,QAAzC,QAAyD,OAAzD;AAEA,MAAMC,kBAAkB,GAAG,GAA3B;AACA,MAAMC,aAAa,GAAG,CAAtB;;AAEA,MAAMC,SAAmC,GAAG,MAAM;AAChD,QAAMC,QAAQ,GAAGN,MAAM,EAAvB;AACA,QAAMO,SAAS,GAAGP,MAAM,CAAS,CAAT,CAAxB;AACA,QAAMQ,MAAM,GAAGN,QAAQ,CAASK,SAAS,CAACE,OAAnB,CAAvB;AAEA,QAAMC,aAAa,GAAGX,WAAW,CAAC,MAAM;AACtCQ,IAAAA,SAAS,CAACE,OAAV,GAAoBE,QAAQ,CAACC,IAAT,CAAcC,SAAlC;AACD,GAFgC,EAE9B,EAF8B,CAAjC;AAIA,QAAMC,eAAe,GAAGf,WAAW,CAAC,MAAM;AACxC,QAAIO,QAAQ,CAACG,OAAb,EAAsBM,YAAY,CAACT,QAAQ,CAACG,OAAV,CAAZ;AACtBH,IAAAA,QAAQ,CAACG,OAAT,GAAmBO,UAAU,CAACN,aAAD,EAAgBP,kBAAhB,CAA7B;AACD,GAHkC,EAGhC,CAACG,QAAQ,CAACG,OAAV,EAAmBC,aAAnB,CAHgC,CAAnC;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACC,IAAT,CAAcK,QAAd,CAAuBb,aAAvB,EAAsCG,SAAS,CAACE,OAAhD;AACAE,IAAAA,QAAQ,CAACC,IAAT,CAAcM,gBAAd,CAA+B,QAA/B,EAAyCJ,eAAzC;AAEA,WAAO,MAAM;AACXH,MAAAA,QAAQ,CAACC,IAAT,CAAcO,mBAAd,CAAkC,QAAlC,EAA4CL,eAA5C;AACD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;AASA,SAAO;AAAEN,IAAAA,MAAM,EAAED,SAAS,CAACE;AAApB,GAAP;AACD,CAxBD;;AA0BA,eAAeJ,SAAf","sourcesContent":["import { useCallback, useRef, useEffect, useState } from 'react';\n\nconst SCROLL_DEBOUNCE_MS = 200;\nconst SCROLL_PATH_X = 0;\n\nconst useScroll: () => { scroll: number } = () => {\n  const timerRef = useRef<NodeJS.Timeout>();\n  const scrollRef = useRef<number>(0);\n  const scroll = useState<number>(scrollRef.current);\n\n  const scrollHandler = useCallback(() => {\n    scrollRef.current = document.body.scrollTop;\n  }, []);\n\n  const debounceHandler = useCallback(() => {\n    if (timerRef.current) clearTimeout(timerRef.current);\n    timerRef.current = setTimeout(scrollHandler, SCROLL_DEBOUNCE_MS);\n  }, [timerRef.current, scrollHandler]);\n\n  useEffect(() => {\n    document.body.scrollTo(SCROLL_PATH_X, scrollRef.current);\n    document.body.addEventListener('scroll', debounceHandler);\n\n    return () => {\n      document.body.removeEventListener('scroll', debounceHandler);\n    };\n  }, []);\n\n  return { scroll: scrollRef.current };\n};\n\nexport default useScroll;\n"]},"metadata":{},"sourceType":"module"}