{"ast":null,"code":"import Theme from '@theme/index';\nvar REPEAT_START_TIMING = 3000;\nvar TEXT_PERIOD = 4000;\nvar MINIMUM_GAP_BOXES = '1%';\nvar MAXIMUM_GAP_BOXES = '100%';\nvar NUM_HIDE_TEXT = '0%';\nvar NUM_SHOW_TEXT = '100%';\n\nvar fadeOutTextBox = function fadeOutTextBox(_ref) {\n  var isMounted = _ref.isMounted,\n      setMargin = _ref.setMargin,\n      setOpacity = _ref.setOpacity;\n  var setTimingText = setTimeout(function () {\n    if (!isMounted) {\n      clearTimeout(setTimingText);\n      return;\n    }\n\n    setMargin(MAXIMUM_GAP_BOXES);\n    setOpacity(NUM_HIDE_TEXT);\n    var hideText = setInterval(function () {\n      if (!isMounted) {\n        clearInterval(hideText);\n        return;\n      }\n\n      setMargin(MAXIMUM_GAP_BOXES);\n      setOpacity(NUM_HIDE_TEXT);\n    }, TEXT_PERIOD);\n  }, REPEAT_START_TIMING);\n};\n\nvar fadeInTextBox = function fadeInTextBox(_ref2) {\n  var isMounted = _ref2.isMounted,\n      setMargin = _ref2.setMargin,\n      setOpacity = _ref2.setOpacity;\n  var timerToShow = setInterval(function () {\n    if (!isMounted) {\n      clearInterval(timerToShow);\n      return;\n    }\n\n    setMargin(MINIMUM_GAP_BOXES);\n    setOpacity(NUM_SHOW_TEXT);\n  }, TEXT_PERIOD);\n};\n\nvar changeNextOrder = function changeNextOrder(_ref3) {\n  var isMounted = _ref3.isMounted,\n      color = _ref3.color,\n      textList = _ref3.textList,\n      setColor = _ref3.setColor,\n      setIntro = _ref3.setIntro;\n  var currentListIndex = 1;\n  var newColor = color;\n  var timerToChange = setInterval(function () {\n    if (!isMounted) {\n      clearInterval(timerToChange);\n      return;\n    }\n\n    newColor = newColor === Theme.BLACK ? Theme.POINT : Theme.BLACK;\n    setColor(newColor);\n    setIntro(textList[currentListIndex]);\n    currentListIndex += 1;\n    var isOverList = currentListIndex > textList.length - 1;\n    currentListIndex = isOverList ? 0 : currentListIndex;\n  }, TEXT_PERIOD);\n};\n\nvar animateIntroduceText = function animateIntroduceText(_ref4) {\n  var textList = _ref4.textList,\n      isMounted = _ref4.isMounted,\n      color = _ref4.color,\n      setMargin = _ref4.setMargin,\n      setColor = _ref4.setColor,\n      setOpacity = _ref4.setOpacity,\n      setIntro = _ref4.setIntro;\n  setMargin(MINIMUM_GAP_BOXES);\n  fadeOutTextBox({\n    isMounted: isMounted,\n    setMargin: setMargin,\n    setOpacity: setOpacity\n  });\n  fadeInTextBox({\n    isMounted: isMounted,\n    setMargin: setMargin,\n    setOpacity: setOpacity\n  });\n  changeNextOrder({\n    isMounted: isMounted,\n    color: color,\n    textList: textList,\n    setColor: setColor,\n    setIntro: setIntro\n  });\n};\n\nexport default animateIntroduceText;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/animateText.ts"],"names":["Theme","REPEAT_START_TIMING","TEXT_PERIOD","MINIMUM_GAP_BOXES","MAXIMUM_GAP_BOXES","NUM_HIDE_TEXT","NUM_SHOW_TEXT","fadeOutTextBox","isMounted","setMargin","setOpacity","setTimingText","setTimeout","clearTimeout","hideText","setInterval","clearInterval","fadeInTextBox","timerToShow","changeNextOrder","color","textList","setColor","setIntro","currentListIndex","newColor","timerToChange","BLACK","POINT","isOverList","length","animateIntroduceText"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction } from 'react';\nimport { IColorProps } from '@interfaces';\nimport Theme from '@theme/index';\n\ninterface IFadeTextProps {\n  isMounted: boolean;\n  setMargin: Dispatch<SetStateAction<string>>;\n  setOpacity: Dispatch<SetStateAction<string>>;\n}\n\ninterface IChangeOrderProps extends IColorProps {\n  isMounted: boolean;\n  textList: string[];\n  setColor: Dispatch<SetStateAction<string>>;\n  setIntro: Dispatch<SetStateAction<string>>;\n}\n\ninterface IFadeTextFunc {\n  (props: IFadeTextProps): void;\n}\n\ninterface IChangeOrderFunc {\n  (props: IChangeOrderProps): void;\n}\n\ninterface IAnimateTextFunc {\n  (props: IFadeTextProps & IChangeOrderProps): void;\n}\n\nconst REPEAT_START_TIMING = 3000;\nconst TEXT_PERIOD = 4000;\nconst MINIMUM_GAP_BOXES = '1%';\nconst MAXIMUM_GAP_BOXES = '100%';\nconst NUM_HIDE_TEXT = '0%';\nconst NUM_SHOW_TEXT = '100%';\n\nconst fadeOutTextBox: IFadeTextFunc = ({ isMounted, setMargin, setOpacity }) => {\n  const setTimingText = setTimeout(() => {\n    if (!isMounted) {\n      clearTimeout(setTimingText);\n      return;\n    }\n    setMargin(MAXIMUM_GAP_BOXES);\n    setOpacity(NUM_HIDE_TEXT);\n    const hideText = setInterval(() => {\n      if (!isMounted) {\n        clearInterval(hideText);\n        return;\n      }\n      setMargin(MAXIMUM_GAP_BOXES);\n      setOpacity(NUM_HIDE_TEXT);\n    }, TEXT_PERIOD);\n  }, REPEAT_START_TIMING);\n};\n\nconst fadeInTextBox: IFadeTextFunc = ({ isMounted, setMargin, setOpacity }) => {\n  const timerToShow = setInterval(() => {\n    if (!isMounted) {\n      clearInterval(timerToShow);\n      return;\n    }\n    setMargin(MINIMUM_GAP_BOXES);\n\n    setOpacity(NUM_SHOW_TEXT);\n  }, TEXT_PERIOD);\n};\n\nconst changeNextOrder: IChangeOrderFunc = ({ isMounted, color, textList, setColor, setIntro }) => {\n  let currentListIndex = 1;\n  let newColor = color;\n  const timerToChange = setInterval(() => {\n    if (!isMounted) {\n      clearInterval(timerToChange);\n      return;\n    }\n    newColor = newColor === Theme.BLACK ? Theme.POINT : Theme.BLACK;\n    setColor(newColor);\n    setIntro(textList[currentListIndex]);\n    currentListIndex += 1;\n    const isOverList = currentListIndex > textList.length - 1;\n    currentListIndex = isOverList ? 0 : currentListIndex;\n  }, TEXT_PERIOD);\n};\n\nconst animateIntroduceText: IAnimateTextFunc = ({\n  textList,\n  isMounted,\n  color,\n  setMargin,\n  setColor,\n  setOpacity,\n  setIntro,\n}) => {\n  setMargin(MINIMUM_GAP_BOXES);\n  fadeOutTextBox({ isMounted, setMargin, setOpacity });\n  fadeInTextBox({ isMounted, setMargin, setOpacity });\n\n  changeNextOrder({ isMounted, color, textList, setColor, setIntro });\n};\n\nexport default animateIntroduceText;\n"]},"metadata":{},"sourceType":"module"}