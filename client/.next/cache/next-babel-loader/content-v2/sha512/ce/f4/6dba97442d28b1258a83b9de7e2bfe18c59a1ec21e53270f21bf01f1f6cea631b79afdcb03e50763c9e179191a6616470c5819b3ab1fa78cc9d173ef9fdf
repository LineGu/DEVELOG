{"ast":null,"code":"const insertTable = ({\n  input,\n  cursorPosition,\n  insertText,\n  setInput\n}) => {\n  const [, endPosition] = cursorPosition;\n  let cursorPositionToGo = [0, 0];\n  setInput(input.slice(0, endPosition) + insertText + input.slice(endPosition));\n  cursorPositionToGo = [endPosition + 1, endPosition + 1];\n  return cursorPositionToGo;\n};\n\nconst addTable = ({\n  tableCount,\n  input,\n  setInput,\n  cursorPosition\n}) => {\n  const [row, column] = tableCount !== null && tableCount !== void 0 ? tableCount : [-1, -1];\n  const rowText = `|${'    |'.repeat(row)}\\n|${'----|'.repeat(row)}`;\n  const columnText = `${'\\n'}${'|'}${'    |'.repeat(row)}`;\n  const insertText = `\\n\\n${rowText}${columnText.repeat(column - 1)}\\n\\n`;\n  const cursorToGo = insertTable({\n    input,\n    cursorPosition,\n    insertText,\n    setInput\n  });\n  return cursorToGo;\n};\n\nexport default addTable;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/addTable.ts"],"names":["insertTable","input","cursorPosition","insertText","setInput","endPosition","cursorPositionToGo","slice","addTable","tableCount","row","column","rowText","repeat","columnText","cursorToGo"],"mappings":"AAUA,MAAMA,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,cAAT;AAAyBC,EAAAA,UAAzB;AAAqCC,EAAAA;AAArC,CAAD,KAAuE;AACzF,QAAM,GAAGC,WAAH,IAAkBH,cAAxB;AAEA,MAAII,kBAAkB,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAzB;AAEAF,EAAAA,QAAQ,CAACH,KAAK,CAACM,KAAN,CAAY,CAAZ,EAAeF,WAAf,IAA8BF,UAA9B,GAA2CF,KAAK,CAACM,KAAN,CAAYF,WAAZ,CAA5C,CAAR;AACAC,EAAAA,kBAAkB,GAAG,CAACD,WAAW,GAAG,CAAf,EAAkBA,WAAW,GAAG,CAAhC,CAArB;AAEA,SAAOC,kBAAP;AACD,CATD;;AAWA,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcR,EAAAA,KAAd;AAAqBG,EAAAA,QAArB;AAA+BF,EAAAA;AAA/B,CAAD,KAA4E;AAC3F,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBF,UAAhB,aAAgBA,UAAhB,cAAgBA,UAAhB,GAA8B,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAApC;AAEA,QAAMG,OAAO,GAAI,IAAG,QAAQC,MAAR,CAAeH,GAAf,CAAoB,MAAK,QAAQG,MAAR,CAAeH,GAAf,CAAoB,EAAjE;AACA,QAAMI,UAAU,GAAI,GAAE,IAAK,GAAE,GAAI,GAAE,QAAQD,MAAR,CAAeH,GAAf,CAAoB,EAAvD;AAEA,QAAMP,UAAU,GAAI,OAAMS,OAAQ,GAAEE,UAAU,CAACD,MAAX,CAAkBF,MAAM,GAAG,CAA3B,CAA8B,MAAlE;AAEA,QAAMI,UAAU,GAAGf,WAAW,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,cAAT;AAAyBC,IAAAA,UAAzB;AAAqCC,IAAAA;AAArC,GAAD,CAA9B;AAEA,SAAOW,UAAP;AACD,CAXD;;AAaA,eAAeP,QAAf","sourcesContent":["import { Dispatch, SetStateAction } from 'react';\nimport { ITableProps } from '@interfaces';\n\ninterface IInsertSideProps {\n  input: string;\n  cursorPosition: number[];\n  insertText: string;\n  setInput: Dispatch<SetStateAction<string>>;\n}\n\nconst insertTable = ({ input, cursorPosition, insertText, setInput }: IInsertSideProps) => {\n  const [, endPosition] = cursorPosition;\n\n  let cursorPositionToGo = [0, 0];\n\n  setInput(input.slice(0, endPosition) + insertText + input.slice(endPosition));\n  cursorPositionToGo = [endPosition + 1, endPosition + 1];\n\n  return cursorPositionToGo;\n};\n\nconst addTable = ({ tableCount, input, setInput, cursorPosition }: ITableProps): number[] => {\n  const [row, column] = tableCount ?? [-1, -1];\n\n  const rowText = `|${'    |'.repeat(row)}\\n|${'----|'.repeat(row)}`;\n  const columnText = `${'\\n'}${'|'}${'    |'.repeat(row)}`;\n\n  const insertText = `\\n\\n${rowText}${columnText.repeat(column - 1)}\\n\\n`;\n\n  const cursorToGo = insertTable({ input, cursorPosition, insertText, setInput });\n\n  return cursorToGo;\n};\n\nexport default addTable;\n"]},"metadata":{},"sourceType":"module"}