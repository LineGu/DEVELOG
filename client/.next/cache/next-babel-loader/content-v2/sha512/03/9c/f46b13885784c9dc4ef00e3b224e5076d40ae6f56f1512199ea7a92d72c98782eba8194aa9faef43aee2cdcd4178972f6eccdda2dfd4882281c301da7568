{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TagAreaToAdd/TagAreaToAdd.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport TextInput from '@atoms/TextInput/index';\nimport message from '@construction/message';\nvar TextAreaForTag = styled(TextInput).withConfig({\n  displayName: \"TagAreaToAdd__TextAreaForTag\",\n  componentId: \"sc-16axhvg-0\"\n})([\"font-size:1.5em;font-weight:400;margin-left:0.4rem;padding-bottom:0.7rem;background-color:\", \";color:\", \";&::placeholder{color:#a2acb4;}&::selection{background-color:#dfdfdf;color:#a2acb4;}\"], function () {\n  return Theme.HEADER_BACK;\n}, function () {\n  return Theme.INTRO;\n});\n_c = TextAreaForTag;\n\nfunction TagAreaToAdd(_ref) {\n  var propsForTagArea = _ref.propsForTagArea;\n  var tagInput = propsForTagArea.tagInput,\n      setTagInput = propsForTagArea.setTagInput,\n      tagList = propsForTagArea.tagList,\n      setTagList = propsForTagArea.setTagList,\n      setModalState = propsForTagArea.setModalState;\n  return /*#__PURE__*/_jsxDEV(TextAreaForTag, {\n    placeholder: message.TAG_PLACEHOLDER,\n    onFocus: function onFocus() {\n      return setModalState('show');\n    },\n    onBlur: function onBlur() {\n      return setModalState('hidden');\n    },\n    onChange: function onChange(event) {\n      if (!event) return;\n      var newTag = event.target.value;\n      var isValidTagForm = newTag[0] === '#' || newTag.length === 0;\n      if (isValidTagForm) setTagInput(newTag);\n    },\n    onKeyDown: function onKeyDown(event) {\n      if (!event || event.currentTarget.value.length < 2) return;\n\n      if ((event.key === ' ' || event.key === 'Enter') && tagInput[0] === '#') {\n        var tagListCopied = _toConsumableArray(tagList);\n\n        tagListCopied.push(tagInput.slice(1));\n        setTagList(tagListCopied);\n        setTagInput('');\n        setModalState('hidden');\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(TextAreaForTag, {\n    placeholder: \"\\uD0DC\\uADF8\\uB97C \\uCD94\\uAC00\\uD558\\uC138\\uC694\",\n    spellCheck: \"false\",\n    value: tagInput,\n    onFocus: function onFocus() {\n      return setModalState('show');\n    },\n    onBlur: function onBlur() {\n      return setModalState('hidden');\n    },\n    onChange: function onChange(event) {\n      var newTag = event.target.value;\n      if (newTag[0] === '#' || newTag.length === 0) setTagInput(newTag);\n    },\n    onKeyDown: function onKeyDown(event) {\n      if (event.currentTarget.value.length < 2) return;\n\n      if ((event.key === ' ' || event.key === 'Enter') && tagInput[0] === '#') {\n        var tagListCopied = _toConsumableArray(tagList);\n\n        tagListCopied.push(tagInput.slice(1));\n        setTagList(tagListCopied);\n        setTagInput('');\n        setModalState('hidden');\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = TagAreaToAdd;\nexport default TagAreaToAdd;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextAreaForTag\");\n$RefreshReg$(_c2, \"TagAreaToAdd\");","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TagAreaToAdd/TagAreaToAdd.tsx"],"names":["React","styled","Theme","TextInput","message","TextAreaForTag","HEADER_BACK","INTRO","TagAreaToAdd","propsForTagArea","tagInput","setTagInput","tagList","setTagList","setModalState","TAG_PLACEHOLDER","event","newTag","target","value","isValidTagForm","length","currentTarget","key","tagListCopied","push","slice"],"mappings":"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","sourcesContent":["import React, { ReactElement, SetStateAction, Dispatch } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport TextInput from '@atoms/TextInput/index';\nimport message from '@construction/message';\n\ninterface ITagAreaProps {\n  propsForTagArea: {\n    tagInput: string;\n    setTagInput: Dispatch<SetStateAction<string>>;\n    tagList: string[];\n    setTagList: Dispatch<SetStateAction<string[]>>;\n    setModalState: Dispatch<SetStateAction<string>>;\n  };\n}\n\nconst TextAreaForTag = styled(TextInput)`\n  font-size: 1.5em;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  padding-bottom: 0.7rem;\n\n  background-color: ${() => Theme.HEADER_BACK};\n  color: ${() => Theme.INTRO};\n  &::placeholder {\n    color: #a2acb4;\n  }\n  &::selection {\n    background-color: #dfdfdf;\n    color: #a2acb4;\n  }\n`;\n\nfunction TagAreaToAdd({ propsForTagArea }: ITagAreaProps): ReactElement {\n  const { tagInput, setTagInput, tagList, setTagList, setModalState } = propsForTagArea;\n\n  return (\n    <TextAreaForTag\n      placeholder={message.TAG_PLACEHOLDER}\n      onFocus={() => setModalState('show')}\n      onBlur={() => setModalState('hidden')}\n      onChange={(event) => {\n        if (!event) return;\n        const newTag = event.target.value;\n        const isValidTagForm = newTag[0] === '#' || newTag.length === 0;\n        if (isValidTagForm) setTagInput(newTag);\n      }}\n      onKeyDown={(event) => {\n        if (!event || event.currentTarget.value.length < 2) return;\n        if ((event.key === ' ' || event.key === 'Enter') && tagInput[0] === '#') {\n          const tagListCopied: string[] = [...tagList];\n          tagListCopied.push(tagInput.slice(1));\n          setTagList(tagListCopied);\n          setTagInput('');\n          setModalState('hidden');\n        }\n      }}\n    />\n  );\n\n  return (\n    <TextAreaForTag\n      placeholder=\"태그를 추가하세요\"\n      spellCheck=\"false\"\n      value={tagInput}\n      onFocus={() => setModalState('show')}\n      onBlur={() => setModalState('hidden')}\n      onChange={(event) => {\n        const newTag = event.target.value;\n        if (newTag[0] === '#' || newTag.length === 0) setTagInput(newTag);\n      }}\n      onKeyDown={(event) => {\n        if (event.currentTarget.value.length < 2) return;\n        if ((event.key === ' ' || event.key === 'Enter') && tagInput[0] === '#') {\n          const tagListCopied: string[] = [...tagList];\n          tagListCopied.push(tagInput.slice(1));\n          setTagList(tagListCopied);\n          setTagInput('');\n          setModalState('hidden');\n        }\n      }}\n    />\n  );\n}\n\nexport default TagAreaToAdd;\n"]},"metadata":{},"sourceType":"module"}