{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/MarkdownEditor/MarkdownEditor.tsx\";\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport WritingArea from '@organisms/Editor/WritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport EditorTagArea from '@organisms/Editor/TagArea/index';\nimport EditButtonBox from '@organisms/Editor/ButtonBox/index';\nimport editInputText from '@utils/editInputText';\nimport ProcessBar from '@molecules/ProcessBar';\nimport useCursorPoint from '@hook/useCursorPoint';\nconst EditorAreaWrapper = styled.div.withConfig({\n  displayName: \"MarkdownEditor__EditorAreaWrapper\",\n  componentId: \"sc-13p7271-0\"\n})([\"width:50%;height:100vh;@media (max-width:\", \"){width:100%;}@media (max-width:\", \"){width:100%;}& > hr:not(processBar){position:absolute;top:13vh;left:3vw;width:9vw;border:4px solid \", \";@media (max-width:\", \"){top:2.7em;left:0.8em;width:4em;border:2px solid \", \";}}.show{animation-name:bounce;animation-duration:0.5s;}\"], () => Theme.MOBILE, () => Theme.PC, () => Theme.EMPHASIS, () => Theme.MOBILE, () => Theme.EMPHASIS);\n\nfunction MarkDownEditor({\n  input,\n  setInput\n}) {\n  const uploadStateInit = {\n    process: 0,\n    error: ''\n  };\n  const {\n    0: imageUrl,\n    1: setImageUrl\n  } = useState('');\n  const {\n    0: uploadState,\n    1: setUploadState\n  } = useState(uploadStateInit);\n  const isUploading = useRef(false);\n  const inputAreaElem = useRef(null);\n  const {\n    cursorPosition,\n    moveCursor\n  } = useCursorPoint(inputAreaElem.current);\n  const {\n    0: cursorToGoByEditButton,\n    1: setCursorToGo\n  } = useState(cursorPosition);\n  isUploading.current = uploadState.process !== 0;\n  useEffect(() => {\n    if (!isUploading.current) return;\n    const currentCursor = cursorPosition[0];\n    const inputInsertedUploading = `${input.slice(0, currentCursor)}![Loading...]()${input.slice(currentCursor)}`;\n    setInput(inputInsertedUploading);\n  }, [isUploading.current]);\n  const writingAreaProps = {\n    input,\n    setInput,\n    inputAreaElem,\n    setImageUrl,\n    setUploadState\n  };\n  const insertImageMarkdown = useCallback(() => {\n    const isNotVaildUrl = imageUrl === null || imageUrl === undefined || imageUrl.length === 0;\n\n    if (uploadState.error) {\n      alert('이미지 업로드 실패');\n      const previousInput = `${input.slice(0, cursorPosition[0])}${input.slice(cursorPosition[0] + 15)}`;\n      setInput(previousInput);\n      setImageUrl('');\n      setUploadState(uploadStateInit);\n      return;\n    }\n\n    if (isNotVaildUrl) return;\n    const inputWithNewImg = `${input.slice(0, cursorPosition[0])}\\n![](${imageUrl})\\n${input.slice(cursorPosition[0] + 15)}`;\n    setInput(inputWithNewImg);\n    setImageUrl('');\n  }, [imageUrl, uploadState]);\n  useEffect(() => {\n    insertImageMarkdown();\n  }, [imageUrl, uploadState]);\n  const updateByEditButton = useCallback(event => {\n    var _inputAreaElem$curren;\n\n    const pointToGo = editInputText({\n      event,\n      input,\n      setInput,\n      cursorPosition\n    });\n    (_inputAreaElem$curren = inputAreaElem.current) === null || _inputAreaElem$curren === void 0 ? void 0 : _inputAreaElem$curren.focus();\n    setCursorToGo(pointToGo);\n  }, [input, cursorPosition]);\n  useEffect(() => {\n    moveCursor(cursorToGoByEditButton);\n  }, [cursorToGoByEditButton]);\n  return /*#__PURE__*/_jsxDEV(EditorAreaWrapper, {\n    onDoubleClick: event => event.stopPropagation(),\n    children: [/*#__PURE__*/_jsxDEV(ProcessBar, {\n      isUploading: isUploading.current,\n      uploadState: uploadState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostTitleInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditorTagArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditButtonBox, {\n      onClick: updateByEditButton,\n      tableProps: {\n        input,\n        setInput,\n        cursorPosition\n      },\n      setImageUrl: setImageUrl,\n      setUploadState: setUploadState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WritingArea, {\n      className: \"textInput\",\n      writingAreaProps: writingAreaProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MarkDownEditor;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/MarkdownEditor/MarkdownEditor.tsx"],"names":["React","useCallback","useState","useEffect","useRef","styled","Theme","WritingArea","PostTitleInput","EditorTagArea","EditButtonBox","editInputText","ProcessBar","useCursorPoint","EditorAreaWrapper","div","MOBILE","PC","EMPHASIS","MarkDownEditor","input","setInput","uploadStateInit","process","error","imageUrl","setImageUrl","uploadState","setUploadState","isUploading","inputAreaElem","cursorPosition","moveCursor","current","cursorToGoByEditButton","setCursorToGo","currentCursor","inputInsertedUploading","slice","writingAreaProps","insertImageMarkdown","isNotVaildUrl","undefined","length","alert","previousInput","inputWithNewImg","updateByEditButton","event","pointToGo","focus","stopPropagation"],"mappings":"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","sourcesContent":["import React, { ReactElement, useCallback, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport WritingArea from '@organisms/Editor/WritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport EditorTagArea from '@organisms/Editor/TagArea/index';\nimport EditButtonBox from '@organisms/Editor/ButtonBox/index';\nimport editInputText from '@utils/editInputText';\nimport { IPostInputProps, IUploadState } from '@interfaces';\nimport ProcessBar from '@molecules/ProcessBar';\nimport useCursorPoint from '@hook/useCursorPoint';\n\nconst EditorAreaWrapper = styled.div`\n  width: 50%;\n  height: 100vh;\n  @media (max-width: ${() => Theme.MOBILE}) {\n    width: 100%;\n  }\n\n  @media (max-width: ${() => Theme.PC}) {\n    width: 100%;\n  }\n\n  & > hr:not(processBar) {\n    position: absolute;\n    top: 13vh;\n    left: 3vw;\n    width: 9vw;\n    border: 4px solid ${() => Theme.EMPHASIS};\n    @media (max-width: ${() => Theme.MOBILE}) {\n      top: 2.7em;\n      left: 0.8em;\n      width: 4em;\n      border: 2px solid ${() => Theme.EMPHASIS};\n    }\n  }\n\n  .show {\n    animation-name: bounce;\n    animation-duration: 0.5s;\n  }\n`;\n\nfunction MarkDownEditor({ input, setInput }: IPostInputProps): ReactElement {\n  const uploadStateInit = { process: 0, error: '' };\n  const [imageUrl, setImageUrl] = useState<string>('');\n  const [uploadState, setUploadState] = useState<IUploadState>(uploadStateInit);\n  const isUploading = useRef(false);\n\n  const inputAreaElem = useRef<HTMLTextAreaElement>(null);\n  const { cursorPosition, moveCursor } = useCursorPoint(inputAreaElem.current);\n  const [cursorToGoByEditButton, setCursorToGo] = useState(cursorPosition);\n\n  isUploading.current = uploadState.process !== 0;\n  useEffect(() => {\n    if (!isUploading.current) return;\n    const currentCursor = cursorPosition[0];\n    const inputInsertedUploading = `${input.slice(0, currentCursor)}![Loading...]()${input.slice(currentCursor)}`;\n    setInput(inputInsertedUploading);\n  }, [isUploading.current]);\n\n  const writingAreaProps = {\n    input,\n    setInput,\n    inputAreaElem,\n    setImageUrl,\n    setUploadState,\n  };\n\n  const insertImageMarkdown = useCallback(() => {\n    const isNotVaildUrl = imageUrl === null || imageUrl === undefined || imageUrl.length === 0;\n    if (uploadState.error) {\n      alert('이미지 업로드 실패');\n      const previousInput = `${input.slice(0, cursorPosition[0])}${input.slice(cursorPosition[0] + 15)}`;\n      setInput(previousInput);\n      setImageUrl('');\n      setUploadState(uploadStateInit);\n      return;\n    }\n    if (isNotVaildUrl) return;\n    const inputWithNewImg = `${input.slice(0, cursorPosition[0])}\\n![](${imageUrl})\\n${input.slice(\n      cursorPosition[0] + 15,\n    )}`;\n    setInput(inputWithNewImg);\n    setImageUrl('');\n  }, [imageUrl, uploadState]);\n\n  useEffect(() => {\n    insertImageMarkdown();\n  }, [imageUrl, uploadState]);\n\n  const updateByEditButton = useCallback(\n    (event: React.MouseEvent<SVGElement, MouseEvent>) => {\n      const pointToGo = editInputText({ event, input, setInput, cursorPosition });\n      inputAreaElem.current?.focus();\n      setCursorToGo(pointToGo);\n    },\n    [input, cursorPosition],\n  );\n\n  useEffect(() => {\n    moveCursor(cursorToGoByEditButton);\n  }, [cursorToGoByEditButton]);\n\n  return (\n    <EditorAreaWrapper onDoubleClick={(event) => event.stopPropagation()}>\n      <ProcessBar isUploading={isUploading.current} uploadState={uploadState} />\n      <PostTitleInput />\n      <hr />\n      <EditorTagArea />\n      <EditButtonBox\n        onClick={updateByEditButton}\n        tableProps={{ input, setInput, cursorPosition }}\n        setImageUrl={setImageUrl}\n        setUploadState={setUploadState}\n      />\n      <WritingArea className=\"textInput\" writingAreaProps={writingAreaProps} />\n    </EditorAreaWrapper>\n  );\n}\n\nexport default MarkDownEditor;\n"]},"metadata":{},"sourceType":"module"}