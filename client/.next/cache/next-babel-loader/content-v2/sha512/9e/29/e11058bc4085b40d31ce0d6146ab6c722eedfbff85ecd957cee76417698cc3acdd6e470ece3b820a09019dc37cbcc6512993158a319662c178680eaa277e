{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/atoms/TableModal/TableModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport { FiSquare } from 'react-icons/Fi';\nimport { BsSquareFill } from 'react-icons/bs';\nvar StyledModal = styled.div.withConfig({\n  displayName: \"TableModal__StyledModal\",\n  componentId: \"sc-17zwdtm-0\"\n})([\"display:flex;position:absolute;margin:0;padding:0;& > p{margin:0;padding:0;}background-color:\", \";\"], function () {\n  return Theme.TAG_PLACEHOLDER;\n});\n_c = StyledModal;\nvar StyledBlock = styled(FiSquare).withConfig({\n  displayName: \"TableModal__StyledBlock\",\n  componentId: \"sc-17zwdtm-1\"\n})([\"margin:0;padding:0;\"]);\n_c2 = StyledBlock;\nvar StyledCheckedBlock = styled(BsSquareFill).withConfig({\n  displayName: \"TableModal__StyledCheckedBlock\",\n  componentId: \"sc-17zwdtm-2\"\n})([\"margin:0;padding:0;\"]);\n_c3 = StyledCheckedBlock;\n\nfunction TableModal(_ref) {\n  _s();\n\n  var _this = this;\n\n  var className = _ref.className;\n\n  var _useState = useState(5),\n      blockCount = _useState[0],\n      setBlockCount = _useState[1];\n\n  var _useState2 = useState([-1, -1]),\n      check = _useState2[0],\n      setCheck = _useState2[1];\n\n  var blockIds = new Array(blockCount).fill(0);\n  return /*#__PURE__*/_jsxDEV(StyledModal, {\n    className: className,\n    children: blockIds.map(function (_, index) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blockIds.map(function (__, subIndex) {\n          if (check[0] >= subIndex && check[1] >= index) {\n            return /*#__PURE__*/_jsxDEV(StyledCheckedBlock, {\n              id: \"\".concat(subIndex, \",\").concat(index),\n              onMouseUp: function onMouseUp(event) {\n                var newCheckStr = event.currentTarget.id.split(',');\n                var newCheck = [parseInt(newCheckStr[0], 10), parseInt(newCheckStr[1], 10)];\n                setCheck(newCheck);\n              }\n            }, index * 10 + subIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, _this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(StyledBlock, {\n            id: \"\".concat(subIndex, \",\").concat(index),\n            onMouseUp: function onMouseUp(event) {\n              var newCheckStr = event.currentTarget.id.split(',');\n              var newCheck = [parseInt(newCheckStr[0], 10), parseInt(newCheckStr[1], 10)];\n              setCheck(newCheck);\n            }\n          }, index * 10 + subIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, _this);\n        })\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableModal, \"BRcIIjRVwYNRmZpQ7F7YSF+hJAo=\");\n\n_c4 = TableModal;\nexport default TableModal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledModal\");\n$RefreshReg$(_c2, \"StyledBlock\");\n$RefreshReg$(_c3, \"StyledCheckedBlock\");\n$RefreshReg$(_c4, \"TableModal\");","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/atoms/TableModal/TableModal.tsx"],"names":["React","useState","styled","Theme","FiSquare","BsSquareFill","StyledModal","div","TAG_PLACEHOLDER","StyledBlock","StyledCheckedBlock","TableModal","className","blockCount","setBlockCount","check","setCheck","blockIds","Array","fill","map","_","index","__","subIndex","event","newCheckStr","currentTarget","id","split","newCheck","parseInt"],"mappings":"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","sourcesContent":["import { IComponentProps } from '@interfaces';\nimport React, { ReactElement, useState } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport { FiSquare } from 'react-icons/Fi';\nimport { BsSquareFill } from 'react-icons/bs';\n\nconst StyledModal = styled.div`\n  display: flex;\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  & > p {\n    margin: 0;\n    padding: 0;\n  }\n  background-color: ${() => Theme.TAG_PLACEHOLDER};\n`;\n\nconst StyledBlock = styled(FiSquare)`\n  margin: 0;\n  padding: 0;\n`;\n\nconst StyledCheckedBlock = styled(BsSquareFill)`\n  margin: 0;\n  padding: 0;\n`;\n\nfunction TableModal({ className }: IComponentProps): ReactElement {\n  const [blockCount, setBlockCount] = useState<number>(5);\n  const [check, setCheck] = useState<number[]>([-1, -1]);\n  const blockIds = new Array(blockCount).fill(0);\n  return (\n    <StyledModal className={className}>\n      {blockIds.map((_, index) => {\n        return (\n          <p key={index}>\n            {blockIds.map((__, subIndex) => {\n              if (check[0] >= subIndex && check[1] >= index) {\n                return (\n                  <StyledCheckedBlock\n                    key={index * 10 + subIndex}\n                    id={`${subIndex},${index}`}\n                    onMouseUp={(event) => {\n                      const newCheckStr: string[] = event.currentTarget.id.split(',');\n                      const newCheck = [parseInt(newCheckStr[0], 10), parseInt(newCheckStr[1], 10)];\n                      setCheck(newCheck);\n                    }}\n                  />\n                );\n              }\n              return (\n                <StyledBlock\n                  key={index * 10 + subIndex}\n                  id={`${subIndex},${index}`}\n                  onMouseUp={(event) => {\n                    const newCheckStr: string[] = event.currentTarget.id.split(',');\n                    const newCheck = [parseInt(newCheckStr[0], 10), parseInt(newCheckStr[1], 10)];\n                    setCheck(newCheck);\n                  }}\n                />\n              );\n            })}\n          </p>\n        );\n      })}\n    </StyledModal>\n  );\n}\n\nexport default TableModal;\n"]},"metadata":{},"sourceType":"module"}