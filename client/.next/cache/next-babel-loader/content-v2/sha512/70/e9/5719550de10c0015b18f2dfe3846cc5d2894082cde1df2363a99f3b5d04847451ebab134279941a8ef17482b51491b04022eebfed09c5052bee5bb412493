{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/post/Editor/Buttons/Image.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { BsFillImageFill } from 'react-icons/bs';\nimport Theme from '@constants/Theme';\nimport Finder from '@components/post/Editor/Buttons/Finder';\nimport { Editors } from '@utils/markdown/markdownEditor/index';\nconst StyledImageIcon = styled(BsFillImageFill).withConfig({\n  displayName: \"Image__StyledImageIcon\",\n  componentId: \"jktujs-0\"\n})([\"width:20px;height:20px;color:\", \";opacity:60%;pointer-events:visibleFill;@media (max-width:\", \"){width:15px;height:15px;}&:hover{opacity:100%;cursor:pointer;}\"], () => Theme.INTRO, () => Theme.MOBILE);\n\nfunction ImgButton({\n  onClick,\n  setUploadState\n}) {\n  const openFinder = event => {\n    const finderElem = event.currentTarget.nextSibling;\n    finderElem.click();\n  };\n\n  const selectImgAndUpload = async event => {\n    const finderElem = event.target;\n    const {\n      0: file\n    } = finderElem.files;\n    if (!file) return;\n    const checkUploadState = setInterval(() => {\n      setUploadState(Editors.img.uploadingState);\n    }, 10);\n    await Editors.img.uploadImg(file);\n    onClick('img');\n    setUploadState(Editors.img.uploadingState);\n    clearInterval(checkUploadState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledImageIcon, {\n      id: \"image\",\n      onClick: openFinder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Finder, {\n      onChange: selectImgAndUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default ImgButton;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/post/Editor/Buttons/Image.tsx"],"names":["React","styled","BsFillImageFill","Theme","Finder","Editors","StyledImageIcon","INTRO","MOBILE","ImgButton","onClick","setUploadState","openFinder","event","finderElem","currentTarget","nextSibling","click","selectImgAndUpload","target","file","files","checkUploadState","setInterval","img","uploadingState","uploadImg","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,SAASC,OAAT,QAAwB,sCAAxB;AAQA,MAAMC,eAAe,GAAGL,MAAM,CAACC,eAAD,CAAT;AAAA;AAAA;AAAA,uKAGV,MAAMC,KAAK,CAACI,KAHF,EAOE,MAAMJ,KAAK,CAACK,MAPd,CAArB;;AAiBA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAnB,EAA+E;AAC7E,QAAMC,UAA2B,GAAIC,KAAD,IAAW;AAC7C,UAAMC,UAAU,GAAGD,KAAK,CAACE,aAAN,CAAoBC,WAAvC;AACAF,IAAAA,UAAU,CAACG,KAAX;AACD,GAHD;;AAKA,QAAMC,kBAAgC,GAAG,MAAOL,KAAP,IAAiB;AACxD,UAAMC,UAAU,GAAGD,KAAK,CAACM,MAAzB;AACA,UAAM;AAAE,SAAGC;AAAL,QAAcN,UAAU,CAACO,KAA/B;AACA,QAAI,CAACD,IAAL,EAAW;AACX,UAAME,gBAAgB,GAAGC,WAAW,CAAC,MAAM;AACzCZ,MAAAA,cAAc,CAACN,OAAO,CAACmB,GAAR,CAAYC,cAAb,CAAd;AACD,KAFmC,EAEjC,EAFiC,CAApC;AAIA,UAAMpB,OAAO,CAACmB,GAAR,CAAYE,SAAZ,CAAsBN,IAAtB,CAAN;AACAV,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAC,IAAAA,cAAc,CAACN,OAAO,CAACmB,GAAR,CAAYC,cAAb,CAAd;AACAE,IAAAA,aAAa,CAACL,gBAAD,CAAb;AACD,GAZD;;AAcA,sBACE;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,EAAE,EAAC,OAApB;AAA4B,MAAA,OAAO,EAAEV;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEM;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;AAED,eAAeT,SAAf","sourcesContent":["import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport { BsFillImageFill } from 'react-icons/bs';\nimport Theme from '@constants/Theme';\nimport Finder from '@components/post/Editor/Buttons/Finder';\nimport { Editors } from '@utils/markdown/markdownEditor/index';\nimport { IOnClickSvgFunc, IEditImgFunc, SetStateProcess } from '@types';\n\ninterface IImgButtonProps {\n  onClick: (editType: string) => void;\n  setUploadState: SetStateProcess;\n}\n\nconst StyledImageIcon = styled(BsFillImageFill)`\n  width: 20px;\n  height: 20px;\n  color: ${() => Theme.INTRO};\n  opacity: 60%;\n  pointer-events: visibleFill;\n\n  @media (max-width: ${() => Theme.MOBILE}) {\n    width: 15px;\n    height: 15px;\n  }\n  &:hover {\n    opacity: 100%;\n    cursor: pointer;\n  }\n`;\n\nfunction ImgButton({ onClick, setUploadState }: IImgButtonProps): ReactElement {\n  const openFinder: IOnClickSvgFunc = (event) => {\n    const finderElem = event.currentTarget.nextSibling as HTMLButtonElement;\n    finderElem.click();\n  };\n\n  const selectImgAndUpload: IEditImgFunc = async (event) => {\n    const finderElem = event.target as HTMLInputElement;\n    const { 0: file } = finderElem.files as FileList;\n    if (!file) return;\n    const checkUploadState = setInterval(() => {\n      setUploadState(Editors.img.uploadingState);\n    }, 10);\n\n    await Editors.img.uploadImg(file);\n    onClick('img');\n    setUploadState(Editors.img.uploadingState);\n    clearInterval(checkUploadState);\n  };\n\n  return (\n    <>\n      <StyledImageIcon id=\"image\" onClick={openFinder} />\n      <Finder onChange={selectImgAndUpload} />\n    </>\n  );\n}\n\nexport default ImgButton;\n"]},"metadata":{},"sourceType":"module"}