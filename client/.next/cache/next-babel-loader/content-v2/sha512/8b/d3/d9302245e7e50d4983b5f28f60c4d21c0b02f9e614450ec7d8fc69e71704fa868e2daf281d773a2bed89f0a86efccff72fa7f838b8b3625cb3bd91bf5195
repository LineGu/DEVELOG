{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/post/TextArea/TextArea.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@constants/Theme';\nimport TextInput from '@components/common/TextInput';\nimport MESSAGE from '@constants/message';\nimport { Editors } from 'src/markdownController/ToolBarEditors/index';\nvar StyledMarkdownArea = styled(TextInput).withConfig({\n  displayName: \"TextArea__StyledMarkdownArea\",\n  componentId: \"xd4oeb-0\"\n})([\"width:93%;height:64vh;padding-left:3vw;background-color:\", \";color:\", \";font-size:1.5rem;@media (max-width:\", \"){width:100%;border:none;}&::selection{background-color:\", \";}@media (max-width:\", \"){width:91%;height:65vh;padding:1.2em 0 0 1.2em;font-size:1rem;}\"], function () {\n  return Theme.HEADER_BACK;\n}, function () {\n  return Theme.INTRO;\n}, function () {\n  return Theme.TABLET;\n}, function () {\n  return Theme.TEXT_SELECT;\n}, function () {\n  return Theme.MOBILE;\n});\n_c = StyledMarkdownArea;\n\nfunction TextArea(_ref) {\n  _s();\n\n  var props = _ref.editButtonProps,\n      className = _ref.className;\n  var input = props.input,\n      setInput = props.setInput,\n      inputAreaElem = props.inputAreaElem,\n      setUploadState = props.setUploadState;\n  var imgEditor = Editors.img;\n  var uploadImg = Editors.img.uploadImg;\n  var getImgByDrag = useCallback(function (event) {\n    event.stopPropagation();\n    event.preventDefault();\n    var files = event.dataTransfer.files;\n    var imgFile = files[0];\n    return imgFile;\n  }, []);\n  var uploadImgByDrag = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var imgFile, timer;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              imgFile = getImgByDrag(event);\n              timer = setInterval(function () {\n                setUploadState(imgEditor.uploadingState);\n              }, 10);\n              _context.next = 4;\n              return uploadImg(imgFile);\n\n            case 4:\n              setUploadState(imgEditor.uploadingState);\n              clearInterval(timer);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  return /*#__PURE__*/_jsxDEV(StyledMarkdownArea, {\n    className: className,\n    placeholder: MESSAGE.POST_PLACEHOLDER,\n    state: input,\n    setState: setInput,\n    refElem: inputAreaElem,\n    onDrop: uploadImgByDrag\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TextArea, \"IsbIUkKKB+5Hv9GfAsguLEbwLRg=\");\n\n_c2 = TextArea;\nexport default TextArea;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledMarkdownArea\");\n$RefreshReg$(_c2, \"TextArea\");","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/post/TextArea/TextArea.tsx"],"names":["React","useCallback","styled","Theme","TextInput","MESSAGE","Editors","StyledMarkdownArea","HEADER_BACK","INTRO","TABLET","TEXT_SELECT","MOBILE","TextArea","props","editButtonProps","className","input","setInput","inputAreaElem","setUploadState","imgEditor","img","uploadImg","getImgByDrag","event","stopPropagation","preventDefault","files","dataTransfer","imgFile","uploadImgByDrag","timer","setInterval","uploadingState","clearInterval","POST_PLACEHOLDER"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAA8BC,WAA9B,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,OAAT,QAAwB,6CAAxB;AAEA,IAAMC,kBAAkB,GAAGL,MAAM,CAACE,SAAD,CAAT;AAAA;AAAA;AAAA,4QAIF;AAAA,SAAMD,KAAK,CAACK,WAAZ;AAAA,CAJE,EAKb;AAAA,SAAML,KAAK,CAACM,KAAZ;AAAA,CALa,EAOD;AAAA,SAAMN,KAAK,CAACO,MAAZ;AAAA,CAPC,EAaA;AAAA,SAAMP,KAAK,CAACQ,WAAZ;AAAA,CAbA,EAeD;AAAA,SAAMR,KAAK,CAACS,MAAZ;AAAA,CAfC,CAAxB;KAAML,kB;;AAuBN,SAASM,QAAT,OAA4F;AAAA;;AAAA,MAAvDC,KAAuD,QAAxEC,eAAwE;AAAA,MAAhDC,SAAgD,QAAhDA,SAAgD;AAAA,MAClFC,KADkF,GAC/BH,KAD+B,CAClFG,KADkF;AAAA,MAC3EC,QAD2E,GAC/BJ,KAD+B,CAC3EI,QAD2E;AAAA,MACjEC,aADiE,GAC/BL,KAD+B,CACjEK,aADiE;AAAA,MAClDC,cADkD,GAC/BN,KAD+B,CAClDM,cADkD;AAE1F,MAAMC,SAAS,GAAGf,OAAO,CAACgB,GAA1B;AAF0F,MAGlFC,SAHkF,GAGpEjB,OAAO,CAACgB,GAH4D,CAGlFC,SAHkF;AAK1F,MAAMC,YAAY,GAAGvB,WAAW,CAAC,UAACwB,KAAD,EAA+C;AAC9EA,IAAAA,KAAK,CAACC,eAAN;AACAD,IAAAA,KAAK,CAACE,cAAN;AAF8E,QAGtEC,KAHsE,GAG5DH,KAAK,CAACI,YAHsD,CAGtED,KAHsE;AAAA,QAInEE,OAJmE,GAIvDF,KAJuD,CAItE,CAJsE;AAK9E,WAAOE,OAAP;AACD,GAN+B,EAM7B,EAN6B,CAAhC;AAQA,MAAMC,eAAiC,GAAG9B,WAAW;AAAA,yEAAC,iBAAOwB,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9CK,cAAAA,OAD8C,GACpCN,YAAY,CAACC,KAAD,CADwB;AAE9CO,cAAAA,KAF8C,GAEtCC,WAAW,CAAC,YAAM;AAC9Bb,gBAAAA,cAAc,CAACC,SAAS,CAACa,cAAX,CAAd;AACD,eAFwB,EAEtB,EAFsB,CAF2B;AAAA;AAAA,qBAK9CX,SAAS,CAACO,OAAD,CALqC;;AAAA;AAMpDV,cAAAA,cAAc,CAACC,SAAS,CAACa,cAAX,CAAd;AACAC,cAAAA,aAAa,CAACH,KAAD,CAAb;;AAPoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;AAAA,OAQlD,EARkD,CAArD;AAUA,sBACE,QAAC,kBAAD;AACE,IAAA,SAAS,EAAEhB,SADb;AAEE,IAAA,WAAW,EAAEX,OAAO,CAAC+B,gBAFvB;AAGE,IAAA,KAAK,EAAEnB,KAHT;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAKE,IAAA,OAAO,EAAEC,aALX;AAME,IAAA,MAAM,EAAEY;AANV;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAjCQlB,Q;;MAAAA,Q;AAmCT,eAAeA,QAAf","sourcesContent":["import React, { ReactElement, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@constants/Theme';\nimport { IEditComponentProps, IOnDragEventFunc } from '@types';\nimport TextInput from '@components/common/TextInput';\nimport MESSAGE from '@constants/message';\nimport { Editors } from 'src/markdownController/ToolBarEditors/index';\n\nconst StyledMarkdownArea = styled(TextInput)`\n  width: 93%;\n  height: 64vh;\n  padding-left: 3vw;\n  background-color: ${() => Theme.HEADER_BACK};\n  color: ${() => Theme.INTRO};\n  font-size: 1.5rem;\n  @media (max-width: ${() => Theme.TABLET}) {\n    width: 100%;\n    border: none;\n  }\n\n  &::selection {\n    background-color: ${() => Theme.TEXT_SELECT};\n  }\n  @media (max-width: ${() => Theme.MOBILE}) {\n    width: 91%;\n    height: 65vh;\n    padding: 1.2em 0 0 1.2em;\n    font-size: 1rem;\n  }\n`;\n\nfunction TextArea({ editButtonProps: props, className }: IEditComponentProps): ReactElement {\n  const { input, setInput, inputAreaElem, setUploadState } = props;\n  const imgEditor = Editors.img;\n  const { uploadImg } = Editors.img;\n\n  const getImgByDrag = useCallback((event: React.DragEvent<HTMLElement>): File => {\n    event.stopPropagation();\n    event.preventDefault();\n    const { files } = event.dataTransfer;\n    const { 0: imgFile } = files;\n    return imgFile;\n  }, []);\n\n  const uploadImgByDrag: IOnDragEventFunc = useCallback(async (event) => {\n    const imgFile = getImgByDrag(event);\n    const timer = setInterval(() => {\n      setUploadState(imgEditor.uploadingState);\n    }, 10);\n    await uploadImg(imgFile);\n    setUploadState(imgEditor.uploadingState);\n    clearInterval(timer);\n  }, []);\n\n  return (\n    <StyledMarkdownArea\n      className={className}\n      placeholder={MESSAGE.POST_PLACEHOLDER}\n      state={input}\n      setState={setInput}\n      refElem={inputAreaElem}\n      onDrop={uploadImgByDrag}\n    />\n  );\n}\n\nexport default TextArea;\n"]},"metadata":{},"sourceType":"module"}