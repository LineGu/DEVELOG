{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport Theme from '@theme/index';\n\nconst useTextLoop = introList => {\n  const {\n    0: margin,\n    1: setMargin\n  } = useState('100%');\n  const {\n    0: color,\n    1: setColor\n  } = useState(Theme.POINT);\n  const {\n    0: opacity,\n    1: setOpacity\n  } = useState('100%');\n  const {\n    0: intro,\n    1: setIntro\n  } = useState(introList[0]);\n  useEffect(() => {\n    let mounted = true;\n    let i = 1;\n    setMargin('0%');\n    const timerToSetTiming = setTimeout(() => {\n      if (!mounted) {\n        clearTimeout(timerToSetTiming);\n        return;\n      }\n\n      setMargin('100%');\n      setOpacity('0%');\n      const timerToHide = setInterval(() => {\n        if (!mounted) {\n          clearInterval(timerToHide);\n          return;\n        }\n\n        setMargin('100%');\n        setOpacity('0%');\n      }, 4000);\n    }, 3000);\n    const timerToShow = setInterval(() => {\n      if (!mounted) {\n        clearInterval(timerToShow);\n        return;\n      }\n\n      setMargin('0%');\n      setColor(Theme.POINT);\n      setOpacity('100%');\n      setIntro(introList[i]);\n      i += 1;\n      i = i > 3 ? 0 : i;\n    }, 4000);\n    return function cleanUp() {\n      mounted = false;\n    };\n  }, []);\n  return {\n    margin,\n    color,\n    opacity,\n    intro\n  };\n};\n\nexport default useTextLoop;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/textLoop.tsx"],"names":["useState","useEffect","Theme","useTextLoop","introList","margin","setMargin","color","setColor","POINT","opacity","setOpacity","intro","setIntro","mounted","i","timerToSetTiming","setTimeout","clearTimeout","timerToHide","setInterval","clearInterval","timerToShow","cleanUp"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AASA,MAAMC,WAAW,GAAIC,SAAD,IAAqC;AACvD,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAS,MAAT,CAApC;AACA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAASE,KAAK,CAACO,KAAf,CAAlC;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAS,MAAT,CAAtC;AACA,QAAM;AAAA,OAACY,KAAD;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,CAASI,SAAS,CAAC,CAAD,CAAlB,CAAlC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,OAAO,GAAG,IAAd;AACA,QAAIC,CAAC,GAAG,CAAR;AAEAT,IAAAA,SAAS,CAAC,IAAD,CAAT;AACA,UAAMU,gBAAgB,GAAGC,UAAU,CAAC,MAAM;AACxC,UAAI,CAACH,OAAL,EAAc;AACZI,QAAAA,YAAY,CAACF,gBAAD,CAAZ;AACA;AACD;;AACDV,MAAAA,SAAS,CAAC,MAAD,CAAT;AACAK,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMQ,WAAW,GAAGC,WAAW,CAAC,MAAM;AACpC,YAAI,CAACN,OAAL,EAAc;AACZO,UAAAA,aAAa,CAACF,WAAD,CAAb;AACA;AACD;;AACDb,QAAAA,SAAS,CAAC,MAAD,CAAT;AAEAK,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAR8B,EAQ5B,IAR4B,CAA/B;AASD,KAhBkC,EAgBhC,IAhBgC,CAAnC;AAkBA,UAAMW,WAAW,GAAGF,WAAW,CAAC,MAAM;AACpC,UAAI,CAACN,OAAL,EAAc;AACZO,QAAAA,aAAa,CAACC,WAAD,CAAb;AACA;AACD;;AACDhB,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,MAAAA,QAAQ,CAACN,KAAK,CAACO,KAAP,CAAR;AACAE,MAAAA,UAAU,CAAC,MAAD,CAAV;AACAE,MAAAA,QAAQ,CAACT,SAAS,CAACW,CAAD,CAAV,CAAR;AACAA,MAAAA,CAAC,IAAI,CAAL;AACAA,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAYA,CAAhB;AACD,KAX8B,EAW5B,IAX4B,CAA/B;AAaA,WAAO,SAASQ,OAAT,GAAmB;AACxBT,MAAAA,OAAO,GAAG,KAAV;AACD,KAFD;AAGD,GAvCQ,EAuCN,EAvCM,CAAT;AAyCA,SAAO;AAAET,IAAAA,MAAF;AAAUE,IAAAA,KAAV;AAAiBG,IAAAA,OAAjB;AAA0BE,IAAAA;AAA1B,GAAP;AACD,CA/CD;;AAiDA,eAAeT,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport Theme from '@theme/index';\n\ntype ReturnType = {\n  margin: string;\n  color: string;\n  opacity: string;\n  intro: string;\n};\n\nconst useTextLoop = (introList: string[]): ReturnType => {\n  const [margin, setMargin] = useState<string>('100%');\n  const [color, setColor] = useState<string>(Theme.POINT);\n  const [opacity, setOpacity] = useState<string>('100%');\n  const [intro, setIntro] = useState<string>(introList[0]);\n  useEffect(() => {\n    let mounted = true;\n    let i = 1;\n\n    setMargin('0%');\n    const timerToSetTiming = setTimeout(() => {\n      if (!mounted) {\n        clearTimeout(timerToSetTiming);\n        return;\n      }\n      setMargin('100%');\n      setOpacity('0%');\n      const timerToHide = setInterval(() => {\n        if (!mounted) {\n          clearInterval(timerToHide);\n          return;\n        }\n        setMargin('100%');\n\n        setOpacity('0%');\n      }, 4000);\n    }, 3000);\n\n    const timerToShow = setInterval(() => {\n      if (!mounted) {\n        clearInterval(timerToShow);\n        return;\n      }\n      setMargin('0%');\n      setColor(Theme.POINT);\n      setOpacity('100%');\n      setIntro(introList[i]);\n      i += 1;\n      i = i > 3 ? 0 : i;\n    }, 4000);\n\n    return function cleanUp() {\n      mounted = false;\n    };\n  }, []);\n\n  return { margin, color, opacity, intro };\n};\n\nexport default useTextLoop;\n"]},"metadata":{},"sourceType":"module"}