{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/atoms/TextInput/TextInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nvar StyledTextInput = styled.textarea.withConfig({\n  displayName: \"TextInput__StyledTextInput\",\n  componentId: \"udzm0i-0\"\n})([\"border:none;outline:none;resize:none;pointer-events:auto;\"]);\n_c = StyledTextInput;\n\nfunction TextInput(textAreaProperty) {\n  _s();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var placeholder = textAreaProperty.placeholder,\n      _onChange = textAreaProperty.onChange,\n      _onFocus = textAreaProperty.onFocus,\n      _onBlur = textAreaProperty.onBlur,\n      _onKeyDown = textAreaProperty.onKeyDown,\n      className = textAreaProperty.className;\n  return /*#__PURE__*/_jsxDEV(StyledTextInput, {\n    className: className,\n    placeholder: placeholder,\n    spellCheck: \"false\",\n    value: text,\n    onChange: function onChange(event) {\n      if (_onChange) {\n        _onChange({\n          event: event,\n          setText: setText\n        });\n\n        return;\n      }\n\n      setText(event.target.value);\n    },\n    onFocus: function onFocus(event) {\n      if (!_onFocus) return;\n\n      _onFocus(event);\n    },\n    onBlur: function onBlur(event) {\n      if (!_onBlur) return;\n\n      _onBlur(event);\n    },\n    onKeyDown: function onKeyDown(event) {\n      if (!_onKeyDown) return;\n\n      _onKeyDown({\n        event: event,\n        text: text,\n        setText: setText\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TextInput, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c2 = TextInput;\nexport default TextInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledTextInput\");\n$RefreshReg$(_c2, \"TextInput\");","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/atoms/TextInput/TextInput.tsx"],"names":["React","useState","styled","StyledTextInput","textarea","TextInput","textAreaProperty","text","setText","placeholder","onChange","onFocus","onBlur","onKeyDown","className","event","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAwDC,QAAxD,QAAwE,OAAxE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AA4BA,IAAMC,eAAe,GAAGD,MAAM,CAACE,QAAV;AAAA;AAAA;AAAA,iEAArB;KAAMD,e;;AAON,SAASE,SAAT,CAAmBC,gBAAnB,EAAoE;AAAA;;AAAA,kBAC1CL,QAAQ,CAAC,EAAD,CADkC;AAAA,MAC3DM,IAD2D;AAAA,MACrDC,OADqD;;AAAA,MAE1DC,WAF0D,GAEOH,gBAFP,CAE1DG,WAF0D;AAAA,MAE7CC,SAF6C,GAEOJ,gBAFP,CAE7CI,QAF6C;AAAA,MAEnCC,QAFmC,GAEOL,gBAFP,CAEnCK,OAFmC;AAAA,MAE1BC,OAF0B,GAEON,gBAFP,CAE1BM,MAF0B;AAAA,MAElBC,UAFkB,GAEOP,gBAFP,CAElBO,SAFkB;AAAA,MAEPC,SAFO,GAEOR,gBAFP,CAEPQ,SAFO;AAIlE,sBACE,QAAC,eAAD;AACE,IAAA,SAAS,EAAEA,SADb;AAEE,IAAA,WAAW,EAAEL,WAFf;AAGE,IAAA,UAAU,EAAC,OAHb;AAIE,IAAA,KAAK,EAAEF,IAJT;AAKE,IAAA,QAAQ,EAAE,kBAACQ,KAAD,EAAW;AACnB,UAAIL,SAAJ,EAAc;AACZA,QAAAA,SAAQ,CAAC;AAAEK,UAAAA,KAAK,EAALA,KAAF;AAASP,UAAAA,OAAO,EAAPA;AAAT,SAAD,CAAR;;AACA;AACD;;AACDA,MAAAA,OAAO,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,KAXH;AAYE,IAAA,OAAO,EAAE,iBAACF,KAAD,EAAW;AAClB,UAAI,CAACJ,QAAL,EAAc;;AACdA,MAAAA,QAAO,CAACI,KAAD,CAAP;AACD,KAfH;AAgBE,IAAA,MAAM,EAAE,gBAACA,KAAD,EAAW;AACjB,UAAI,CAACH,OAAL,EAAa;;AACbA,MAAAA,OAAM,CAACG,KAAD,CAAN;AACD,KAnBH;AAoBE,IAAA,SAAS,EAAE,mBAACA,KAAD,EAAW;AACpB,UAAI,CAACF,UAAL,EAAgB;;AAChBA,MAAAA,UAAS,CAAC;AAAEE,QAAAA,KAAK,EAALA,KAAF;AAASR,QAAAA,IAAI,EAAJA,IAAT;AAAeC,QAAAA,OAAO,EAAPA;AAAf,OAAD,CAAT;AACD;AAvBH;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA/BQH,S;;MAAAA,S;AAiCT,eAAeA,SAAf","sourcesContent":["import React, { Dispatch, ReactElement, SetStateAction, useState } from 'react';\nimport styled from 'styled-components';\nimport { IComponentProps } from '@interfaces';\n\ninterface ITextState extends IEventProps {\n  text?: string;\n  setText: Dispatch<SetStateAction<string>>;\n}\n\ninterface IChangeEventProps {\n  event: React.ChangeEvent<HTMLTextAreaElement>;\n}\n\ninterface IKeyboardEventProps {\n  event: React.KeyboardEvent<HTMLTextAreaElement>;\n}\n\ninterface ITextInputProps extends IComponentProps {\n  placeholder: string;\n  onChange?: (props: IEventProps) => void;\n  onFocus?: (event?: React.FocusEvent<HTMLTextAreaElement>, setState?: Dispatch<SetStateAction<string>>) => void;\n  onBlur?: (event?: React.FocusEvent<HTMLTextAreaElement>, setState?: Dispatch<SetStateAction<string>>) => void;\n  onKeyDown?: (\n    event: React.KeyboardEvent<HTMLTextAreaElement>,\n    text: string,\n    setState: Dispatch<SetStateAction<string>>,\n  ) => void;\n}\n\nconst StyledTextInput = styled.textarea`\n  border: none;\n  outline: none;\n  resize: none;\n  pointer-events: auto;\n`;\n\nfunction TextInput(textAreaProperty: ITextInputProps): ReactElement {\n  const [text, setText] = useState('');\n  const { placeholder, onChange, onFocus, onBlur, onKeyDown, className } = textAreaProperty;\n\n  return (\n    <StyledTextInput\n      className={className}\n      placeholder={placeholder}\n      spellCheck=\"false\"\n      value={text}\n      onChange={(event) => {\n        if (onChange) {\n          onChange({ event, setText });\n          return;\n        }\n        setText(event.target.value);\n      }}\n      onFocus={(event) => {\n        if (!onFocus) return;\n        onFocus(event);\n      }}\n      onBlur={(event) => {\n        if (!onBlur) return;\n        onBlur(event);\n      }}\n      onKeyDown={(event) => {\n        if (!onKeyDown) return;\n        onKeyDown({ event, text, setText });\n      }}\n    />\n  );\n}\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}