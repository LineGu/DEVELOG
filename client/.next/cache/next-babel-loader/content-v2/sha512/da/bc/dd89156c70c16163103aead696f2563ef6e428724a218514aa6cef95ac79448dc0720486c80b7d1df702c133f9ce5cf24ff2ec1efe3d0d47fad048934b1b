{"ast":null,"code":"import axios from 'axios';\nimport { headerOption } from '@config/headerForImgur';\nimport { url } from '@construction/url';\n\nconst uploadImg = async (file, setProcess, setImageUrl) => {\n  const isExcessSize = file.size > 5000000;\n\n  const getUploadProgress = ProgressEvent => {\n    const progress = Math.round(ProgressEvent.loaded / ProgressEvent.total * 100);\n    setProcess({\n      progress,\n      error: ''\n    });\n  };\n\n  if (file && isExcessSize) {\n    setProcess({\n      progress: 0,\n      error: 'EXCESS'\n    });\n  }\n\n  const imgData = new FormData();\n  imgData.append('image', file);\n\n  try {\n    const postConfig = {\n      headers: headerOption,\n      onUploadProgress: ProgressEvent => getUploadProgress(ProgressEvent)\n    };\n    const response = await axios.post(url.IMGUR, imgData, postConfig);\n    const imgLink = response.data.data.link;\n    setImageUrl(imgLink);\n    setProcess({\n      progress: 0,\n      error: ''\n    });\n  } catch (error) {\n    setProcess({\n      progress: 0,\n      error\n    });\n  }\n};\n\nexport default uploadImg;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/uploadImg.ts"],"names":["axios","headerOption","url","uploadImg","file","setProcess","setImageUrl","isExcessSize","size","getUploadProgress","ProgressEvent","progress","Math","round","loaded","total","error","imgData","FormData","append","postConfig","headers","onUploadProgress","response","post","IMGUR","imgLink","data","link"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,GAAT,QAAoB,mBAApB;;AAGA,MAAMC,SAAS,GAAG,OAAOC,IAAP,EAAmBC,UAAnB,EAAgDC,WAAhD,KAA+F;AAC/G,QAAMC,YAAY,GAAGH,IAAI,CAACI,IAAL,GAAY,OAAjC;;AAEA,QAAMC,iBAAiB,GAAIC,aAAD,IAAkC;AAC1D,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAYH,aAAa,CAACI,MAAd,GAAuBJ,aAAa,CAACK,KAAtC,GAA+C,GAA1D,CAAjB;AACAV,IAAAA,UAAU,CAAC;AAAEM,MAAAA,QAAF;AAAYK,MAAAA,KAAK,EAAE;AAAnB,KAAD,CAAV;AACD,GAHD;;AAKA,MAAIZ,IAAI,IAAIG,YAAZ,EAA0B;AACxBF,IAAAA,UAAU,CAAC;AAAEM,MAAAA,QAAQ,EAAE,CAAZ;AAAeK,MAAAA,KAAK,EAAE;AAAtB,KAAD,CAAV;AACD;;AAED,QAAMC,OAAO,GAAG,IAAIC,QAAJ,EAAhB;AACAD,EAAAA,OAAO,CAACE,MAAR,CAAe,OAAf,EAAwBf,IAAxB;;AAEA,MAAI;AACF,UAAMgB,UAAU,GAAG;AACjBC,MAAAA,OAAO,EAAEpB,YADQ;AAEjBqB,MAAAA,gBAAgB,EAAGZ,aAAD,IAAkCD,iBAAiB,CAACC,aAAD;AAFpD,KAAnB;AAKA,UAAMa,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAWtB,GAAG,CAACuB,KAAf,EAAsBR,OAAtB,EAA+BG,UAA/B,CAAvB;AACA,UAAMM,OAAO,GAAGH,QAAQ,CAACI,IAAT,CAAcA,IAAd,CAAmBC,IAAnC;AACAtB,IAAAA,WAAW,CAACoB,OAAD,CAAX;AACArB,IAAAA,UAAU,CAAC;AAAEM,MAAAA,QAAQ,EAAE,CAAZ;AAAeK,MAAAA,KAAK,EAAE;AAAtB,KAAD,CAAV;AACD,GAVD,CAUE,OAAOA,KAAP,EAAc;AACdX,IAAAA,UAAU,CAAC;AAAEM,MAAAA,QAAQ,EAAE,CAAZ;AAAeK,MAAAA;AAAf,KAAD,CAAV;AACD;AACF,CA5BD;;AA8BA,eAAeb,SAAf","sourcesContent":["import axios from 'axios';\nimport { headerOption } from '@config/headerForImgur';\nimport { url } from '@construction/url';\nimport { SetStateProcess, SetStateString } from '@types';\n\nconst uploadImg = async (file: File, setProcess: SetStateProcess, setImageUrl: SetStateString): Promise<void> => {\n  const isExcessSize = file.size > 5000000;\n\n  const getUploadProgress = (ProgressEvent: ProgressEvent) => {\n    const progress = Math.round((ProgressEvent.loaded / ProgressEvent.total) * 100);\n    setProcess({ progress, error: '' });\n  };\n\n  if (file && isExcessSize) {\n    setProcess({ progress: 0, error: 'EXCESS' });\n  }\n\n  const imgData = new FormData();\n  imgData.append('image', file);\n\n  try {\n    const postConfig = {\n      headers: headerOption,\n      onUploadProgress: (ProgressEvent: ProgressEvent) => getUploadProgress(ProgressEvent),\n    };\n\n    const response = await axios.post(url.IMGUR, imgData, postConfig);\n    const imgLink = response.data.data.link;\n    setImageUrl(imgLink);\n    setProcess({ progress: 0, error: '' });\n  } catch (error) {\n    setProcess({ progress: 0, error });\n  }\n};\n\nexport default uploadImg;\n"]},"metadata":{},"sourceType":"module"}