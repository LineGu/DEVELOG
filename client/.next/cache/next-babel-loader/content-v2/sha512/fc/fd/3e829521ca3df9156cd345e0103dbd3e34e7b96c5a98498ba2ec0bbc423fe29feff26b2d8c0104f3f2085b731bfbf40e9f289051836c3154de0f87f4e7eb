{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TableModal/Block.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nvar BoxUnit = styled.div.withConfig({\n  displayName: \"Block__BoxUnit\",\n  componentId: \"sc-1h0y9qe-0\"\n})([\"width:20px;height:20px;margin:2px;padding:0;border:1px solid \", \";background-color:\", \";\"], function (_ref) {\n  var color = _ref.color;\n  return color === Theme.HEADER_BACK ? Theme.OUT_LINE : Theme.HEADER_BACK;\n}, function (_ref2) {\n  var color = _ref2.color;\n  return color;\n});\n_c = BoxUnit;\nvar BlockBox = styled.div.withConfig({\n  displayName: \"Block__BlockBox\",\n  componentId: \"sc-1h0y9qe-1\"\n})([\"display:flex;margin:0;padding:0;\"]);\n_c2 = BlockBox;\n\nfunction Block(_ref3) {\n  _s();\n\n  var _this = this;\n\n  var blockPorps = _ref3.blockPorps;\n  var checkedPoint = blockPorps.checkedPoint,\n      setCheckedPoint = blockPorps.setCheckedPoint,\n      resetCheckedPoint = blockPorps.resetCheckedPoint,\n      onClick = blockPorps.onClick;\n  var rowBlockLength = 10;\n  var columnBlockLength = 8;\n  var rowBlockCount = new Array(rowBlockLength).fill(0);\n  var columnBlockCount = new Array(columnBlockLength).fill(0);\n\n  var _checkedPoint = _slicedToArray(checkedPoint, 2),\n      xPoint = _checkedPoint[0],\n      yPoint = _checkedPoint[1];\n\n  var addTableByClick = useCallback(function (event) {\n    var rowCount = xPoint + 1,\n        columnCount = yPoint + 1; // onClick(event, [rowCount, columnCount]);\n\n    resetCheckedPoint();\n  }, [checkedPoint]);\n  var updateCheckedPoint = useCallback(function (event) {\n    var _event$currentTarget$ = event.currentTarget.id.split(','),\n        _event$currentTarget$2 = _slicedToArray(_event$currentTarget$, 2),\n        xPointStr = _event$currentTarget$2[0],\n        yPointStr = _event$currentTarget$2[1];\n\n    var newCheckedPoint = [parseInt(xPointStr, 10), parseInt(yPointStr, 10)];\n    setCheckedPoint(newCheckedPoint);\n    event.stopPropagation();\n  }, []);\n  var setBoxColor = useCallback(function (columnNum, rowNum) {\n    var isCheckedBlock = checkedPoint[0] >= columnNum && checkedPoint[1] >= rowNum;\n    return isCheckedBlock ? Theme.HEADER_BACK : Theme.MODAL_EDIT;\n  }, [checkedPoint]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: columnBlockCount.map(function (__, rowNum) {\n      return /*#__PURE__*/_jsxDEV(BlockBox, {\n        id: \"table\",\n        className: \"block_row_box\",\n        onClick: addTableByClick,\n        onMouseOver: function onMouseOver(event) {\n          return event.stopPropagation();\n        },\n        children: rowBlockCount.map(function (_, colNum) {\n          return /*#__PURE__*/_jsxDEV(BoxUnit, {\n            id: \"\".concat(colNum, \",\").concat(rowNum),\n            onMouseOver: updateCheckedPoint,\n            color: setBoxColor(colNum, rowNum)\n          }, colNum, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this);\n        })\n      }, rowNum, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false);\n}\n\n_s(Block, \"b0e2TGu4FVcL/8cwVdoY0bYtyNA=\");\n\n_c3 = Block;\nexport default Block;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"BoxUnit\");\n$RefreshReg$(_c2, \"BlockBox\");\n$RefreshReg$(_c3, \"Block\");","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TableModal/Block.tsx"],"names":["React","useCallback","styled","Theme","BoxUnit","div","color","HEADER_BACK","OUT_LINE","BlockBox","Block","blockPorps","checkedPoint","setCheckedPoint","resetCheckedPoint","onClick","rowBlockLength","columnBlockLength","rowBlockCount","Array","fill","columnBlockCount","xPoint","yPoint","addTableByClick","event","rowCount","columnCount","updateCheckedPoint","currentTarget","id","split","xPointStr","yPointStr","newCheckedPoint","parseInt","stopPropagation","setBoxColor","columnNum","rowNum","isCheckedBlock","MODAL_EDIT","map","__","_","colNum"],"mappings":"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","sourcesContent":["import React, { ReactElement, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport { setStateNumberArr } from '@types';\nimport { IOnHoverDivFunc } from '@eventInterfaces';\n\ninterface IBlockProps {\n  blockPorps: {\n    checkedPoint: number[];\n    setCheckedPoint: setStateNumberArr;\n    resetCheckedPoint: () => void;\n  };\n}\n\nconst BoxUnit = styled.div<{ color: string }>`\n  width: 20px;\n  height: 20px;\n  margin: 2px;\n  padding: 0;\n  border: 1px solid ${({ color }) => (color === Theme.HEADER_BACK ? Theme.OUT_LINE : Theme.HEADER_BACK)};\n  background-color: ${({ color }) => color};\n`;\n\nconst BlockBox = styled.div`\n  display: flex;\n  margin: 0;\n  padding: 0;\n`;\n\nfunction Block({ blockPorps }: IBlockProps): ReactElement {\n  const { checkedPoint, setCheckedPoint, resetCheckedPoint, onClick } = blockPorps;\n  const rowBlockLength = 10;\n  const columnBlockLength = 8;\n  const rowBlockCount = new Array(rowBlockLength).fill(0);\n  const columnBlockCount = new Array(columnBlockLength).fill(0);\n  const [xPoint, yPoint] = checkedPoint;\n\n  const addTableByClick = useCallback(\n    (event) => {\n      const [rowCount, columnCount] = [xPoint + 1, yPoint + 1];\n      // onClick(event, [rowCount, columnCount]);\n      resetCheckedPoint();\n    },\n    [checkedPoint],\n  );\n\n  const updateCheckedPoint: IOnHoverDivFunc = useCallback((event) => {\n    const [xPointStr, yPointStr] = event.currentTarget.id.split(',');\n    const newCheckedPoint = [parseInt(xPointStr, 10), parseInt(yPointStr, 10)];\n    setCheckedPoint(newCheckedPoint);\n    event.stopPropagation();\n  }, []);\n\n  const setBoxColor = useCallback(\n    (columnNum, rowNum) => {\n      const isCheckedBlock = checkedPoint[0] >= columnNum && checkedPoint[1] >= rowNum;\n      return isCheckedBlock ? Theme.HEADER_BACK : Theme.MODAL_EDIT;\n    },\n    [checkedPoint],\n  );\n\n  return (\n    <>\n      {columnBlockCount.map((__, rowNum) => (\n        <BlockBox\n          key={rowNum}\n          id=\"table\"\n          className=\"block_row_box\"\n          onClick={addTableByClick}\n          onMouseOver={(event) => event.stopPropagation()}\n        >\n          {rowBlockCount.map((_, colNum) => (\n            <BoxUnit\n              key={colNum}\n              id={`${colNum},${rowNum}`}\n              onMouseOver={updateCheckedPoint}\n              color={setBoxColor(colNum, rowNum)}\n            />\n          ))}\n        </BlockBox>\n      ))}\n    </>\n  );\n}\n\nexport default Block;\n"]},"metadata":{},"sourceType":"module"}