{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TableModal/TableModal.tsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport Block from './Block';\nconst StyledModal = styled.div.withConfig({\n  displayName: \"TableModal__StyledModal\",\n  componentId: \"sc-10g38zi-0\"\n})([\"display:\", \";position:absolute;flex-direction:column;margin:0;padding:5px 15px 10px 15px;border-radius:0.2em;pointer-events:visibleFill;background-color:\", \";& > span{margin:5px 0px;color:\", \";}\"], ({\n  isHidden\n}) => isHidden ? 'none' : 'flex', () => Theme.MODAL_EDIT, () => Theme.HEADER_BACK);\n\nfunction TableModal({\n  className,\n  onClick,\n  isHidden,\n  setIsHidden\n}) {\n  const initValueCheckedPoint = [-1, -1];\n  const {\n    0: checkedPoint,\n    1: setCheckedPoint\n  } = useState(initValueCheckedPoint);\n  const [xPoint, yPoint] = checkedPoint;\n  const resetCheckedPoint = useCallback(() => setCheckedPoint(initValueCheckedPoint), []);\n  const hideTableModal = useCallback(() => {\n    setIsHidden(true);\n    resetCheckedPoint();\n  }, []);\n  const blockPorps = {\n    checkedPoint,\n    onClick,\n    setCheckedPoint,\n    resetCheckedPoint\n  };\n  const printCurrentCheckedPoint = useCallback(() => {\n    const isChecked = checkedPoint[0] !== initValueCheckedPoint[0];\n    const [rowCount, columnCount] = [xPoint + 1, yPoint + 1];\n    return isChecked ? `${rowCount} x ${columnCount} 표` : '표 삽입';\n  }, [checkedPoint]);\n  useEffect(() => {\n    document.addEventListener('click', hideTableModal);\n    document.addEventListener('mouseover', resetCheckedPoint);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledModal, {\n    isHidden: isHidden,\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: printCurrentCheckedPoint()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Block, {\n      blockPorps: blockPorps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\nexport default TableModal;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TableModal/TableModal.tsx"],"names":["React","useState","useEffect","useCallback","styled","Theme","Block","StyledModal","div","isHidden","MODAL_EDIT","HEADER_BACK","TableModal","className","onClick","setIsHidden","initValueCheckedPoint","checkedPoint","setCheckedPoint","xPoint","yPoint","resetCheckedPoint","hideTableModal","blockPorps","printCurrentCheckedPoint","isChecked","rowCount","columnCount","document","addEventListener"],"mappings":";;AACA,OAAOA,KAAP,IAA8BC,QAA9B,EAAwCC,SAAxC,EAAmDC,WAAnD,QAAsE,OAAtE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AAQA,MAAMC,WAAW,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,2MACJ,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmBA,QAAQ,GAAG,MAAH,GAAY,MADnC,EAQK,MAAMJ,KAAK,CAACK,UARjB,EAYJ,MAAML,KAAK,CAACM,WAZR,CAAjB;;AAgBA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBL,EAAAA,QAAtB;AAAgCM,EAAAA;AAAhC,CAApB,EAAmG;AACjG,QAAMC,qBAAqB,GAAG,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAA9B;AACA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCjB,QAAQ,CAAWe,qBAAX,CAAhD;AACA,QAAM,CAACG,MAAD,EAASC,MAAT,IAAmBH,YAAzB;AAEA,QAAMI,iBAAiB,GAAGlB,WAAW,CAAC,MAAMe,eAAe,CAACF,qBAAD,CAAtB,EAA+C,EAA/C,CAArC;AAEA,QAAMM,cAAc,GAAGnB,WAAW,CAAC,MAAM;AACvCY,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,IAAAA,iBAAiB;AAClB,GAHiC,EAG/B,EAH+B,CAAlC;AAKA,QAAME,UAAU,GAAG;AAAEN,IAAAA,YAAF;AAAgBH,IAAAA,OAAhB;AAAyBI,IAAAA,eAAzB;AAA0CG,IAAAA;AAA1C,GAAnB;AAEA,QAAMG,wBAAwB,GAAGrB,WAAW,CAAC,MAAM;AACjD,UAAMsB,SAAS,GAAGR,YAAY,CAAC,CAAD,CAAZ,KAAoBD,qBAAqB,CAAC,CAAD,CAA3D;AACA,UAAM,CAACU,QAAD,EAAWC,WAAX,IAA0B,CAACR,MAAM,GAAG,CAAV,EAAaC,MAAM,GAAG,CAAtB,CAAhC;AACA,WAAOK,SAAS,GAAI,GAAEC,QAAS,MAAKC,WAAY,IAAhC,GAAsC,MAAtD;AACD,GAJ2C,EAIzC,CAACV,YAAD,CAJyC,CAA5C;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCP,cAAnC;AACAM,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCR,iBAAvC;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,QAAC,WAAD;AAAa,IAAA,QAAQ,EAAEZ,QAAvB;AAAiC,IAAA,SAAS,EAAEI,SAA5C;AAAA,4BACE;AAAA,gBAAOW,wBAAwB;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,UAAU,EAAED;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AAED,eAAeX,UAAf","sourcesContent":["import { IComponentProps, ITableProps } from '@interfaces';\nimport React, { ReactElement, useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport { setStateBool } from '@types';\nimport Block from './Block';\n\ninterface ITableModalProps extends IComponentProps {\n  onClick: IOnClickSvgFunc;\n  isHidden: boolean;\n  setIsHidden: setStateBool;\n}\n\nconst StyledModal = styled.div<{ isHidden: boolean }>`\n  display: ${({ isHidden }) => (isHidden ? 'none' : 'flex')};\n  position: absolute;\n  flex-direction: column;\n  margin: 0;\n  padding: 5px 15px 10px 15px;\n  border-radius: 0.2em;\n  pointer-events: visibleFill;\n  background-color: ${() => Theme.MODAL_EDIT};\n\n  & > span {\n    margin: 5px 0px;\n    color: ${() => Theme.HEADER_BACK};\n  }\n`;\n\nfunction TableModal({ className, onClick, isHidden, setIsHidden }: ITableModalProps): ReactElement {\n  const initValueCheckedPoint = [-1, -1];\n  const [checkedPoint, setCheckedPoint] = useState<number[]>(initValueCheckedPoint);\n  const [xPoint, yPoint] = checkedPoint;\n\n  const resetCheckedPoint = useCallback(() => setCheckedPoint(initValueCheckedPoint), []);\n\n  const hideTableModal = useCallback(() => {\n    setIsHidden(true);\n    resetCheckedPoint();\n  }, []);\n\n  const blockPorps = { checkedPoint, onClick, setCheckedPoint, resetCheckedPoint };\n\n  const printCurrentCheckedPoint = useCallback(() => {\n    const isChecked = checkedPoint[0] !== initValueCheckedPoint[0];\n    const [rowCount, columnCount] = [xPoint + 1, yPoint + 1];\n    return isChecked ? `${rowCount} x ${columnCount} 표` : '표 삽입';\n  }, [checkedPoint]);\n\n  useEffect(() => {\n    document.addEventListener('click', hideTableModal);\n    document.addEventListener('mouseover', resetCheckedPoint);\n  }, []);\n\n  return (\n    <StyledModal isHidden={isHidden} className={className}>\n      <span>{printCurrentCheckedPoint()}</span>\n      <Block blockPorps={blockPorps} />\n    </StyledModal>\n  );\n}\n\nexport default TableModal;\n"]},"metadata":{},"sourceType":"module"}