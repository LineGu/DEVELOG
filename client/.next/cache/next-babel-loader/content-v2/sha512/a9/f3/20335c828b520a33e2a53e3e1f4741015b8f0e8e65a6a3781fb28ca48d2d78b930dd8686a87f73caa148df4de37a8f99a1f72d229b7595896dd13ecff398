{"ast":null,"code":"import _slicedToArray from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/PostBox/PostBox.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atelierCaveLight, a11yDark } from 'react-syntax-highlighter/dist/cjs/styles/hljs';\nimport useDependencyTheme from '@hook/useDependencyTheme';\nimport Theme from '@theme/index';\nimport ThemeButton from '@molecules/ThemeBtn/index';\nimport EditButtonBox from '@molecules/EditButtonBox/index';\nimport Button from '@atoms/Button/index';\nimport editInputText from '@utils/editInputText';\nimport WritingArea from '@molecules/WritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport TagAddingBox from '@organisms/TagAddingBox/index';\nimport MarkdownPreview from '@molecules/MarkdownPreview/index';\nvar StyledPostBox = styled.div.withConfig({\n  displayName: \"PostBox__StyledPostBox\",\n  componentId: \"sc-1h6avyu-0\"\n})([\"display:flex;position:relative;word-wrap:break-word;white-space:pre-wrap;word-break:normal;pointer-events:none;.editArea{width:50%;height:100vh;& > hr{position:absolute;top:13vh;left:3vw;width:9vw;border:4px solid \", \";padding-bottm:300px;}.tagModal{top:13.5em;}.show{animation-name:bounce;animation-duration:0.5s;@keyframes bounce{0%{transform:translate(0%,-50%);opacity:0;}40%{transform:translate(0%,0%);}55%{transform:translate(0%,-5%);}100%{opacity:1;}}}}.preview{width:50%;height:79vh;font-size:1.2rem;padding:10vh 6vw;outline:none;overflow-y:scroll;pointer-events:auto;color:\", \";h1{padding-bottom:1rem;border-bottom:1px solid \", \";}table{border-collapse:collapse;font-size:1rem;& th{border:1px solid \", \";border-bottom:2px solid \", \";padding:0.8rem 1.4rem;}& td{border:1px solid \", \";border-top:none;padding:0.8rem;}}a{color:\", \";text-decoration:none;}blockquote{margin:0;padding:0.2em;padding-left:3em;line-height:2rem;border-left:0.4em \", \" solid;}hr{width:100%;margin:2rem 0;color:\", \";opacity:60%;}p > code{font-size:1.3rem;font-weight:800;color:\", \";background-color:\", \";border-radius:0.3em;padding:0.15rem 0.5rem;margin:0 0.2rem 0 0.5rem;}img{width:25em;height:15em;}& > *::selection{background-color:inherit;}@media (max-width:\", \"){display:none;}}\"], function () {\n  return Theme.EMPHASIS;\n}, function () {\n  return Theme.INTRO;\n}, function () {\n  return Theme.LINK_MODAL;\n}, function () {\n  return Theme.BASE;\n}, function () {\n  return Theme.INTRO;\n}, function () {\n  return Theme.BASE;\n}, function () {\n  return Theme.MODE_MARK;\n}, function () {\n  return Theme.POINT;\n}, function () {\n  return Theme.BASE;\n}, function () {\n  return Theme.CODE;\n}, function () {\n  return Theme.EMPHASIS;\n}, function () {\n  return Theme.TABLET;\n});\n_c = StyledPostBox;\nvar StyledThemeButton = styled(ThemeButton).withConfig({\n  displayName: \"PostBox__StyledThemeButton\",\n  componentId: \"sc-1h6avyu-1\"\n})([\"pointer-events:auto;bottom:7vh;\"]);\n_c2 = StyledThemeButton;\n\nvar CodeBox = function CodeBox(_ref) {\n  _s();\n\n  var value = _ref.value,\n      language = _ref.language;\n\n  var _useDependencyTheme = useDependencyTheme(),\n      mode = _useDependencyTheme.mode;\n\n  var style = mode === 'LightMode' ? atelierCaveLight : a11yDark;\n  return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n    language: language !== null && language !== void 0 ? language : '',\n    style: style,\n    customStyle: {\n      lineHeight: '1.4em',\n      fontSize: '1.2em',\n      borderRadius: '0.5em',\n      backgroundColor: Theme.CODE_BOX\n    },\n    children: value !== null && value !== void 0 ? value : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CodeBox, \"FKadNyAFPLQLpv6LgYhybTminwE=\", false, function () {\n  return [useDependencyTheme];\n});\n\n_c3 = CodeBox;\nvar StyledButtonBox = styled.div.withConfig({\n  displayName: \"PostBox__StyledButtonBox\",\n  componentId: \"sc-1h6avyu-2\"\n})([\"position:absolute;right:42%;bottom:2rem;.save{}.submit{background-color:\", \";}\"], function () {\n  return Theme.SUBMIT_BTN;\n});\n_c4 = StyledButtonBox;\nvar StyledButton = styled(Button).withConfig({\n  displayName: \"PostBox__StyledButton\",\n  componentId: \"sc-1h6avyu-3\"\n})([\"margin-right:0.8em;\"]);\n_c5 = StyledButton;\n\nvar findCursorPoint = function findCursorPoint(element) {\n  var cursorPointStart = element === null || element === void 0 ? void 0 : element.selectionStart;\n  var cursorPointEnd = element === null || element === void 0 ? void 0 : element.selectionEnd;\n  var cursorPosition = [cursorPointStart, cursorPointEnd];\n  return cursorPosition;\n};\n\nfunction PostBox() {\n  _s2();\n\n  var _useState = useState(''),\n      input = _useState[0],\n      setInput = _useState[1];\n\n  var isEditText = useRef([false, [0, 0]]);\n\n  var _useState2 = useState([0, 0]),\n      cursorPosition = _useState2[0],\n      setCursorPosition = _useState2[1];\n\n  var _useState3 = useState(''),\n      imageUrl = _useState3[0],\n      setImageUrl = _useState3[1];\n\n  var _useDependencyTheme2 = useDependencyTheme(),\n      changeMode = _useDependencyTheme2.changeMode;\n\n  var inputAreaElem = useRef(null);\n  var propsAboutTextComponent = {\n    input: input,\n    setInput: setInput,\n    setCursorPosition: setCursorPosition,\n    findCursorPoint: findCursorPoint,\n    inputAreaElem: inputAreaElem\n  };\n\n  var editTextByButton = function editTextByButton(event) {\n    var _inputAreaElem$curren;\n\n    var cursorPositionToGo = editInputText({\n      event: event,\n      input: input,\n      setInput: setInput,\n      cursorPosition: cursorPosition\n    });\n    isEditText.current = [true, cursorPositionToGo];\n    (_inputAreaElem$curren = inputAreaElem.current) === null || _inputAreaElem$curren === void 0 ? void 0 : _inputAreaElem$curren.focus();\n  };\n\n  useEffect(function () {\n    if (isEditText.current[0]) {\n      var _inputAreaElem$curren2, _inputAreaElem$curren3;\n\n      var cursorToGo = isEditText.current[1];\n\n      var _ref2 = cursorToGo,\n          _ref3 = _slicedToArray(_ref2, 2),\n          startPosition = _ref3[0],\n          endPosition = _ref3[1];\n\n      (_inputAreaElem$curren2 = inputAreaElem.current) === null || _inputAreaElem$curren2 === void 0 ? void 0 : _inputAreaElem$curren2.focus();\n      (_inputAreaElem$curren3 = inputAreaElem.current) === null || _inputAreaElem$curren3 === void 0 ? void 0 : _inputAreaElem$curren3.setSelectionRange(startPosition, endPosition);\n      isEditText.current = [false, [0, 0]];\n      setCursorPosition(findCursorPoint(inputAreaElem.current));\n    }\n  }, [input]);\n  useEffect(function () {\n    if (imageUrl === null || imageUrl === undefined || imageUrl.length === 0) return;\n    var newInput = \"\".concat(input.slice(0, cursorPosition[0]), \"![](\").concat(imageUrl, \")\").concat(input.slice(cursorPosition[0]));\n    setInput(newInput);\n    setImageUrl('');\n  }, [imageUrl]);\n  return /*#__PURE__*/_jsxDEV(StyledPostBox, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editArea\",\n      children: [/*#__PURE__*/_jsxDEV(PostTitleInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TagAddingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditButtonBox, {\n        onClick: function onClick(event) {\n          return editTextByButton(event);\n        },\n        setImageUrl: setImageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WritingArea, {\n        className: \"textInput\",\n        propsAboutTextComponent: propsAboutTextComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MarkdownPreview, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledThemeButton, {\n      onClick: changeMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButtonBox, {\n      children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n        className: \"save\",\n        children: \"\\uC784\\uC2DC\\uC800\\uC7A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n        className: \"submit\",\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(PostBox, \"anNva9eXxiAzeV5VXNaDjiLciWU=\", false, function () {\n  return [useDependencyTheme];\n});\n\n_c6 = PostBox;\nexport default PostBox;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"StyledPostBox\");\n$RefreshReg$(_c2, \"StyledThemeButton\");\n$RefreshReg$(_c3, \"CodeBox\");\n$RefreshReg$(_c4, \"StyledButtonBox\");\n$RefreshReg$(_c5, \"StyledButton\");\n$RefreshReg$(_c6, \"PostBox\");","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/PostBox/PostBox.tsx"],"names":["React","useState","useRef","useEffect","styled","SyntaxHighlighter","atelierCaveLight","a11yDark","useDependencyTheme","Theme","ThemeButton","EditButtonBox","Button","editInputText","WritingArea","PostTitleInput","TagAddingBox","MarkdownPreview","StyledPostBox","div","EMPHASIS","INTRO","LINK_MODAL","BASE","MODE_MARK","POINT","CODE","TABLET","StyledThemeButton","CodeBox","value","language","mode","style","lineHeight","fontSize","borderRadius","backgroundColor","CODE_BOX","StyledButtonBox","SUBMIT_BTN","StyledButton","findCursorPoint","element","cursorPointStart","selectionStart","cursorPointEnd","selectionEnd","cursorPosition","PostBox","input","setInput","isEditText","setCursorPosition","imageUrl","setImageUrl","changeMode","inputAreaElem","propsAboutTextComponent","editTextByButton","event","cursorPositionToGo","current","focus","cursorToGo","startPosition","endPosition","setSelectionRange","undefined","length","newInput","slice"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atelierCaveLight, a11yDark } from 'react-syntax-highlighter/dist/cjs/styles/hljs';\nimport gfm from 'remark-gfm';\nimport useDependencyTheme from '@hook/useDependencyTheme';\nimport Theme from '@theme/index';\nimport ThemeButton from '@molecules/ThemeBtn/index';\nimport EditButtonBox from '@molecules/EditButtonBox/index';\nimport Button from '@atoms/Button/index';\nimport editInputText from '@utils/editInputText';\nimport WritingArea from '@molecules/WritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport TagAddingBox from '@organisms/TagAddingBox/index';\nimport MarkdownPreview from '@molecules/MarkdownPreview/index';\n\nconst StyledPostBox = styled.div`\n  display: flex;\n  position: relative;\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  word-break: normal;\n  pointer-events: none;\n\n  .editArea {\n    width: 50%;\n    height: 100vh;\n    & > hr {\n      position: absolute;\n      top: 13vh;\n      left: 3vw;\n      width: 9vw;\n      border: 4px solid ${() => Theme.EMPHASIS};\n      padding-bottm: 300px;\n    }\n\n    .tagModal {\n      top: 13.5em;\n    }\n\n    .show {\n      animation-name: bounce;\n      animation-duration: 0.5s;\n\n      @keyframes bounce {\n        0% {\n          transform: translate(0%, -50%);\n          opacity: 0;\n        }\n        40% {\n          transform: translate(0%, 0%);\n        }\n        55% {\n          transform: translate(0%, -5%);\n        }\n        100% {\n          opacity: 1;\n        }\n      }\n    }\n  }\n  .preview {\n    width: 50%;\n    height: 79vh;\n    font-size: 1.2rem;\n    padding: 10vh 6vw;\n    outline: none;\n    overflow-y: scroll;\n    pointer-events: auto;\n    color: ${() => Theme.INTRO};\n\n    h1 {\n      padding-bottom: 1rem;\n      border-bottom: 1px solid ${() => Theme.LINK_MODAL};\n    }\n    table {\n      border-collapse: collapse;\n      font-size: 1rem;\n      & th {\n        border: 1px solid ${() => Theme.BASE};\n        border-bottom: 2px solid ${() => Theme.INTRO};\n        padding: 0.8rem 1.4rem;\n      }\n      & td {\n        border: 1px solid ${() => Theme.BASE};\n        border-top: none;\n        padding: 0.8rem;\n      }\n    }\n    a {\n      color: ${() => Theme.MODE_MARK};\n      text-decoration: none;\n    }\n    blockquote {\n      margin: 0;\n      padding: 0.2em;\n      padding-left: 3em;\n      line-height: 2rem;\n      border-left: 0.4em ${() => Theme.POINT} solid;\n    }\n    hr {\n      width: 100%;\n      margin: 2rem 0;\n      color: ${() => Theme.BASE};\n      opacity: 60%;\n    }\n    p > code {\n      font-size: 1.3rem;\n      font-weight: 800;\n      color: ${() => Theme.CODE};\n      background-color: ${() => Theme.EMPHASIS};\n      border-radius: 0.3em;\n      padding: 0.15rem 0.5rem;\n      margin: 0 0.2rem 0 0.5rem;\n    }\n    img {\n      width: 25em;\n      height: 15em;\n    }\n    & > *::selection {\n      background-color: inherit;\n    }\n\n    @media (max-width: ${() => Theme.TABLET}) {\n      display: none;\n    }\n  }\n`;\n\nconst StyledThemeButton = styled(ThemeButton)`\n  pointer-events: auto;\n  bottom: 7vh;\n`;\n\ninterface ICodeBoxProps {\n  value: string;\n  language: string;\n  className: string;\n}\n\nconst CodeBox = ({ value, language }: ICodeBoxProps): ReactElement => {\n  const { mode } = useDependencyTheme();\n  const style = mode === 'LightMode' ? atelierCaveLight : a11yDark;\n  return (\n    <SyntaxHighlighter\n      language={language ?? ''}\n      style={style}\n      customStyle={{\n        lineHeight: '1.4em',\n        fontSize: '1.2em',\n        borderRadius: '0.5em',\n        backgroundColor: Theme.CODE_BOX,\n      }}\n    >\n      {value ?? ''}\n    </SyntaxHighlighter>\n  );\n};\n\nconst StyledButtonBox = styled.div`\n  position: absolute;\n  right: 42%;\n  bottom: 2rem;\n  .save {\n  }\n  .submit {\n    background-color: ${() => Theme.SUBMIT_BTN};\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  margin-right: 0.8em;\n`;\n\nconst findCursorPoint = (element: HTMLTextAreaElement): number[] => {\n  const cursorPointStart = element?.selectionStart;\n  const cursorPointEnd = element?.selectionEnd;\n  const cursorPosition = [cursorPointStart, cursorPointEnd];\n\n  return cursorPosition;\n};\n\nfunction PostBox(): ReactElement {\n  const [input, setInput] = useState('');\n  const isEditText = useRef([false, [0, 0]]);\n  const [cursorPosition, setCursorPosition] = useState([0, 0]);\n  const [imageUrl, setImageUrl] = useState<string>('');\n  const { changeMode } = useDependencyTheme();\n  const inputAreaElem = useRef<HTMLTextAreaElement>(null);\n\n  const propsAboutTextComponent = { input, setInput, setCursorPosition, findCursorPoint, inputAreaElem };\n\n  const editTextByButton = (event: React.MouseEvent<SVGElement, MouseEvent>) => {\n    const cursorPositionToGo = editInputText({ event, input, setInput, cursorPosition });\n    isEditText.current = [true, cursorPositionToGo];\n    inputAreaElem.current?.focus();\n  };\n\n  useEffect(() => {\n    if (isEditText.current[0]) {\n      const cursorToGo = isEditText.current[1];\n      const [startPosition, endPosition] = cursorToGo as number[];\n\n      inputAreaElem.current?.focus();\n      inputAreaElem.current?.setSelectionRange(startPosition, endPosition);\n      isEditText.current = [false, [0, 0]];\n      setCursorPosition(findCursorPoint(inputAreaElem.current as HTMLTextAreaElement));\n    }\n  }, [input]);\n\n  useEffect(() => {\n    if (imageUrl === null || imageUrl === undefined || imageUrl.length === 0) return;\n\n    const newInput = `${input.slice(0, cursorPosition[0])}![](${imageUrl})${input.slice(cursorPosition[0])}`;\n    setInput(newInput);\n    setImageUrl('');\n  }, [imageUrl]);\n\n  return (\n    <StyledPostBox>\n      <div className=\"editArea\">\n        <PostTitleInput />\n        <hr />\n        <TagAddingBox />\n        <EditButtonBox onClick={(event) => editTextByButton(event)} setImageUrl={setImageUrl} />\n        <WritingArea className=\"textInput\" propsAboutTextComponent={propsAboutTextComponent} />\n      </div>\n      <MarkdownPreview />\n      <StyledThemeButton onClick={changeMode} />\n      <StyledButtonBox>\n        <StyledButton className=\"save\">임시저장</StyledButton>\n        <StyledButton className=\"submit\">등록</StyledButton>\n      </StyledButtonBox>\n    </StyledPostBox>\n  );\n}\n\nexport default PostBox;\n"]},"metadata":{},"sourceType":"module"}