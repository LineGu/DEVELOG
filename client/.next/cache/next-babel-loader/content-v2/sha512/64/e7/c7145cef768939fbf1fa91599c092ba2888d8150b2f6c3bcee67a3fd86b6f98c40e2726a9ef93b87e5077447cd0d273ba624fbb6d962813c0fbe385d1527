{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/EditorWritingArea/EditorWritingArea.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport uploadImg from '@utils/uploadImg';\nconst StyledMarkdownArea = styled.textarea.withConfig({\n  displayName: \"EditorWritingArea__StyledMarkdownArea\",\n  componentId: \"kkpzo3-0\"\n})([\"width:93%;height:64vh;border:none;outline:none;resize:none;padding-left:3vw;background-color:\", \";color:\", \";font-size:1.5rem;pointer-events:auto;@media (max-width:\", \"){width:100%;border:none;}&::selection{background-color:#dfdfdf;}@media (max-width:\", \"){width:91%;height:65vh;padding:1.2em 0 0 1.2em;font-size:1rem;}\"], () => Theme.HEADER_BACK, () => Theme.INTRO, () => Theme.TABLET, () => Theme.MOBILE);\n\nfunction EditorWritingArea({\n  writingAreaProps: props,\n  className\n}) {\n  const {\n    input,\n    setInput,\n    inputAreaElem,\n    setImageUrl,\n    setUploadState\n  } = props;\n  return /*#__PURE__*/_jsxDEV(StyledMarkdownArea, {\n    className: className,\n    spellCheck: \"false\",\n    placeholder: \"\\uC774\\uC57C\\uAE30\\uB97C \\uC801\\uC5B4\\uBCF4\\uC138\\uC694..\",\n    value: input,\n    onChange: event => {\n      setInput(event.target.value);\n    },\n    onClick: props.updateCusorByClick,\n    onKeyUp: props.updateCusorByKeyboard,\n    ref: inputAreaElem,\n    onDrop: event => {\n      event.stopPropagation();\n      event.preventDefault();\n      const {\n        files\n      } = event.dataTransfer;\n      const isImage = files[0].type.includes('image');\n\n      if (!isImage) {\n        alert('이미지가 아닙니다.');\n        return;\n      }\n\n      const imgToUpload = files[0];\n      uploadImg(imgToUpload, setUploadState, setImageUrl);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\nexport default EditorWritingArea;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/EditorWritingArea/EditorWritingArea.tsx"],"names":["React","styled","Theme","uploadImg","StyledMarkdownArea","textarea","HEADER_BACK","INTRO","TABLET","MOBILE","EditorWritingArea","writingAreaProps","props","className","input","setInput","inputAreaElem","setImageUrl","setUploadState","event","target","value","updateCusorByClick","updateCusorByKeyboard","stopPropagation","preventDefault","files","dataTransfer","isImage","type","includes","alert","imgToUpload"],"mappings":";;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AAGA,MAAMC,kBAAkB,GAAGH,MAAM,CAACI,QAAV;AAAA;AAAA;AAAA,wUAOF,MAAMH,KAAK,CAACI,WAPV,EAQb,MAAMJ,KAAK,CAACK,KARC,EAWD,MAAML,KAAK,CAACM,MAXX,EAmBD,MAAMN,KAAK,CAACO,MAnBX,CAAxB;;AA2BA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA,gBAAgB,EAAEC,KAApB;AAA2BC,EAAAA;AAA3B,CAA3B,EAA+F;AAC7F,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,aAAnB;AAAkCC,IAAAA,WAAlC;AAA+CC,IAAAA;AAA/C,MAAkEN,KAAxE;AAEA,sBACE,QAAC,kBAAD;AACE,IAAA,SAAS,EAAEC,SADb;AAEE,IAAA,UAAU,EAAC,OAFb;AAGE,IAAA,WAAW,EAAC,2DAHd;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,QAAQ,EAAGK,KAAD,IAAW;AACnBJ,MAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,KAPH;AAQE,IAAA,OAAO,EAAET,KAAK,CAACU,kBARjB;AASE,IAAA,OAAO,EAAEV,KAAK,CAACW,qBATjB;AAUE,IAAA,GAAG,EAAEP,aAVP;AAWE,IAAA,MAAM,EAAGG,KAAD,IAAW;AACjBA,MAAAA,KAAK,CAACK,eAAN;AACAL,MAAAA,KAAK,CAACM,cAAN;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAYP,KAAK,CAACQ,YAAxB;AACA,YAAMC,OAAO,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASG,IAAT,CAAcC,QAAd,CAAuB,OAAvB,CAAhB;;AACA,UAAI,CAACF,OAAL,EAAc;AACZG,QAAAA,KAAK,CAAC,YAAD,CAAL;AACA;AACD;;AAED,YAAMC,WAAW,GAAGN,KAAK,CAAC,CAAD,CAAzB;AACAvB,MAAAA,SAAS,CAAC6B,WAAD,EAAcd,cAAd,EAA8BD,WAA9B,CAAT;AACD;AAvBH;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;AAED,eAAeP,iBAAf","sourcesContent":["import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport { IEditorProps } from '@interfaces';\nimport uploadImg from '@utils/uploadImg';\nimport TextInput from '@atoms/TextInput';\n\nconst StyledMarkdownArea = styled.textarea`\n  width: 93%;\n  height: 64vh;\n  border: none;\n  outline: none;\n  resize: none;\n  padding-left: 3vw;\n  background-color: ${() => Theme.HEADER_BACK};\n  color: ${() => Theme.INTRO};\n  font-size: 1.5rem;\n  pointer-events: auto;\n  @media (max-width: ${() => Theme.TABLET}) {\n    width: 100%;\n    border: none;\n  }\n\n  &::selection {\n    background-color: #dfdfdf;\n  }\n  @media (max-width: ${() => Theme.MOBILE}) {\n    width: 91%;\n    height: 65vh;\n    padding: 1.2em 0 0 1.2em;\n    font-size: 1rem;\n  }\n`;\n\nfunction EditorWritingArea({ writingAreaProps: props, className }: IEditorProps): ReactElement {\n  const { input, setInput, inputAreaElem, setImageUrl, setUploadState } = props;\n\n  return (\n    <StyledMarkdownArea\n      className={className}\n      spellCheck=\"false\"\n      placeholder=\"이야기를 적어보세요..\"\n      value={input}\n      onChange={(event) => {\n        setInput(event.target.value);\n      }}\n      onClick={props.updateCusorByClick}\n      onKeyUp={props.updateCusorByKeyboard}\n      ref={inputAreaElem}\n      onDrop={(event) => {\n        event.stopPropagation();\n        event.preventDefault();\n        const { files } = event.dataTransfer;\n        const isImage = files[0].type.includes('image');\n        if (!isImage) {\n          alert('이미지가 아닙니다.');\n          return;\n        }\n\n        const imgToUpload = files[0];\n        uploadImg(imgToUpload, setUploadState, setImageUrl);\n      }}\n    />\n  );\n}\n\nexport default EditorWritingArea;\n"]},"metadata":{},"sourceType":"module"}