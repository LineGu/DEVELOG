{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/EditorWritingArea/EditorWritingArea.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport uploadImg from '@utils/uploadImg';\nimport TextInput from '@atoms/TextInput';\nconst StyledMarkdownArea = styled(TextInput).withConfig({\n  displayName: \"EditorWritingArea__StyledMarkdownArea\",\n  componentId: \"kkpzo3-0\"\n})([\"width:93%;height:64vh;padding-left:3vw;background-color:\", \";color:\", \";font-size:1.5rem;@media (max-width:\", \"){width:100%;border:none;}&::selection{background-color:\", \";}@media (max-width:\", \"){width:91%;height:65vh;padding:1.2em 0 0 1.2em;font-size:1rem;}\"], () => Theme.HEADER_BACK, () => Theme.INTRO, () => Theme.TABLET, () => Theme.TEXT_SELECT, () => Theme.MOBILE);\n\nfunction EditorWritingArea({\n  writingAreaProps: props,\n  className\n}) {\n  const {\n    input,\n    setInput,\n    inputAreaElem,\n    setImageUrl,\n    setUploadState\n  } = props;\n\n  const uploadImgByDrag = event => {\n    event.stopPropagation();\n    event.preventDefault();\n    const {\n      files\n    } = event.dataTransfer;\n    const isImage = files[0].type.includes('image');\n\n    if (!isImage) {\n      alert('이미지가 아닙니다.');\n      return;\n    }\n\n    const imgToUpload = files[0];\n    uploadImg(imgToUpload, setUploadState, setImageUrl);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledMarkdownArea, {\n    className: className,\n    placeholder: \"\\uC774\\uC57C\\uAE30\\uB97C \\uC801\\uC5B4\\uBCF4\\uC138\\uC694..\",\n    state: input,\n    setState: setInput,\n    onClick: props.updateCusorByClick,\n    onKeyUp: props.updateCusorByKeyboard,\n    refElem: inputAreaElem,\n    onDrop: uploadImgByDrag\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\nexport default EditorWritingArea;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/EditorWritingArea/EditorWritingArea.tsx"],"names":["React","styled","Theme","uploadImg","TextInput","StyledMarkdownArea","HEADER_BACK","INTRO","TABLET","TEXT_SELECT","MOBILE","EditorWritingArea","writingAreaProps","props","className","input","setInput","inputAreaElem","setImageUrl","setUploadState","uploadImgByDrag","event","stopPropagation","preventDefault","files","dataTransfer","isImage","type","includes","alert","imgToUpload","updateCusorByClick","updateCusorByKeyboard"],"mappings":";;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAGA,MAAMC,kBAAkB,GAAGJ,MAAM,CAACG,SAAD,CAAT;AAAA;AAAA;AAAA,4QAIF,MAAMF,KAAK,CAACI,WAJV,EAKb,MAAMJ,KAAK,CAACK,KALC,EAOD,MAAML,KAAK,CAACM,MAPX,EAaA,MAAMN,KAAK,CAACO,WAbZ,EAeD,MAAMP,KAAK,CAACQ,MAfX,CAAxB;;AAuBA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA,gBAAgB,EAAEC,KAApB;AAA2BC,EAAAA;AAA3B,CAA3B,EAA+F;AAC7F,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,aAAnB;AAAkCC,IAAAA,WAAlC;AAA+CC,IAAAA;AAA/C,MAAkEN,KAAxE;;AAEA,QAAMO,eAAiC,GAAIC,KAAD,IAAW;AACnDA,IAAAA,KAAK,CAACC,eAAN;AACAD,IAAAA,KAAK,CAACE,cAAN;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAYH,KAAK,CAACI,YAAxB;AACA,UAAMC,OAAO,GAAGF,KAAK,CAAC,CAAD,CAAL,CAASG,IAAT,CAAcC,QAAd,CAAuB,OAAvB,CAAhB;;AACA,QAAI,CAACF,OAAL,EAAc;AACZG,MAAAA,KAAK,CAAC,YAAD,CAAL;AACA;AACD;;AAED,UAAMC,WAAW,GAAGN,KAAK,CAAC,CAAD,CAAzB;AACArB,IAAAA,SAAS,CAAC2B,WAAD,EAAcX,cAAd,EAA8BD,WAA9B,CAAT;AACD,GAZD;;AAcA,sBACE,QAAC,kBAAD;AACE,IAAA,SAAS,EAAEJ,SADb;AAEE,IAAA,WAAW,EAAC,2DAFd;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAKE,IAAA,OAAO,EAAEH,KAAK,CAACkB,kBALjB;AAME,IAAA,OAAO,EAAElB,KAAK,CAACmB,qBANjB;AAOE,IAAA,OAAO,EAAEf,aAPX;AAQE,IAAA,MAAM,EAAEG;AARV;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;AAED,eAAeT,iBAAf","sourcesContent":["import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport { IEditorProps } from '@interfaces';\nimport uploadImg from '@utils/uploadImg';\nimport TextInput from '@atoms/TextInput';\nimport { IOnDragEventFunc } from '@eventInterfaces';\n\nconst StyledMarkdownArea = styled(TextInput)`\n  width: 93%;\n  height: 64vh;\n  padding-left: 3vw;\n  background-color: ${() => Theme.HEADER_BACK};\n  color: ${() => Theme.INTRO};\n  font-size: 1.5rem;\n  @media (max-width: ${() => Theme.TABLET}) {\n    width: 100%;\n    border: none;\n  }\n\n  &::selection {\n    background-color: ${() => Theme.TEXT_SELECT};\n  }\n  @media (max-width: ${() => Theme.MOBILE}) {\n    width: 91%;\n    height: 65vh;\n    padding: 1.2em 0 0 1.2em;\n    font-size: 1rem;\n  }\n`;\n\nfunction EditorWritingArea({ writingAreaProps: props, className }: IEditorProps): ReactElement {\n  const { input, setInput, inputAreaElem, setImageUrl, setUploadState } = props;\n\n  const uploadImgByDrag: IOnDragEventFunc = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    const { files } = event.dataTransfer;\n    const isImage = files[0].type.includes('image');\n    if (!isImage) {\n      alert('이미지가 아닙니다.');\n      return;\n    }\n\n    const imgToUpload = files[0];\n    uploadImg(imgToUpload, setUploadState, setImageUrl);\n  };\n\n  return (\n    <StyledMarkdownArea\n      className={className}\n      placeholder=\"이야기를 적어보세요..\"\n      state={input}\n      setState={setInput}\n      onClick={props.updateCusorByClick}\n      onKeyUp={props.updateCusorByKeyboard}\n      refElem={inputAreaElem}\n      onDrop={uploadImgByDrag}\n    />\n  );\n}\n\nexport default EditorWritingArea;\n"]},"metadata":{},"sourceType":"module"}