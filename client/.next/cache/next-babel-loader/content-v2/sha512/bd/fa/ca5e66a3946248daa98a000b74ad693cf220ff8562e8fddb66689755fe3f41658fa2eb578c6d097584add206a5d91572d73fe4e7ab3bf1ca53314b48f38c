{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/atoms/TableModal/TableModal.tsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nconst StyledModal = styled.div.withConfig({\n  displayName: \"TableModal__StyledModal\",\n  componentId: \"sc-17zwdtm-0\"\n})([\"display:flex;position:absolute;margin:0;padding:0;& > p{margin:0;padding:0;}background-color:\", \";\"], () => Theme.TAG_PLACEHOLDER);\nconst StyledBlock = styled.div.withConfig({\n  displayName: \"TableModal__StyledBlock\",\n  componentId: \"sc-17zwdtm-1\"\n})([\"width:10px;height:10px;border:1px solid black;margin:0;padding:0;\"]);\n\nfunction TableModal({\n  className\n}) {\n  const {\n    0: blockCount,\n    1: setBlockCount\n  } = useState(5);\n  const {\n    0: check,\n    1: setCheck\n  } = useState([-1, -1]);\n  const blockIds = new Array(blockCount).fill(0);\n  return /*#__PURE__*/_jsxDEV(StyledModal, {\n    className: className,\n    children: blockIds.map((_, index) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blockIds.map((__, subIndex) => {\n          if (check[0] >= subIndex && check[1] >= index) {\n            return /*#__PURE__*/_jsxDEV(StyledBlock, {\n              id: `${subIndex},${index}`,\n              onMouseUp: event => {\n                const newCheckStr = event.currentTarget.id.split(',');\n                const newCheck = [parseInt(newCheckStr[0], 10), parseInt(newCheckStr[1], 10)];\n                setCheck(newCheck);\n              }\n            }, index * 10 + subIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(StyledBlock, {\n            id: `${subIndex},${index}`,\n            onMouseUp: event => {\n              console.log(event);\n              const newCheckStr = event.currentTarget.id.split(',');\n              const newCheck = [parseInt(newCheckStr[0], 10), parseInt(newCheckStr[1], 10)];\n              setCheck(newCheck);\n            }\n          }, index * 10 + subIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this);\n        })\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\nexport default TableModal;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/atoms/TableModal/TableModal.tsx"],"names":["React","useState","styled","Theme","StyledModal","div","TAG_PLACEHOLDER","StyledBlock","TableModal","className","blockCount","setBlockCount","check","setCheck","blockIds","Array","fill","map","_","index","__","subIndex","event","newCheckStr","currentTarget","id","split","newCheck","parseInt","console","log"],"mappings":";;AACA,OAAOA,KAAP,IAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAIA,MAAMC,WAAW,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,2GASK,MAAMF,KAAK,CAACG,eATjB,CAAjB;AAYA,MAAMC,WAAW,GAAGL,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,yEAAjB;;AAQA,SAASG,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAkE;AAChE,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BV,QAAQ,CAAS,CAAT,CAA5C;AACA,QAAM;AAAA,OAACW,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAW,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAX,CAAlC;AACA,QAAMa,QAAQ,GAAG,IAAIC,KAAJ,CAAUL,UAAV,EAAsBM,IAAtB,CAA2B,CAA3B,CAAjB;AACA,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAEP,SAAxB;AAAA,cACGK,QAAQ,CAACG,GAAT,CAAa,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC1B,0BACE;AAAA,kBACGL,QAAQ,CAACG,GAAT,CAAa,CAACG,EAAD,EAAKC,QAAL,KAAkB;AAC9B,cAAIT,KAAK,CAAC,CAAD,CAAL,IAAYS,QAAZ,IAAwBT,KAAK,CAAC,CAAD,CAAL,IAAYO,KAAxC,EAA+C;AAC7C,gCACE,QAAC,WAAD;AAEE,cAAA,EAAE,EAAG,GAAEE,QAAS,IAAGF,KAAM,EAF3B;AAGE,cAAA,SAAS,EAAGG,KAAD,IAAW;AACpB,sBAAMC,WAAqB,GAAGD,KAAK,CAACE,aAAN,CAAoBC,EAApB,CAAuBC,KAAvB,CAA6B,GAA7B,CAA9B;AACA,sBAAMC,QAAQ,GAAG,CAACC,QAAQ,CAACL,WAAW,CAAC,CAAD,CAAZ,EAAiB,EAAjB,CAAT,EAA+BK,QAAQ,CAACL,WAAW,CAAC,CAAD,CAAZ,EAAiB,EAAjB,CAAvC,CAAjB;AACAV,gBAAAA,QAAQ,CAACc,QAAD,CAAR;AACD;AAPH,eACOR,KAAK,GAAG,EAAR,GAAaE,QADpB;AAAA;AAAA;AAAA;AAAA,oBADF;AAWD;;AACD,8BACE,QAAC,WAAD;AAEE,YAAA,EAAE,EAAG,GAAEA,QAAS,IAAGF,KAAM,EAF3B;AAGE,YAAA,SAAS,EAAGG,KAAD,IAAW;AACpBO,cAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,oBAAMC,WAAqB,GAAGD,KAAK,CAACE,aAAN,CAAoBC,EAApB,CAAuBC,KAAvB,CAA6B,GAA7B,CAA9B;AACA,oBAAMC,QAAQ,GAAG,CAACC,QAAQ,CAACL,WAAW,CAAC,CAAD,CAAZ,EAAiB,EAAjB,CAAT,EAA+BK,QAAQ,CAACL,WAAW,CAAC,CAAD,CAAZ,EAAiB,EAAjB,CAAvC,CAAjB;AACAV,cAAAA,QAAQ,CAACc,QAAD,CAAR;AACD;AARH,aACOR,KAAK,GAAG,EAAR,GAAaE,QADpB;AAAA;AAAA;AAAA;AAAA,kBADF;AAYD,SA1BA;AADH,SAAQF,KAAR;AAAA;AAAA;AAAA;AAAA,cADF;AA+BD,KAhCA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;AAED,eAAeX,UAAf","sourcesContent":["import { IComponentProps } from '@interfaces';\nimport React, { ReactElement, useState } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport { FiSquare } from 'react-icons/Fi';\nimport { BsSquareFill } from 'react-icons/bs';\n\nconst StyledModal = styled.div`\n  display: flex;\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  & > p {\n    margin: 0;\n    padding: 0;\n  }\n  background-color: ${() => Theme.TAG_PLACEHOLDER};\n`;\n\nconst StyledBlock = styled.div`\n  width: 10px;\n  height: 10px;\n  border: 1px solid black;\n  margin: 0;\n  padding: 0;\n`;\n\nfunction TableModal({ className }: IComponentProps): ReactElement {\n  const [blockCount, setBlockCount] = useState<number>(5);\n  const [check, setCheck] = useState<number[]>([-1, -1]);\n  const blockIds = new Array(blockCount).fill(0);\n  return (\n    <StyledModal className={className}>\n      {blockIds.map((_, index) => {\n        return (\n          <p key={index}>\n            {blockIds.map((__, subIndex) => {\n              if (check[0] >= subIndex && check[1] >= index) {\n                return (\n                  <StyledBlock\n                    key={index * 10 + subIndex}\n                    id={`${subIndex},${index}`}\n                    onMouseUp={(event) => {\n                      const newCheckStr: string[] = event.currentTarget.id.split(',');\n                      const newCheck = [parseInt(newCheckStr[0], 10), parseInt(newCheckStr[1], 10)];\n                      setCheck(newCheck);\n                    }}\n                  />\n                );\n              }\n              return (\n                <StyledBlock\n                  key={index * 10 + subIndex}\n                  id={`${subIndex},${index}`}\n                  onMouseUp={(event) => {\n                    console.log(event);\n                    const newCheckStr: string[] = event.currentTarget.id.split(',');\n                    const newCheck = [parseInt(newCheckStr[0], 10), parseInt(newCheckStr[1], 10)];\n                    setCheck(newCheck);\n                  }}\n                />\n              );\n            })}\n          </p>\n        );\n      })}\n    </StyledModal>\n  );\n}\n\nexport default TableModal;\n"]},"metadata":{},"sourceType":"module"}