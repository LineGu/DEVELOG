{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Theme from '@theme/index';\n\nvar useTextLoop = function useTextLoop(introList) {\n  _s();\n\n  var _useState = useState('100%'),\n      margin = _useState[0],\n      setMargin = _useState[1];\n\n  var _useState2 = useState(Theme.POINT),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var _useState3 = useState('100%'),\n      opacity = _useState3[0],\n      setOpacity = _useState3[1];\n\n  var _useState4 = useState(introList[0]),\n      intro = _useState4[0],\n      setIntro = _useState4[1];\n\n  useEffect(function () {\n    var mounted = true;\n    var i = 1;\n    setMargin('0%');\n    var timerToSetTiming = setTimeout(function () {\n      if (!mounted) {\n        clearTimeout(timerToSetTiming);\n        return;\n      }\n\n      setMargin('100%');\n      setOpacity('0%');\n      var timerToHide = setInterval(function () {\n        if (!mounted) {\n          clearInterval(timerToHide);\n          return;\n        }\n\n        setMargin('100%');\n        setOpacity('0%');\n      }, 4000);\n    }, 3000);\n    var timerToShow = setInterval(function () {\n      if (!mounted) {\n        clearInterval(timerToShow);\n        return;\n      }\n\n      setMargin('0%');\n      setOpacity('100%');\n      setIntro(introList[i]);\n      i += 1;\n      i = i > 3 ? 0 : i;\n    }, 4000);\n    return function cleanUp() {\n      mounted = false;\n    };\n  }, []);\n  return {\n    margin: margin,\n    color: color,\n    opacity: opacity,\n    intro: intro\n  };\n};\n\n_s(useTextLoop, \"THfbKuiN428IeI2o7mcDlToJaTo=\");\n\nexport default useTextLoop;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/textLoop.tsx"],"names":["useState","useEffect","Theme","useTextLoop","introList","margin","setMargin","POINT","color","setColor","opacity","setOpacity","intro","setIntro","mounted","i","timerToSetTiming","setTimeout","clearTimeout","timerToHide","setInterval","clearInterval","timerToShow","cleanUp"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAqC;AAAA;;AAAA,kBAC3BJ,QAAQ,CAAS,MAAT,CADmB;AAAA,MAChDK,MADgD;AAAA,MACxCC,SADwC;;AAAA,mBAE7BN,QAAQ,CAASE,KAAK,CAACK,KAAf,CAFqB;AAAA,MAEhDC,KAFgD;AAAA,MAEzCC,QAFyC;;AAAA,mBAGzBT,QAAQ,CAAS,MAAT,CAHiB;AAAA,MAGhDU,OAHgD;AAAA,MAGvCC,UAHuC;;AAAA,mBAI7BX,QAAQ,CAASI,SAAS,CAAC,CAAD,CAAlB,CAJqB;AAAA,MAIhDQ,KAJgD;AAAA,MAIzCC,QAJyC;;AAKvDZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIa,OAAO,GAAG,IAAd;AACA,QAAIC,CAAC,GAAG,CAAR;AAEAT,IAAAA,SAAS,CAAC,IAAD,CAAT;AACA,QAAMU,gBAAgB,GAAGC,UAAU,CAAC,YAAM;AACxC,UAAI,CAACH,OAAL,EAAc;AACZI,QAAAA,YAAY,CAACF,gBAAD,CAAZ;AACA;AACD;;AACDV,MAAAA,SAAS,CAAC,MAAD,CAAT;AACAK,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMQ,WAAW,GAAGC,WAAW,CAAC,YAAM;AACpC,YAAI,CAACN,OAAL,EAAc;AACZO,UAAAA,aAAa,CAACF,WAAD,CAAb;AACA;AACD;;AACDb,QAAAA,SAAS,CAAC,MAAD,CAAT;AACAK,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD,OAP8B,EAO5B,IAP4B,CAA/B;AAQD,KAfkC,EAehC,IAfgC,CAAnC;AAiBA,QAAMW,WAAW,GAAGF,WAAW,CAAC,YAAM;AACpC,UAAI,CAACN,OAAL,EAAc;AACZO,QAAAA,aAAa,CAACC,WAAD,CAAb;AACA;AACD;;AACDhB,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAK,MAAAA,UAAU,CAAC,MAAD,CAAV;AACAE,MAAAA,QAAQ,CAACT,SAAS,CAACW,CAAD,CAAV,CAAR;AACAA,MAAAA,CAAC,IAAI,CAAL;AACAA,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAYA,CAAhB;AACD,KAV8B,EAU5B,IAV4B,CAA/B;AAYA,WAAO,SAASQ,OAAT,GAAmB;AACxBT,MAAAA,OAAO,GAAG,KAAV;AACD,KAFD;AAGD,GArCQ,EAqCN,EArCM,CAAT;AAuCA,SAAO;AAAET,IAAAA,MAAM,EAANA,MAAF;AAAUG,IAAAA,KAAK,EAALA,KAAV;AAAiBE,IAAAA,OAAO,EAAPA,OAAjB;AAA0BE,IAAAA,KAAK,EAALA;AAA1B,GAAP;AACD,CA7CD;;GAAMT,W;;AA+CN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport Theme from '@theme/index';\n\ntype ReturnType = {\n  margin: string;\n  opacity: string;\n  intro: string;\n};\n\nconst useTextLoop = (introList: string[]): ReturnType => {\n  const [margin, setMargin] = useState<string>('100%');\n  const [color, setColor] = useState<string>(Theme.POINT);\n  const [opacity, setOpacity] = useState<string>('100%');\n  const [intro, setIntro] = useState<string>(introList[0]);\n  useEffect(() => {\n    let mounted = true;\n    let i = 1;\n\n    setMargin('0%');\n    const timerToSetTiming = setTimeout(() => {\n      if (!mounted) {\n        clearTimeout(timerToSetTiming);\n        return;\n      }\n      setMargin('100%');\n      setOpacity('0%');\n      const timerToHide = setInterval(() => {\n        if (!mounted) {\n          clearInterval(timerToHide);\n          return;\n        }\n        setMargin('100%');\n        setOpacity('0%');\n      }, 4000);\n    }, 3000);\n\n    const timerToShow = setInterval(() => {\n      if (!mounted) {\n        clearInterval(timerToShow);\n        return;\n      }\n      setMargin('0%');\n      setOpacity('100%');\n      setIntro(introList[i]);\n      i += 1;\n      i = i > 3 ? 0 : i;\n    }, 4000);\n\n    return function cleanUp() {\n      mounted = false;\n    };\n  }, []);\n\n  return { margin, color, opacity, intro };\n};\n\nexport default useTextLoop;\n"]},"metadata":{},"sourceType":"module"}