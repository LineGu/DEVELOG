{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport Theme from '@theme/index';\nimport animateIntroduceText from '@utils/animateText';\nimport useDependencyTheme from './useDependencyTheme';\n\nconst useTextLoop = introduceList => {\n  useDependencyTheme();\n  const {\n    0: margin,\n    1: setMargin\n  } = useState('100%');\n  const {\n    0: color,\n    1: setColor\n  } = useState(Theme.POINT);\n  const {\n    0: opacity,\n    1: setOpacity\n  } = useState('100%');\n  const {\n    0: introduce,\n    1: setIntro\n  } = useState(introduceList[0]);\n  useEffect(() => {\n    let isMounted = true;\n    const animateFuncProps = {\n      introduceList,\n      isMounted,\n      color,\n      setMargin,\n      setColor,\n      setOpacity,\n      setIntro\n    };\n    animateIntroduceText(animateFuncProps);\n\n    function cleanUp() {\n      isMounted = false;\n    }\n\n    return cleanUp;\n  }, []);\n  return {\n    margin,\n    color,\n    opacity,\n    introduce\n  };\n};\n\nexport default useTextLoop;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/hooks/useTextLoop.tsx"],"names":["useState","useEffect","Theme","animateIntroduceText","useDependencyTheme","useTextLoop","introduceList","margin","setMargin","color","setColor","POINT","opacity","setOpacity","introduce","setIntro","isMounted","animateFuncProps","cleanUp"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,OAAOC,oBAAP,MAAiC,oBAAjC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAMA,MAAMC,WAAW,GAAIC,aAAD,IAA8C;AAChEF,EAAAA,kBAAkB;AAClB,QAAM;AAAA,OAACG,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAS,MAAT,CAApC;AACA,QAAM;AAAA,OAACS,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAASE,KAAK,CAACS,KAAf,CAAlC;AACA,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAS,MAAT,CAAtC;AACA,QAAM;AAAA,OAACc,SAAD;AAAA,OAAYC;AAAZ,MAAwBf,QAAQ,CAASM,aAAa,CAAC,CAAD,CAAtB,CAAtC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,SAAS,GAAG,IAAhB;AACA,UAAMC,gBAAgB,GAAG;AAAEX,MAAAA,aAAF;AAAiBU,MAAAA,SAAjB;AAA4BP,MAAAA,KAA5B;AAAmCD,MAAAA,SAAnC;AAA8CE,MAAAA,QAA9C;AAAwDG,MAAAA,UAAxD;AAAoEE,MAAAA;AAApE,KAAzB;AACAZ,IAAAA,oBAAoB,CAACc,gBAAD,CAApB;;AACA,aAASC,OAAT,GAAmB;AACjBF,MAAAA,SAAS,GAAG,KAAZ;AACD;;AACD,WAAOE,OAAP;AACD,GARQ,EAQN,EARM,CAAT;AAUA,SAAO;AAAEX,IAAAA,MAAF;AAAUE,IAAAA,KAAV;AAAiBG,IAAAA,OAAjB;AAA0BE,IAAAA;AAA1B,GAAP;AACD,CAlBD;;AAoBA,eAAeT,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport Theme from '@theme/index';\nimport { IDynamicStyledProps, IColorProps } from '@interfaces';\nimport animateIntroduceText from '@utils/animateText';\nimport useDependencyTheme from './useDependencyTheme';\n\ninterface ITextLoopReturn extends IDynamicStyledProps, IColorProps {\n  introduce: string;\n}\n\nconst useTextLoop = (introduceList: string[]): ITextLoopReturn => {\n  useDependencyTheme();\n  const [margin, setMargin] = useState<string>('100%');\n  const [color, setColor] = useState<string>(Theme.POINT);\n  const [opacity, setOpacity] = useState<string>('100%');\n  const [introduce, setIntro] = useState<string>(introduceList[0]);\n\n  useEffect(() => {\n    let isMounted = true;\n    const animateFuncProps = { introduceList, isMounted, color, setMargin, setColor, setOpacity, setIntro };\n    animateIntroduceText(animateFuncProps);\n    function cleanUp() {\n      isMounted = false;\n    }\n    return cleanUp;\n  }, []);\n\n  return { margin, color, opacity, introduce };\n};\n\nexport default useTextLoop;\n"]},"metadata":{},"sourceType":"module"}