{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TableModal/Block.tsx\";\nimport React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nconst BoxUnit = styled.div.withConfig({\n  displayName: \"Block__BoxUnit\",\n  componentId: \"sc-1h0y9qe-0\"\n})([\"width:20px;height:20px;margin:2px;padding:0;border:1px solid \", \";background-color:\", \";\"], ({\n  color\n}) => color === Theme.HEADER_BACK ? Theme.OUT_LINE : Theme.HEADER_BACK, ({\n  color\n}) => color);\nconst BlockBox = styled.div.withConfig({\n  displayName: \"Block__BlockBox\",\n  componentId: \"sc-1h0y9qe-1\"\n})([\"display:flex;margin:0;padding:0;\"]);\n\nfunction Block({\n  blockPorps\n}) {\n  const {\n    checkedPoint,\n    setCheckedPoint,\n    resetCheckedPoint\n  } = blockPorps;\n  const rowBlockLength = 10;\n  const columnBlockLength = 8;\n  const rowBlockCount = new Array(rowBlockLength).fill(0);\n  const columnBlockCount = new Array(columnBlockLength).fill(0);\n  const [xPoint, yPoint] = checkedPoint;\n  const addTableByClick = useCallback(event => {\n    const [rowCount, columnCount] = [xPoint + 1, yPoint + 1]; // onClick(event, [rowCount, columnCount]);\n\n    resetCheckedPoint();\n  }, [checkedPoint]);\n  const updateCheckedPoint = useCallback(event => {\n    const [xPointStr, yPointStr] = event.currentTarget.id.split(',');\n    const newCheckedPoint = [parseInt(xPointStr, 10), parseInt(yPointStr, 10)];\n    setCheckedPoint(newCheckedPoint);\n    event.stopPropagation();\n  }, []);\n  const setBoxColor = useCallback((columnNum, rowNum) => {\n    const isCheckedBlock = checkedPoint[0] >= columnNum && checkedPoint[1] >= rowNum;\n    return isCheckedBlock ? Theme.HEADER_BACK : Theme.MODAL_EDIT;\n  }, [checkedPoint]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: columnBlockCount.map((__, rowNum) => /*#__PURE__*/_jsxDEV(BlockBox, {\n      id: \"table\",\n      className: \"block_row_box\",\n      onClick: addTableByClick,\n      onMouseOver: event => event.stopPropagation(),\n      children: rowBlockCount.map((_, colNum) => /*#__PURE__*/_jsxDEV(BoxUnit, {\n        id: `${colNum},${rowNum}`,\n        onMouseOver: updateCheckedPoint,\n        color: setBoxColor(colNum, rowNum)\n      }, colNum, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, rowNum, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\nexport default Block;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TableModal/Block.tsx"],"names":["React","useCallback","styled","Theme","BoxUnit","div","color","HEADER_BACK","OUT_LINE","BlockBox","Block","blockPorps","checkedPoint","setCheckedPoint","resetCheckedPoint","rowBlockLength","columnBlockLength","rowBlockCount","Array","fill","columnBlockCount","xPoint","yPoint","addTableByClick","event","rowCount","columnCount","updateCheckedPoint","xPointStr","yPointStr","currentTarget","id","split","newCheckedPoint","parseInt","stopPropagation","setBoxColor","columnNum","rowNum","isCheckedBlock","MODAL_EDIT","map","__","_","colNum"],"mappings":"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","sourcesContent":["import React, { ReactElement, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport { setStateNumberArr } from '@types';\nimport { IOnHoverDivFunc } from '@eventInterfaces';\n\ninterface IBlockProps {\n  blockPorps: {\n    checkedPoint: number[];\n    setCheckedPoint: setStateNumberArr;\n    resetCheckedPoint: () => void;\n  };\n}\n\nconst BoxUnit = styled.div<{ color: string }>`\n  width: 20px;\n  height: 20px;\n  margin: 2px;\n  padding: 0;\n  border: 1px solid ${({ color }) => (color === Theme.HEADER_BACK ? Theme.OUT_LINE : Theme.HEADER_BACK)};\n  background-color: ${({ color }) => color};\n`;\n\nconst BlockBox = styled.div`\n  display: flex;\n  margin: 0;\n  padding: 0;\n`;\n\nfunction Block({ blockPorps }: IBlockProps): ReactElement {\n  const { checkedPoint, setCheckedPoint, resetCheckedPoint } = blockPorps;\n  const rowBlockLength = 10;\n  const columnBlockLength = 8;\n  const rowBlockCount = new Array(rowBlockLength).fill(0);\n  const columnBlockCount = new Array(columnBlockLength).fill(0);\n  const [xPoint, yPoint] = checkedPoint;\n\n  const addTableByClick = useCallback(\n    (event) => {\n      const [rowCount, columnCount] = [xPoint + 1, yPoint + 1];\n      // onClick(event, [rowCount, columnCount]);\n      resetCheckedPoint();\n    },\n    [checkedPoint],\n  );\n\n  const updateCheckedPoint: IOnHoverDivFunc = useCallback((event) => {\n    const [xPointStr, yPointStr] = event.currentTarget.id.split(',');\n    const newCheckedPoint = [parseInt(xPointStr, 10), parseInt(yPointStr, 10)];\n    setCheckedPoint(newCheckedPoint);\n    event.stopPropagation();\n  }, []);\n\n  const setBoxColor = useCallback(\n    (columnNum, rowNum) => {\n      const isCheckedBlock = checkedPoint[0] >= columnNum && checkedPoint[1] >= rowNum;\n      return isCheckedBlock ? Theme.HEADER_BACK : Theme.MODAL_EDIT;\n    },\n    [checkedPoint],\n  );\n\n  return (\n    <>\n      {columnBlockCount.map((__, rowNum) => (\n        <BlockBox\n          key={rowNum}\n          id=\"table\"\n          className=\"block_row_box\"\n          onClick={addTableByClick}\n          onMouseOver={(event) => event.stopPropagation()}\n        >\n          {rowBlockCount.map((_, colNum) => (\n            <BoxUnit\n              key={colNum}\n              id={`${colNum},${rowNum}`}\n              onMouseOver={updateCheckedPoint}\n              color={setBoxColor(colNum, rowNum)}\n            />\n          ))}\n        </BlockBox>\n      ))}\n    </>\n  );\n}\n\nexport default Block;\n"]},"metadata":{},"sourceType":"module"}