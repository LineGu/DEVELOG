{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Theme from 'src/constants/Theme';\nimport animateIntroduceText from '@utils/animaiton/animateText';\nimport useDependencyTheme from './useDependencyTheme';\n\nvar useTextLoop = function useTextLoop(introduceList) {\n  _s();\n\n  useDependencyTheme();\n\n  var _useState = useState('100%'),\n      margin = _useState[0],\n      setMargin = _useState[1];\n\n  var _useState2 = useState(Theme.POINT),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var _useState3 = useState('100%'),\n      opacity = _useState3[0],\n      setOpacity = _useState3[1];\n\n  var _useState4 = useState(introduceList[0]),\n      introduce = _useState4[0],\n      setIntro = _useState4[1];\n\n  useEffect(function () {\n    var isMounted = true;\n    var propsOfAnimateFunc = {\n      textList: introduceList,\n      isMounted: isMounted,\n      color: color,\n      setMargin: setMargin,\n      setColor: setColor,\n      setOpacity: setOpacity,\n      setIntro: setIntro\n    };\n    animateIntroduceText(propsOfAnimateFunc);\n    return function () {\n      isMounted = false;\n    };\n  }, []);\n  return {\n    margin: margin,\n    color: color,\n    opacity: opacity,\n    introduce: introduce\n  };\n};\n\n_s(useTextLoop, \"2nvp3Bu/8HXfAF14yP+mhGPDnvU=\", false, function () {\n  return [useDependencyTheme];\n});\n\nexport default useTextLoop;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/hooks/useTextLoop.tsx"],"names":["useState","useEffect","Theme","animateIntroduceText","useDependencyTheme","useTextLoop","introduceList","margin","setMargin","POINT","color","setColor","opacity","setOpacity","introduce","setIntro","isMounted","propsOfAnimateFunc","textList"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAOC,oBAAP,MAAiC,8BAAjC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAMA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,aAAD,EAA8C;AAAA;;AAChEF,EAAAA,kBAAkB;;AAD8C,kBAEpCJ,QAAQ,CAAS,MAAT,CAF4B;AAAA,MAEzDO,MAFyD;AAAA,MAEjDC,SAFiD;;AAAA,mBAGtCR,QAAQ,CAASE,KAAK,CAACO,KAAf,CAH8B;AAAA,MAGzDC,KAHyD;AAAA,MAGlDC,QAHkD;;AAAA,mBAIlCX,QAAQ,CAAS,MAAT,CAJ0B;AAAA,MAIzDY,OAJyD;AAAA,MAIhDC,UAJgD;;AAAA,mBAKlCb,QAAQ,CAASM,aAAa,CAAC,CAAD,CAAtB,CAL0B;AAAA,MAKzDQ,SALyD;AAAA,MAK9CC,QAL8C;;AAOhEd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIe,SAAS,GAAG,IAAhB;AACA,QAAMC,kBAAkB,GAAG;AAAEC,MAAAA,QAAQ,EAAEZ,aAAZ;AAA2BU,MAAAA,SAAS,EAATA,SAA3B;AAAsCN,MAAAA,KAAK,EAALA,KAAtC;AAA6CF,MAAAA,SAAS,EAATA,SAA7C;AAAwDG,MAAAA,QAAQ,EAARA,QAAxD;AAAkEE,MAAAA,UAAU,EAAVA,UAAlE;AAA8EE,MAAAA,QAAQ,EAARA;AAA9E,KAA3B;AACAZ,IAAAA,oBAAoB,CAACc,kBAAD,CAApB;AAEA,WAAO,YAAM;AACXD,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AAUA,SAAO;AAAET,IAAAA,MAAM,EAANA,MAAF;AAAUG,IAAAA,KAAK,EAALA,KAAV;AAAiBE,IAAAA,OAAO,EAAPA,OAAjB;AAA0BE,IAAAA,SAAS,EAATA;AAA1B,GAAP;AACD,CAlBD;;GAAMT,W;UACJD,kB;;;AAmBF,eAAeC,WAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport Theme from 'src/constants/Theme';\nimport { IDynamicStyledProps, IColorProps } from '@types';\nimport animateIntroduceText from '@utils/animaiton/animateText';\nimport useDependencyTheme from './useDependencyTheme';\n\ninterface ITextLoopReturn extends IDynamicStyledProps, IColorProps {\n  introduce: string;\n}\n\nconst useTextLoop = (introduceList: string[]): ITextLoopReturn => {\n  useDependencyTheme();\n  const [margin, setMargin] = useState<string>('100%');\n  const [color, setColor] = useState<string>(Theme.POINT);\n  const [opacity, setOpacity] = useState<string>('100%');\n  const [introduce, setIntro] = useState<string>(introduceList[0]);\n\n  useEffect(() => {\n    let isMounted = true;\n    const propsOfAnimateFunc = { textList: introduceList, isMounted, color, setMargin, setColor, setOpacity, setIntro };\n    animateIntroduceText(propsOfAnimateFunc);\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  return { margin, color, opacity, introduce };\n};\n\nexport default useTextLoop;\n"]},"metadata":{},"sourceType":"module"}