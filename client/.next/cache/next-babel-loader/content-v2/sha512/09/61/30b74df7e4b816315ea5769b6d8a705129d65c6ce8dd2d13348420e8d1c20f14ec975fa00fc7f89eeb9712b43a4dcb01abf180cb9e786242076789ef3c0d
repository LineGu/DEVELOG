{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/PostBox/PostBox.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atelierCaveLight, a11yDark } from 'react-syntax-highlighter/dist/cjs/styles/hljs';\nimport gfm from 'remark-gfm';\nimport useDependencyTheme from '@hook/useDependencyTheme';\nimport Theme from '@theme/index';\nimport ThemeButton from '@molecules/ThemeBtn/index';\nvar StyledPostBox = styled.div.withConfig({\n  displayName: \"PostBox__StyledPostBox\",\n  componentId: \"sc-1h6avyu-0\"\n})([\"display:flex;position:relative;.preview{width:50%;height:100vh;font-size:1rem;padding:20px;outline:none;color:\", \";table{border-collapse:collapse;& th{border:1px solid \", \";border-bottom:2px solid \", \";padding:0.8rem 1.4rem;}& td{border:1px solid \", \";border-top:none;padding:0.8rem;}}a{color:\", \";text-decoration:none;}blockquote{margin:0;padding:0.2em;padding-left:3em;line-height:2rem;border-left:0.5em \", \" solid;}hr{width:100%;margin:2rem 0;color:\", \";opacity:60%;}}\"], function () {\n  return Theme.INTRO;\n}, function () {\n  return Theme.BASE;\n}, function () {\n  return Theme.INTRO;\n}, function () {\n  return Theme.BASE;\n}, function () {\n  return Theme.MODE_MARK;\n}, function () {\n  return Theme.POINT;\n}, function () {\n  return Theme.BASE;\n});\n_c = StyledPostBox;\nvar StyledMarkdownArea = styled.textarea.withConfig({\n  displayName: \"PostBox__StyledMarkdownArea\",\n  componentId: \"sc-1h6avyu-1\"\n})([\"width:50%;height:105vh;padding:20px;font-size:2rem;background-color:\", \";color:\", \";border:none;border-right:1px solid \", \";outline:none;resize:none;\"], function () {\n  return Theme.HEADER_BACK;\n}, function () {\n  return Theme.INTRO;\n}, function () {\n  return Theme.POINT;\n});\n_c2 = StyledMarkdownArea;\nvar StyledThemeButton = styled(ThemeButton).withConfig({\n  displayName: \"PostBox__StyledThemeButton\",\n  componentId: \"sc-1h6avyu-2\"\n})([\"bottom:7vh;\"]);\n_c3 = StyledThemeButton;\n\nvar CodeBox = function CodeBox(_ref) {\n  _s();\n\n  var value = _ref.value,\n      language = _ref.language;\n\n  var _useDependencyTheme = useDependencyTheme(),\n      mode = _useDependencyTheme.mode;\n\n  var style = mode === 'LightMode' ? atelierCaveLight : a11yDark;\n  return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n    language: language !== null && language !== void 0 ? language : '',\n    style: style,\n    customStyle: {\n      lineHeight: '1.4em',\n      fontSize: '1.2em',\n      borderRadius: '0.5em',\n      backgroundColor: Theme.CODE_BOX\n    },\n    children: value !== null && value !== void 0 ? value : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CodeBox, \"FKadNyAFPLQLpv6LgYhybTminwE=\", false, function () {\n  return [useDependencyTheme];\n});\n\n_c4 = CodeBox;\n\nfunction PostBox() {\n  _s2();\n\n  var _useState = useState(''),\n      input = _useState[0],\n      setInput = _useState[1];\n\n  var _useDependencyTheme2 = useDependencyTheme(),\n      changeMode = _useDependencyTheme2.changeMode;\n\n  return /*#__PURE__*/_jsxDEV(StyledPostBox, {\n    children: [/*#__PURE__*/_jsxDEV(StyledMarkdownArea, {\n      value: input,\n      onChange: function onChange(event) {\n        return setInput(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      plugins: [[gfm, {\n        tableCellPadding: 'true'\n      }]],\n      source: input,\n      className: \"preview\",\n      renderers: {\n        code: CodeBox\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledThemeButton, {\n      onClick: changeMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(PostBox, \"Ktia3rYN238kejCh7eYTiV6Hhu4=\", false, function () {\n  return [useDependencyTheme];\n});\n\n_c5 = PostBox;\nexport default PostBox;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledPostBox\");\n$RefreshReg$(_c2, \"StyledMarkdownArea\");\n$RefreshReg$(_c3, \"StyledThemeButton\");\n$RefreshReg$(_c4, \"CodeBox\");\n$RefreshReg$(_c5, \"PostBox\");","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/PostBox/PostBox.tsx"],"names":["React","useState","styled","ReactMarkdown","SyntaxHighlighter","atelierCaveLight","a11yDark","gfm","useDependencyTheme","Theme","ThemeButton","StyledPostBox","div","INTRO","BASE","MODE_MARK","POINT","StyledMarkdownArea","textarea","HEADER_BACK","StyledThemeButton","CodeBox","value","language","mode","style","lineHeight","fontSize","borderRadius","backgroundColor","CODE_BOX","PostBox","input","setInput","changeMode","event","target","tableCellPadding","code"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState } from 'react';\nimport styled from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atelierCaveLight, a11yDark } from 'react-syntax-highlighter/dist/cjs/styles/hljs';\nimport gfm from 'remark-gfm';\nimport useDependencyTheme from '@hook/useDependencyTheme';\nimport Theme from '@theme/index';\nimport ThemeButton from '@molecules/ThemeBtn/index';\n\nconst StyledPostBox = styled.div`\n  display: flex;\n  position: relative;\n  .preview {\n    width: 50%;\n    height: 100vh;\n    font-size: 1rem;\n    padding: 20px;\n    outline: none;\n    color: ${() => Theme.INTRO};\n    table {\n      border-collapse: collapse;\n\n      & th {\n        border: 1px solid ${() => Theme.BASE};\n        border-bottom: 2px solid ${() => Theme.INTRO};\n        padding: 0.8rem 1.4rem;\n      }\n      & td {\n        border: 1px solid ${() => Theme.BASE};\n        border-top: none;\n        padding: 0.8rem;\n      }\n    }\n    a {\n      color: ${() => Theme.MODE_MARK};\n      text-decoration: none;\n    }\n    blockquote {\n      margin: 0;\n      padding: 0.2em;\n      padding-left: 3em;\n      line-height: 2rem;\n      border-left: 0.5em ${() => Theme.POINT} solid;\n    }\n    hr {\n      width: 100%;\n      margin: 2rem 0;\n      color: ${() => Theme.BASE};\n      opacity: 60%;\n    }\n  }\n`;\n\nconst StyledMarkdownArea = styled.textarea`\n  width: 50%;\n  height: 105vh;\n  padding: 20px;\n  font-size: 2rem;\n  background-color: ${() => Theme.HEADER_BACK};\n  color: ${() => Theme.INTRO};\n  border: none;\n  border-right: 1px solid ${() => Theme.POINT};\n  outline: none;\n  resize: none;\n`;\n\nconst StyledThemeButton = styled(ThemeButton)`\n  bottom: 7vh;\n`;\n\ninterface ICodeBoxProps {\n  value: string;\n  language: string;\n  className: string;\n}\n\nconst CodeBox = ({ value, language }: ICodeBoxProps): ReactElement => {\n  const { mode } = useDependencyTheme();\n  const style = mode === 'LightMode' ? atelierCaveLight : a11yDark;\n  return (\n    <SyntaxHighlighter\n      language={language ?? ''}\n      style={style}\n      customStyle={{\n        lineHeight: '1.4em',\n        fontSize: '1.2em',\n        borderRadius: '0.5em',\n        backgroundColor: Theme.CODE_BOX,\n      }}\n    >\n      {value ?? ''}\n    </SyntaxHighlighter>\n  );\n};\n\nfunction PostBox(): ReactElement {\n  const [input, setInput] = useState('');\n  const { changeMode } = useDependencyTheme();\n  return (\n    <StyledPostBox>\n      <StyledMarkdownArea value={input} onChange={(event) => setInput(event.target.value)} />\n      <ReactMarkdown\n        plugins={[[gfm, { tableCellPadding: 'true' }]]}\n        source={input}\n        className=\"preview\"\n        renderers={{ code: CodeBox }}\n      />\n      <StyledThemeButton onClick={changeMode} />\n    </StyledPostBox>\n  );\n}\n\nexport default PostBox;\n"]},"metadata":{},"sourceType":"module"}