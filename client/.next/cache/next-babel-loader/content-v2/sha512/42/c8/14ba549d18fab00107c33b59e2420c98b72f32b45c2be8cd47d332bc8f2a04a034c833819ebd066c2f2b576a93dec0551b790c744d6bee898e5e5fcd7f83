{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/PostEditor/PostEditor.tsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport useDependencyTheme from '@hook/useDependencyTheme';\nimport Theme from '@theme/index';\nimport ThemeButton from '@molecules/ThemeBtn/index';\nimport Button from '@atoms/Button/index';\nimport editInputText from '@utils/editInputText';\nimport MarkdownPreview from '@molecules/MarkdownPreview/index';\nimport MarkDownEditor from '@organisms/MarkdownEditor/index';\nconst StyledPostBox = styled.div.withConfig({\n  displayName: \"PostEditor__StyledPostBox\",\n  componentId: \"sb7o24-0\"\n})([\"display:flex;position:relative;word-wrap:break-word;white-space:pre-wrap;word-break:normal;pointer-events:none;@keyframes bounce{0%{transform:translate(0%,-50%);opacity:0;}40%{transform:translate(0%,0%);}55%{transform:translate(0%,-5%);}100%{opacity:1;}}\"]);\nconst StyledThemeButton = styled(ThemeButton).withConfig({\n  displayName: \"PostEditor__StyledThemeButton\",\n  componentId: \"sb7o24-1\"\n})([\"pointer-events:auto;bottom:7vh;\"]);\nconst StyledButtonBox = styled.div.withConfig({\n  displayName: \"PostEditor__StyledButtonBox\",\n  componentId: \"sb7o24-2\"\n})([\"position:absolute;right:42%;bottom:2rem;.save{}.submit{background-color:\", \";}\"], () => Theme.SUBMIT_BTN);\nconst StyledButton = styled(Button).withConfig({\n  displayName: \"PostEditor__StyledButton\",\n  componentId: \"sb7o24-3\"\n})([\"pointer-events:auto;margin-right:0.8em;&:hover{opacity:50%;cursor:pointer;}\"]);\n\nconst findCursorPoint = element => {\n  const cursorPointStart = element === null || element === void 0 ? void 0 : element.selectionStart;\n  const cursorPointEnd = element === null || element === void 0 ? void 0 : element.selectionEnd;\n  const cursorPosition = [cursorPointStart, cursorPointEnd];\n  return cursorPosition;\n};\n\nfunction PostEditor() {\n  const {\n    0: input,\n    1: setInput\n  } = useState('');\n  const isEditText = useRef([false, [0, 0]]);\n  const {\n    0: cursorPosition,\n    1: setCursorPosition\n  } = useState([0, 0]);\n  const {\n    changeMode\n  } = useDependencyTheme();\n  const inputAreaElem = useRef(null);\n  const propsAboutTextComponent = {\n    input,\n    setInput,\n    cursorPosition,\n    setCursorPosition,\n    findCursorPoint,\n    inputAreaElem,\n    isEditText\n  };\n\n  const editTextByButton = event => {\n    var _inputAreaElem$curren;\n\n    const cursorPositionToGo = editInputText({\n      event,\n      input,\n      setInput,\n      cursorPosition\n    });\n    isEditText.current = [true, cursorPositionToGo];\n    (_inputAreaElem$curren = inputAreaElem.current) === null || _inputAreaElem$curren === void 0 ? void 0 : _inputAreaElem$curren.focus();\n  };\n\n  useEffect(() => {\n    if (isEditText.current[0]) {\n      var _inputAreaElem$curren2, _inputAreaElem$curren3;\n\n      const cursorToGo = isEditText.current[1];\n      const [startPosition, endPosition] = cursorToGo;\n      (_inputAreaElem$curren2 = inputAreaElem.current) === null || _inputAreaElem$curren2 === void 0 ? void 0 : _inputAreaElem$curren2.focus();\n      (_inputAreaElem$curren3 = inputAreaElem.current) === null || _inputAreaElem$curren3 === void 0 ? void 0 : _inputAreaElem$curren3.setSelectionRange(startPosition, endPosition);\n      isEditText.current = [false, [0, 0]];\n      setCursorPosition(findCursorPoint(inputAreaElem.current));\n    }\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(StyledPostBox, {\n    children: [/*#__PURE__*/_jsxDEV(MarkDownEditor, {\n      propsAboutTextComponent: propsAboutTextComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MarkdownPreview, {\n      input: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledThemeButton, {\n      onClick: changeMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButtonBox, {\n      children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n        onClick: () => console.log('임시저장'),\n        className: \"save\",\n        children: \"\\uC784\\uC2DC\\uC800\\uC7A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n        onClick: () => console.log('등록'),\n        className: \"submit\",\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\nexport default PostEditor;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/PostEditor/PostEditor.tsx"],"names":["React","useState","useRef","useEffect","styled","useDependencyTheme","Theme","ThemeButton","Button","editInputText","MarkdownPreview","MarkDownEditor","StyledPostBox","div","StyledThemeButton","StyledButtonBox","SUBMIT_BTN","StyledButton","findCursorPoint","element","cursorPointStart","selectionStart","cursorPointEnd","selectionEnd","cursorPosition","PostEditor","input","setInput","isEditText","setCursorPosition","changeMode","inputAreaElem","propsAboutTextComponent","editTextByButton","event","cursorPositionToGo","current","focus","cursorToGo","startPosition","endPosition","setSelectionRange","console","log"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport useDependencyTheme from '@hook/useDependencyTheme';\nimport Theme from '@theme/index';\nimport ThemeButton from '@molecules/ThemeBtn/index';\nimport EditButtonBox from '@molecules/EditButtonBox/index';\nimport Button from '@atoms/Button/index';\nimport editInputText from '@utils/editInputText';\nimport WritingArea from '@molecules/WritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport TagAddingBox from '@organisms/TagAddingBox/index';\nimport MarkdownPreview from '@molecules/MarkdownPreview/index';\nimport MarkDownEditor from '@organisms/MarkdownEditor/index';\n\nconst StyledPostBox = styled.div`\n  display: flex;\n  position: relative;\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  word-break: normal;\n  pointer-events: none;\n\n  @keyframes bounce {\n    0% {\n      transform: translate(0%, -50%);\n      opacity: 0;\n    }\n    40% {\n      transform: translate(0%, 0%);\n    }\n    55% {\n      transform: translate(0%, -5%);\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nconst StyledThemeButton = styled(ThemeButton)`\n  pointer-events: auto;\n  bottom: 7vh;\n`;\n\nconst StyledButtonBox = styled.div`\n  position: absolute;\n  right: 42%;\n  bottom: 2rem;\n  .save {\n  }\n  .submit {\n    background-color: ${() => Theme.SUBMIT_BTN};\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  pointer-events: auto;\n  margin-right: 0.8em;\n  &:hover {\n    opacity: 50%;\n    cursor: pointer;\n  }\n`;\n\nconst findCursorPoint = (element: HTMLTextAreaElement): number[] => {\n  const cursorPointStart = element?.selectionStart;\n  const cursorPointEnd = element?.selectionEnd;\n  const cursorPosition = [cursorPointStart, cursorPointEnd];\n\n  return cursorPosition;\n};\n\nfunction PostEditor(): ReactElement {\n  const [input, setInput] = useState('');\n  const isEditText = useRef([false, [0, 0]]);\n  const [cursorPosition, setCursorPosition] = useState([0, 0]);\n\n  const { changeMode } = useDependencyTheme();\n  const inputAreaElem = useRef<HTMLTextAreaElement>(null);\n\n  const propsAboutTextComponent = {\n    input,\n    setInput,\n    cursorPosition,\n    setCursorPosition,\n    findCursorPoint,\n    inputAreaElem,\n    isEditText,\n  };\n\n  const editTextByButton = (event: React.MouseEvent<SVGElement, MouseEvent>) => {\n    const cursorPositionToGo = editInputText({ event, input, setInput, cursorPosition });\n    isEditText.current = [true, cursorPositionToGo];\n    inputAreaElem.current?.focus();\n  };\n\n  useEffect(() => {\n    if (isEditText.current[0]) {\n      const cursorToGo = isEditText.current[1];\n      const [startPosition, endPosition] = cursorToGo as number[];\n\n      inputAreaElem.current?.focus();\n      inputAreaElem.current?.setSelectionRange(startPosition, endPosition);\n      isEditText.current = [false, [0, 0]];\n      setCursorPosition(findCursorPoint(inputAreaElem.current as HTMLTextAreaElement));\n    }\n  }, [input]);\n\n  return (\n    <StyledPostBox>\n      <MarkDownEditor propsAboutTextComponent={propsAboutTextComponent} />\n      <MarkdownPreview input={input} />\n      <StyledThemeButton onClick={changeMode} />\n      <StyledButtonBox>\n        <StyledButton onClick={() => console.log('임시저장')} className=\"save\">\n          임시저장\n        </StyledButton>\n        <StyledButton onClick={() => console.log('등록')} className=\"submit\">\n          등록\n        </StyledButton>\n      </StyledButtonBox>\n    </StyledPostBox>\n  );\n}\n\nexport default PostEditor;\n"]},"metadata":{},"sourceType":"module"}