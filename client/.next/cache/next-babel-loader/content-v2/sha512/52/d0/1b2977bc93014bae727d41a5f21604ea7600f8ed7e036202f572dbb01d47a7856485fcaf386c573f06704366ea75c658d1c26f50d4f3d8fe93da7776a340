{"ast":null,"code":"import Theme from '@theme/index';\nconst REPEAT_START_TIMING = 3000;\nconst TEXT_PERIOD = 4000;\n\nconst animateIntroduceText = ({\n  textList,\n  isMounted,\n  color,\n  setMargin,\n  setColor,\n  setOpacity,\n  setIntro\n}) => {\n  let newColor = color;\n  let currentListIndex = 1;\n  setMargin('1%');\n  const setTimingText = setTimeout(() => {\n    if (!isMounted) {\n      clearTimeout(setTimingText);\n      return;\n    }\n\n    setMargin('100%');\n    setOpacity('0%');\n    const hideText = setInterval(() => {\n      if (!isMounted) {\n        clearInterval(hideText);\n        return;\n      }\n\n      setMargin('100%');\n      setOpacity('0%');\n    }, TEXT_PERIOD);\n  }, REPEAT_START_TIMING);\n  const timerToShow = setInterval(() => {\n    if (!isMounted) {\n      clearInterval(timerToShow);\n      return;\n    }\n\n    setMargin('1%');\n    newColor = newColor === Theme.BLACK ? Theme.POINT : Theme.BLACK;\n    setColor(newColor);\n    setOpacity('100%');\n    setIntro(textList[currentListIndex]);\n    currentListIndex += 1;\n    const isOverList = currentListIndex > textList.length - 1;\n    currentListIndex = isOverList ? 0 : currentListIndex;\n  }, TEXT_PERIOD);\n};\n\nexport default animateIntroduceText;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/animateText.ts"],"names":["Theme","REPEAT_START_TIMING","TEXT_PERIOD","animateIntroduceText","textList","isMounted","color","setMargin","setColor","setOpacity","setIntro","newColor","currentListIndex","setTimingText","setTimeout","clearTimeout","hideText","setInterval","clearInterval","timerToShow","BLACK","POINT","isOverList","length"],"mappings":"AAEA,OAAOA,KAAP,MAAkB,cAAlB;AAWA,MAAMC,mBAAmB,GAAG,IAA5B;AACA,MAAMC,WAAW,GAAG,IAApB;;AAEA,MAAMC,oBAAoD,GAAG,CAAC;AAC5DC,EAAAA,QAD4D;AAE5DC,EAAAA,SAF4D;AAG5DC,EAAAA,KAH4D;AAI5DC,EAAAA,SAJ4D;AAK5DC,EAAAA,QAL4D;AAM5DC,EAAAA,UAN4D;AAO5DC,EAAAA;AAP4D,CAAD,KAQvD;AACJ,MAAIC,QAAQ,GAAGL,KAAf;AACA,MAAIM,gBAAgB,GAAG,CAAvB;AAEAL,EAAAA,SAAS,CAAC,IAAD,CAAT;AACA,QAAMM,aAAa,GAAGC,UAAU,CAAC,MAAM;AACrC,QAAI,CAACT,SAAL,EAAgB;AACdU,MAAAA,YAAY,CAACF,aAAD,CAAZ;AACA;AACD;;AACDN,IAAAA,SAAS,CAAC,MAAD,CAAT;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMO,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjC,UAAI,CAACZ,SAAL,EAAgB;AACda,QAAAA,aAAa,CAACF,QAAD,CAAb;AACA;AACD;;AACDT,MAAAA,SAAS,CAAC,MAAD,CAAT;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAP2B,EAOzBP,WAPyB,CAA5B;AAQD,GAf+B,EAe7BD,mBAf6B,CAAhC;AAiBA,QAAMkB,WAAW,GAAGF,WAAW,CAAC,MAAM;AACpC,QAAI,CAACZ,SAAL,EAAgB;AACda,MAAAA,aAAa,CAACC,WAAD,CAAb;AACA;AACD;;AACDZ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,IAAAA,QAAQ,GAAGA,QAAQ,KAAKX,KAAK,CAACoB,KAAnB,GAA2BpB,KAAK,CAACqB,KAAjC,GAAyCrB,KAAK,CAACoB,KAA1D;AACAZ,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACAF,IAAAA,UAAU,CAAC,MAAD,CAAV;AACAC,IAAAA,QAAQ,CAACN,QAAQ,CAACQ,gBAAD,CAAT,CAAR;AAEAA,IAAAA,gBAAgB,IAAI,CAApB;AACA,UAAMU,UAAU,GAAGV,gBAAgB,GAAGR,QAAQ,CAACmB,MAAT,GAAkB,CAAxD;AACAX,IAAAA,gBAAgB,GAAGU,UAAU,GAAG,CAAH,GAAOV,gBAApC;AACD,GAd8B,EAc5BV,WAd4B,CAA/B;AAeD,CA7CD;;AA+CA,eAAeC,oBAAf","sourcesContent":["import { Dispatch, SetStateAction } from 'react';\nimport { IColorProps } from '@interfaces';\nimport Theme from '@theme/index';\n\ninterface IAnimateProps extends IColorProps {\n  textList: string[];\n  isMounted: boolean;\n  setMargin: Dispatch<SetStateAction<string>>;\n  setColor: Dispatch<SetStateAction<string>>;\n  setOpacity: Dispatch<SetStateAction<string>>;\n  setIntro: Dispatch<SetStateAction<string>>;\n}\n\nconst REPEAT_START_TIMING = 3000;\nconst TEXT_PERIOD = 4000;\n\nconst animateIntroduceText: (props: IAnimateProps) => void = ({\n  textList,\n  isMounted,\n  color,\n  setMargin,\n  setColor,\n  setOpacity,\n  setIntro,\n}) => {\n  let newColor = color;\n  let currentListIndex = 1;\n\n  setMargin('1%');\n  const setTimingText = setTimeout(() => {\n    if (!isMounted) {\n      clearTimeout(setTimingText);\n      return;\n    }\n    setMargin('100%');\n    setOpacity('0%');\n    const hideText = setInterval(() => {\n      if (!isMounted) {\n        clearInterval(hideText);\n        return;\n      }\n      setMargin('100%');\n      setOpacity('0%');\n    }, TEXT_PERIOD);\n  }, REPEAT_START_TIMING);\n\n  const timerToShow = setInterval(() => {\n    if (!isMounted) {\n      clearInterval(timerToShow);\n      return;\n    }\n    setMargin('1%');\n    newColor = newColor === Theme.BLACK ? Theme.POINT : Theme.BLACK;\n    setColor(newColor);\n    setOpacity('100%');\n    setIntro(textList[currentListIndex]);\n\n    currentListIndex += 1;\n    const isOverList = currentListIndex > textList.length - 1;\n    currentListIndex = isOverList ? 0 : currentListIndex;\n  }, TEXT_PERIOD);\n};\n\nexport default animateIntroduceText;\n"]},"metadata":{},"sourceType":"module"}