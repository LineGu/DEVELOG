{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/utils/widthProvider.tsx\";\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { createContext, useState } from 'react';\nconst initContext = {\n  width: 1920,\n  ChangeWidth: undefined\n};\nexport const WidthContext = /*#__PURE__*/createContext(initContext);\n\nfunction WidthProvider({\n  children\n}) {\n  const {\n    0: width,\n    1: setWidth\n  } = useState(window.innerWidth);\n\n  const ChangeWidth = () => {\n    setWidth(window.innerWidth);\n  };\n\n  window.addEventListener('resize', ChangeWidth);\n  return /*#__PURE__*/_jsxDEV(WidthContext.Provider, {\n    value: {\n      width\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}\n\nexport default WidthProvider;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/utils/widthProvider.tsx"],"names":["React","createContext","useState","initContext","width","ChangeWidth","undefined","WidthContext","WidthProvider","children","setWidth","window","innerWidth","addEventListener"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAAwE,OAAxE;AAUA,MAAMC,WAAW,GAAG;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,WAAW,EAAEC;AAA5B,CAApB;AAEA,OAAO,MAAMC,YAAY,gBAAGN,aAAa,CAAcE,WAAd,CAAlC;;AAEP,SAASK,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA0D;AACxD,QAAM;AAAA,OAACL,KAAD;AAAA,OAAQM;AAAR,MAAoBR,QAAQ,CAASS,MAAM,CAACC,UAAhB,CAAlC;;AAEA,QAAMP,WAAW,GAAG,MAAY;AAC9BK,IAAAA,QAAQ,CAACC,MAAM,CAACC,UAAR,CAAR;AACD,GAFD;;AAGAD,EAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCR,WAAlC;AAEA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAED,MAAAA;AAAF,KAA9B;AAAA,cAA0CK;AAA1C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,eAAeD,aAAf","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { createContext, useState, ReactNode, ReactElement } from 'react';\n\ntype Props = {\n  children: ReactNode;\n};\n\ntype WindowWidth = {\n  width: number;\n};\n\nconst initContext = { width: 1920, ChangeWidth: undefined };\n\nexport const WidthContext = createContext<WindowWidth>(initContext);\n\nfunction WidthProvider({ children }: Props): ReactElement {\n  const [width, setWidth] = useState<number>(window.innerWidth);\n\n  const ChangeWidth = (): void => {\n    setWidth(window.innerWidth);\n  };\n  window.addEventListener('resize', ChangeWidth);\n\n  return <WidthContext.Provider value={{ width }}>{children}</WidthContext.Provider>;\n}\n\nexport default WidthProvider;\n"]},"metadata":{},"sourceType":"module"}