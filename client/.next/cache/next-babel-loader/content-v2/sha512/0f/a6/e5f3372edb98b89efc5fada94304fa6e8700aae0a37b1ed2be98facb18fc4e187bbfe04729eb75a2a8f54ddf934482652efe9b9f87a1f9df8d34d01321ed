{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TableModal/Block.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport addTable from '@utils/addTable';\nconst BoxUnit = styled.div.withConfig({\n  displayName: \"Block__BoxUnit\",\n  componentId: \"sc-1h0y9qe-0\"\n})([\"width:20px;height:20px;margin:2px;padding:0;border:1px solid \", \";background-color:\", \";\"], ({\n  color\n}) => color === Theme.HEADER_BACK ? Theme.OUT_LINE : Theme.HEADER_BACK, ({\n  color\n}) => color);\n\nfunction Block({\n  blockPorps\n}) {\n  const {\n    checkedPoint,\n    tableProps,\n    setCheckedPoint,\n    resetCheckedPoint\n  } = blockPorps;\n  const rowBlockLength = 10;\n  const columnBlockLength = 8;\n  const rowBlockCount = new Array(rowBlockLength).fill(0);\n  const columnBlockCount = new Array(columnBlockLength).fill(0);\n  const [xPoint, yPoint] = checkedPoint;\n  const addTableByClick = useCallback(() => {\n    const [rowCount, columnCount] = [xPoint + 1, yPoint + 1];\n\n    const newTableProps = _objectSpread({\n      tableCount: [rowCount, columnCount]\n    }, tableProps);\n\n    addTable(newTableProps);\n    resetCheckedPoint();\n  }, [checkedPoint]);\n  const updateCheckedPoint = useCallback(event => {\n    const [xPointStr, yPointStr] = event.currentTarget.id.split(',');\n    const newCheckedPoint = [parseInt(xPointStr, 10), parseInt(yPointStr, 10)];\n    setCheckedPoint(newCheckedPoint);\n    event.stopPropagation();\n  }, []);\n  const setBoxColor = useCallback((columnNum, rowNum) => {\n    const isCheckedBlock = checkedPoint[0] >= columnNum && checkedPoint[1] >= rowNum;\n    return isCheckedBlock ? Theme.HEADER_BACK : Theme.MODAL_EDIT;\n  }, [checkedPoint]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: columnBlockCount.map((__, rowNum) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block_row_box\",\n      onClick: addTableByClick,\n      onMouseOver: event => event.stopPropagation(),\n      children: rowBlockCount.map((_, colNum) => /*#__PURE__*/_jsxDEV(BoxUnit, {\n        id: `${colNum},${rowNum}`,\n        onMouseOver: updateCheckedPoint,\n        color: setBoxColor(colNum, rowNum)\n      }, colNum, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this))\n    }, rowNum, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Block;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TableModal/Block.tsx"],"names":["React","Fragment","useCallback","styled","Theme","addTable","BoxUnit","div","color","HEADER_BACK","OUT_LINE","Block","blockPorps","checkedPoint","tableProps","setCheckedPoint","resetCheckedPoint","rowBlockLength","columnBlockLength","rowBlockCount","Array","fill","columnBlockCount","xPoint","yPoint","addTableByClick","rowCount","columnCount","newTableProps","tableCount","updateCheckedPoint","event","xPointStr","yPointStr","currentTarget","id","split","newCheckedPoint","parseInt","stopPropagation","setBoxColor","columnNum","rowNum","isCheckedBlock","MODAL_EDIT","map","__","_","colNum"],"mappings":"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","sourcesContent":["import React, { Fragment, ReactElement, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport addTable from '@utils/addTable';\nimport { setStateNumberArr } from '@types';\nimport { IOnHoverDivFunc } from '@eventInterfaces';\nimport { ITableProps } from '@interfaces';\n\ninterface IBlockProps {\n  blockPorps: {\n    checkedPoint: number[];\n    setCheckedPoint: setStateNumberArr;\n    resetCheckedPoint: () => void;\n    tableProps: ITableProps;\n  };\n}\n\nconst BoxUnit = styled.div<{ color: string }>`\n  width: 20px;\n  height: 20px;\n  margin: 2px;\n  padding: 0;\n  border: 1px solid ${({ color }) => (color === Theme.HEADER_BACK ? Theme.OUT_LINE : Theme.HEADER_BACK)};\n  background-color: ${({ color }) => color};\n`;\n\nfunction Block({ blockPorps }: IBlockProps): ReactElement {\n  const { checkedPoint, tableProps, setCheckedPoint, resetCheckedPoint } = blockPorps;\n  const rowBlockLength = 10;\n  const columnBlockLength = 8;\n  const rowBlockCount = new Array(rowBlockLength).fill(0);\n  const columnBlockCount = new Array(columnBlockLength).fill(0);\n  const [xPoint, yPoint] = checkedPoint;\n\n  const addTableByClick = useCallback(() => {\n    const [rowCount, columnCount] = [xPoint + 1, yPoint + 1];\n    const newTableProps = { tableCount: [rowCount, columnCount], ...tableProps };\n    addTable(newTableProps);\n    resetCheckedPoint();\n  }, [checkedPoint]);\n\n  const updateCheckedPoint: IOnHoverDivFunc = useCallback((event) => {\n    const [xPointStr, yPointStr] = event.currentTarget.id.split(',');\n    const newCheckedPoint = [parseInt(xPointStr, 10), parseInt(yPointStr, 10)];\n    setCheckedPoint(newCheckedPoint);\n    event.stopPropagation();\n  }, []);\n\n  const setBoxColor = useCallback(\n    (columnNum, rowNum) => {\n      const isCheckedBlock = checkedPoint[0] >= columnNum && checkedPoint[1] >= rowNum;\n      return isCheckedBlock ? Theme.HEADER_BACK : Theme.MODAL_EDIT;\n    },\n    [checkedPoint],\n  );\n\n  return (\n    <Fragment>\n      {columnBlockCount.map((__, rowNum) => (\n        <div\n          key={rowNum}\n          className=\"block_row_box\"\n          onClick={addTableByClick}\n          onMouseOver={(event) => event.stopPropagation()}\n        >\n          {rowBlockCount.map((_, colNum) => (\n            <BoxUnit\n              key={colNum}\n              id={`${colNum},${rowNum}`}\n              onMouseOver={updateCheckedPoint}\n              color={setBoxColor(colNum, rowNum)}\n            />\n          ))}\n        </div>\n      ))}\n    </Fragment>\n  );\n}\n\nexport default Block;\n"]},"metadata":{},"sourceType":"module"}