{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport axios from 'axios';\nimport { URL } from '@construction/url';\nimport { headerOption } from '@config/headerForImgur';\nimport Editor from './Editor';\n\nvar ImgEditor = /*#__PURE__*/function (_Editor) {\n  _inherits(ImgEditor, _Editor);\n\n  var _super = _createSuper(ImgEditor);\n\n  function ImgEditor(editType) {\n    var _this;\n\n    _classCallCheck(this, ImgEditor);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"insertionText\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxSize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"uploadingState\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"positionToMove\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"editInput\", function (input, cursorPosition) {\n      var currentPositon = cursorPosition[0];\n\n      var updatedText = _this.insertText(_this.insertionText, input, currentPositon);\n\n      var _this$positionToMove = _slicedToArray(_this.positionToMove, 2),\n          firstPoint = _this$positionToMove[0],\n          secondPoint = _this$positionToMove[1];\n\n      var cursorToGo = [firstPoint + currentPositon, secondPoint + currentPositon];\n      return {\n        updatedText: updatedText,\n        cursorToGo: cursorToGo\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setImgText\", function (url) {\n      _this.setImgString(url);\n\n      _this.insertionText = _this.stringToInsert.img;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"uploadImg\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file, setUploadState) {\n        var isExcessSize, isValidFile, imgData, getUploadProgress, postConfig, response, imgUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                isExcessSize = file.size > _this.maxSize;\n                isValidFile = file && isExcessSize;\n                if (!isValidFile) _this.uploadingState = {\n                  progress: 0,\n                  error: 'NOT_VAILD_FILE'\n                };\n                imgData = new FormData();\n                imgData.append('image', file);\n\n                getUploadProgress = function getUploadProgress(ProgressEvent) {\n                  var uploadingProgress = Math.round(ProgressEvent.loaded / ProgressEvent.total * 100);\n                  setUploadState({\n                    progress: uploadingProgress,\n                    error: ''\n                  });\n                };\n\n                _context.prev = 6;\n                postConfig = {\n                  headers: headerOption,\n                  onUploadProgress: function onUploadProgress(ProgressEvent) {\n                    return getUploadProgress(ProgressEvent);\n                  }\n                };\n                _context.next = 10;\n                return axios.post(URL.IMGUR, imgData, postConfig);\n\n              case 10:\n                response = _context.sent;\n                imgUrl = response.data.data.link;\n                setUploadState({\n                  progress: 0,\n                  error: ''\n                });\n\n                _this.setImgText(imgUrl);\n\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](6);\n                setUploadState({\n                  progress: 0,\n                  error: ''\n                });\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[6, 16]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _this.insertionText = _this.stringToInsert[editType];\n    _this.maxSize = 5000000;\n    _this.uploadingState = {\n      progress: 0,\n      error: ''\n    };\n    _this.positionToMove = [3, 3];\n    return _this;\n  }\n\n  return ImgEditor;\n}(Editor);\n\nexport { ImgEditor as default };","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/markdownEditor/ImgEditor.ts"],"names":["axios","URL","headerOption","Editor","ImgEditor","editType","input","cursorPosition","currentPositon","updatedText","insertText","insertionText","positionToMove","firstPoint","secondPoint","cursorToGo","url","setImgString","stringToInsert","img","file","setUploadState","isExcessSize","size","maxSize","isValidFile","uploadingState","progress","error","imgData","FormData","append","getUploadProgress","ProgressEvent","uploadingProgress","Math","round","loaded","total","postConfig","headers","onUploadProgress","post","IMGUR","response","imgUrl","data","link","setImgText"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { URL } from '@construction/url';\nimport { headerOption } from '@config/headerForImgur';\nimport { SetStateProcess } from '@types';\nimport Editor from './Editor';\n\nexport default class ImgEditor extends Editor {\n  public insertionText: string;\n\n  public maxSize: number;\n\n  public uploadingState: { progress: number; error: string };\n\n  public positionToMove: number[];\n\n  public constructor(editType: string) {\n    super();\n    this.insertionText = this.stringToInsert[editType];\n    this.maxSize = 5000000;\n    this.uploadingState = { progress: 0, error: '' };\n    this.positionToMove = [3, 3];\n  }\n\n  public editInput = (input: string, cursorPosition: number[]): { updatedText: string; cursorToGo: number[] } => {\n    const currentPositon = cursorPosition[0];\n    const updatedText = this.insertText(this.insertionText, input, currentPositon);\n    const [firstPoint, secondPoint] = this.positionToMove;\n    const cursorToGo = [firstPoint + currentPositon, secondPoint + currentPositon];\n    return { updatedText, cursorToGo };\n  };\n\n  public setImgText = (url: string): void => {\n    this.setImgString(url);\n    this.insertionText = this.stringToInsert.img;\n  };\n\n  public uploadImg = async (file: File, setUploadState: SetStateProcess): Promise<void> => {\n    const isExcessSize = file.size > this.maxSize;\n    const isValidFile = file && isExcessSize;\n    if (!isValidFile) this.uploadingState = { progress: 0, error: 'NOT_VAILD_FILE' };\n    const imgData = new FormData();\n    imgData.append('image', file);\n\n    const getUploadProgress = (ProgressEvent: ProgressEvent): void => {\n      const uploadingProgress = Math.round((ProgressEvent.loaded / ProgressEvent.total) * 100);\n      setUploadState({ progress: uploadingProgress, error: '' });\n    };\n\n    try {\n      const postConfig = {\n        headers: headerOption,\n        onUploadProgress: (ProgressEvent: ProgressEvent) => getUploadProgress(ProgressEvent),\n      };\n\n      const response = await axios.post(URL.IMGUR, imgData, postConfig);\n      const imgUrl = response.data.data.link;\n      setUploadState({ progress: 0, error: '' });\n      this.setImgText(imgUrl);\n    } catch (error) {\n      setUploadState({ progress: 0, error: '' });\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}