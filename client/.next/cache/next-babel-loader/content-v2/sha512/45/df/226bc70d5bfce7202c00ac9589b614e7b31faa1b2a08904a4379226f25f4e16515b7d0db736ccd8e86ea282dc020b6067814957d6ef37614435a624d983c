{"ast":null,"code":"import { useState, useRef } from 'react';\n\nconst useCursorPoint = inputAreaElem => {\n  const initCursor = [0, 0];\n  const {\n    0: cursorPosition,\n    1: setCursorPosition\n  } = useState(initCursor);\n  const infoOfCursorToGo = useRef([false, cursorPosition]);\n\n  const updateCusorPoint = () => {\n    const cursorPointStart = inputAreaElem.selectionStart;\n    const cursorPointEnd = inputAreaElem.selectionEnd;\n    const updatedCursorPosition = [cursorPointStart, cursorPointEnd];\n    setCursorPosition(updatedCursorPosition);\n  };\n\n  const moveCursor = cursorPositionToGo => {\n    infoOfCursorToGo.current = [true, cursorPositionToGo];\n    inputAreaElem.focus();\n  };\n\n  return {\n    cursorPosition,\n    setCursorPosition,\n    infoOfCursorToGo,\n    updateCusorPoint,\n    moveCursor\n  };\n};\n\nexport default useCursorPoint;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/hooks/useCursorPoint.tsx"],"names":["useState","useRef","useCursorPoint","inputAreaElem","initCursor","cursorPosition","setCursorPosition","infoOfCursorToGo","updateCusorPoint","cursorPointStart","selectionStart","cursorPointEnd","selectionEnd","updatedCursorPosition","moveCursor","cursorPositionToGo","current","focus"],"mappings":"AAAA,SAA2CA,QAA3C,EAAgEC,MAAhE,QAA8E,OAA9E;;AAGA,MAAMC,cAAc,GAAIC,aAAD,IAAwC;AAC7D,QAAMC,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAnB;AACA,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsCN,QAAQ,CAACI,UAAD,CAApD;AACA,QAAMG,gBAAgB,GAAGN,MAAM,CAAsB,CAAC,KAAD,EAAQI,cAAR,CAAtB,CAA/B;;AAEA,QAAMG,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,gBAAgB,GAAGN,aAAa,CAACO,cAAvC;AACA,UAAMC,cAAc,GAAGR,aAAa,CAACS,YAArC;AACA,UAAMC,qBAAqB,GAAG,CAACJ,gBAAD,EAAmBE,cAAnB,CAA9B;AACAL,IAAAA,iBAAiB,CAACO,qBAAD,CAAjB;AACD,GALD;;AAOA,QAAMC,UAAU,GAAIC,kBAAD,IAAkC;AACnDR,IAAAA,gBAAgB,CAACS,OAAjB,GAA2B,CAAC,IAAD,EAAOD,kBAAP,CAA3B;AACAZ,IAAAA,aAAa,CAACc,KAAd;AACD,GAHD;;AAKA,SAAO;AAAEZ,IAAAA,cAAF;AAAkBC,IAAAA,iBAAlB;AAAqCC,IAAAA,gBAArC;AAAuDC,IAAAA,gBAAvD;AAAyEM,IAAAA;AAAzE,GAAP;AACD,CAlBD;;AAoBA,eAAeZ,cAAf","sourcesContent":["import React, { ReactElement, useCallback, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst useCursorPoint = (inputAreaElem: HTMLTextAreaElement) => {\n  const initCursor = [0, 0];\n  const [cursorPosition, setCursorPosition] = useState(initCursor);\n  const infoOfCursorToGo = useRef<[boolean, number[]]>([false, cursorPosition]);\n\n  const updateCusorPoint = () => {\n    const cursorPointStart = inputAreaElem.selectionStart;\n    const cursorPointEnd = inputAreaElem.selectionEnd;\n    const updatedCursorPosition = [cursorPointStart, cursorPointEnd];\n    setCursorPosition(updatedCursorPosition);\n  };\n\n  const moveCursor = (cursorPositionToGo: number[]) => {\n    infoOfCursorToGo.current = [true, cursorPositionToGo];\n    inputAreaElem.focus();\n  };\n\n  return { cursorPosition, setCursorPosition, infoOfCursorToGo, updateCusorPoint, moveCursor };\n};\n\nexport default useCursorPoint;\n"]},"metadata":{},"sourceType":"module"}