{"ast":null,"code":"import FrontInsertEditor from './FrontInsertEditor';\nvar Editors = {\n  h1Editor: new FrontInsertEditor('h1'),\n  h2Editor: new FrontInsertEditor('h2'),\n  h3Editor: new FrontInsertEditor('h3'),\n  quoteEditor: new FrontInsertEditor('quote'),\n  checkboxEditor: new FrontInsertEditor('checkbox')\n};\n\nvar editByButton = function editByButton(_ref) {\n  var input = _ref.input,\n      event = _ref.event,\n      cursorPosition = _ref.cursorPosition;\n  var editType = event.target.id;\n  var editorName = \"\".concat(editType, \"Editor\");\n  console.log(editorName);\n  console.log(Editors[editorName]);\n  var editInputFunc = Editors.jj.editInput;\n\n  var _editInputFunc = editInputFunc(input, cursorPosition),\n      updatedText = _editInputFunc.updatedText,\n      cursorToGo = _editInputFunc.cursorToGo;\n\n  return {\n    updatedText: updatedText,\n    cursorToGo: cursorToGo\n  };\n};\n\nexport default editByButton;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/markdownEditor/index.ts"],"names":["FrontInsertEditor","Editors","h1Editor","h2Editor","h3Editor","quoteEditor","checkboxEditor","editByButton","input","event","cursorPosition","editType","target","id","editorName","console","log","editInputFunc","jj","editInput","updatedText","cursorToGo"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AAsBA,IAAMC,OAAmB,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,IAAIF,iBAAJ,CAAsB,IAAtB,CADgB;AAE1BG,EAAAA,QAAQ,EAAE,IAAIH,iBAAJ,CAAsB,IAAtB,CAFgB;AAG1BI,EAAAA,QAAQ,EAAE,IAAIJ,iBAAJ,CAAsB,IAAtB,CAHgB;AAI1BK,EAAAA,WAAW,EAAE,IAAIL,iBAAJ,CAAsB,OAAtB,CAJa;AAK1BM,EAAAA,cAAc,EAAE,IAAIN,iBAAJ,CAAsB,UAAtB;AALU,CAA5B;;AAQA,IAAMO,YAAY,GAAG,SAAfA,YAAe,OAAuE;AAAA,MAApEC,KAAoE,QAApEA,KAAoE;AAAA,MAA7DC,KAA6D,QAA7DA,KAA6D;AAAA,MAAtDC,cAAsD,QAAtDA,cAAsD;AAC1F,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAaC,EAA9B;AACA,MAAMC,UAAU,aAAMH,QAAN,WAAhB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYf,OAAO,CAACa,UAAD,CAAnB;AACA,MAAMG,aAAa,GAAGhB,OAAO,CAACiB,EAAR,CAAWC,SAAjC;;AAL0F,uBAOtDF,aAAa,CAACT,KAAD,EAAQE,cAAR,CAPyC;AAAA,MAOlFU,WAPkF,kBAOlFA,WAPkF;AAAA,MAOrEC,UAPqE,kBAOrEA,UAPqE;;AAS1F,SAAO;AAAED,IAAAA,WAAW,EAAXA,WAAF;AAAeC,IAAAA,UAAU,EAAVA;AAAf,GAAP;AACD,CAVD;;AAYA,eAAed,YAAf","sourcesContent":["import FrontInsertEditor from './FrontInsertEditor';\n\ninterface IEditTextProps {\n  event: React.MouseEvent<SVGElement, MouseEvent>;\n  input: string;\n  cursorPosition: number[];\n}\n\ninterface IResultOfEditor {\n  updatedText: string;\n  cursorToGo: number[];\n}\n\ntype editorType = {\n  [index: string]: FrontInsertEditor;\n  h1Editor: FrontInsertEditor;\n  h2Editor: FrontInsertEditor;\n  h3Editor: FrontInsertEditor;\n  quoteEditor: FrontInsertEditor;\n  checkboxEditor: FrontInsertEditor;\n};\n\nconst Editors: editorType = {\n  h1Editor: new FrontInsertEditor('h1'),\n  h2Editor: new FrontInsertEditor('h2'),\n  h3Editor: new FrontInsertEditor('h3'),\n  quoteEditor: new FrontInsertEditor('quote'),\n  checkboxEditor: new FrontInsertEditor('checkbox'),\n};\n\nconst editByButton = ({ input, event, cursorPosition }: IEditTextProps): IResultOfEditor => {\n  const editType = event.target.id;\n  const editorName = `${editType}Editor`;\n  console.log(editorName);\n  console.log(Editors[editorName]);\n  const editInputFunc = Editors.jj.editInput;\n\n  const { updatedText, cursorToGo } = editInputFunc(input, cursorPosition);\n\n  return { updatedText, cursorToGo };\n};\n\nexport default editByButton;\n"]},"metadata":{},"sourceType":"module"}