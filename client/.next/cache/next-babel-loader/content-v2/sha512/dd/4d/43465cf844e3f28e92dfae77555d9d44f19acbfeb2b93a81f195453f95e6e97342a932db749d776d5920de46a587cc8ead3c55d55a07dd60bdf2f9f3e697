{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TagAreaToAdd/TagAreaToAdd.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport TextInput from '@atoms/TextInput/index';\nimport message from '@construction/message';\nconst TextAreaForTag = styled(TextInput).withConfig({\n  displayName: \"TagAreaToAdd__TextAreaForTag\",\n  componentId: \"sc-16axhvg-0\"\n})([\"font-size:1.5em;font-weight:400;margin-left:0.4rem;padding-bottom:0.7rem;background-color:\", \";color:\", \";&::placeholder{color:#a2acb4;}&::selection{background-color:#dfdfdf;color:#a2acb4;}\"], () => Theme.HEADER_BACK, () => Theme.INTRO);\n\nfunction TagAreaToAdd({\n  propsForTagArea\n}) {\n  const {\n    tagInput,\n    setTagInput,\n    tagList,\n    setTagList,\n    setModalState\n  } = propsForTagArea;\n  return /*#__PURE__*/_jsxDEV(TextInput, {\n    placeholder: message.TAG_PLACEHOLDER,\n    onFocus: () => setModalState('show'),\n    onBlur: () => setModalState('hidden'),\n    onChange: event => {\n      if (!event) return;\n      const newTag = event.target.value;\n      const isValidTagForm = newTag[0] === '#' || newTag.length === 0;\n      if (isValidTagForm) setTagInput(newTag);\n    },\n    onKeyDown: event => {\n      if (!event || event.currentTarget.value.length < 2) return;\n\n      if ((event.key === ' ' || event.key === 'Enter') && tagInput[0] === '#') {\n        const tagListCopied = [...tagList];\n        tagListCopied.push(tagInput.slice(1));\n        setTagList(tagListCopied);\n        setTagInput('');\n        setModalState('hidden');\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(TextAreaForTag, {\n    placeholder: \"\\uD0DC\\uADF8\\uB97C \\uCD94\\uAC00\\uD558\\uC138\\uC694\",\n    spellCheck: \"false\",\n    value: tagInput,\n    onFocus: () => setModalState('show'),\n    onBlur: () => setModalState('hidden'),\n    onChange: event => {\n      const newTag = event.target.value;\n      if (newTag[0] === '#' || newTag.length === 0) setTagInput(newTag);\n    },\n    onKeyDown: event => {\n      if (event.currentTarget.value.length < 2) return;\n\n      if ((event.key === ' ' || event.key === 'Enter') && tagInput[0] === '#') {\n        const tagListCopied = [...tagList];\n        tagListCopied.push(tagInput.slice(1));\n        setTagList(tagListCopied);\n        setTagInput('');\n        setModalState('hidden');\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\nexport default TagAreaToAdd;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TagAreaToAdd/TagAreaToAdd.tsx"],"names":["React","styled","Theme","TextInput","message","TextAreaForTag","HEADER_BACK","INTRO","TagAreaToAdd","propsForTagArea","tagInput","setTagInput","tagList","setTagList","setModalState","TAG_PLACEHOLDER","event","newTag","target","value","isValidTagForm","length","currentTarget","key","tagListCopied","push","slice"],"mappings":"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","sourcesContent":["import React, { ReactElement, SetStateAction, Dispatch } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport TextInput from '@atoms/TextInput/index';\nimport message from '@construction/message';\n\ninterface ITagAreaProps {\n  propsForTagArea: {\n    tagInput: string;\n    setTagInput: Dispatch<SetStateAction<string>>;\n    tagList: string[];\n    setTagList: Dispatch<SetStateAction<string[]>>;\n    setModalState: Dispatch<SetStateAction<string>>;\n  };\n}\n\nconst TextAreaForTag = styled(TextInput)`\n  font-size: 1.5em;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  padding-bottom: 0.7rem;\n\n  background-color: ${() => Theme.HEADER_BACK};\n  color: ${() => Theme.INTRO};\n  &::placeholder {\n    color: #a2acb4;\n  }\n  &::selection {\n    background-color: #dfdfdf;\n    color: #a2acb4;\n  }\n`;\n\nfunction TagAreaToAdd({ propsForTagArea }: ITagAreaProps): ReactElement {\n  const { tagInput, setTagInput, tagList, setTagList, setModalState } = propsForTagArea;\n\n  return (\n    <TextInput\n      placeholder={message.TAG_PLACEHOLDER}\n      onFocus={() => setModalState('show')}\n      onBlur={() => setModalState('hidden')}\n      onChange={(event) => {\n        if (!event) return;\n        const newTag = event.target.value;\n        const isValidTagForm = newTag[0] === '#' || newTag.length === 0;\n        if (isValidTagForm) setTagInput(newTag);\n      }}\n      onKeyDown={(event) => {\n        if (!event || event.currentTarget.value.length < 2) return;\n        if ((event.key === ' ' || event.key === 'Enter') && tagInput[0] === '#') {\n          const tagListCopied: string[] = [...tagList];\n          tagListCopied.push(tagInput.slice(1));\n          setTagList(tagListCopied);\n          setTagInput('');\n          setModalState('hidden');\n        }\n      }}\n    />\n  );\n\n  return (\n    <TextAreaForTag\n      placeholder=\"태그를 추가하세요\"\n      spellCheck=\"false\"\n      value={tagInput}\n      onFocus={() => setModalState('show')}\n      onBlur={() => setModalState('hidden')}\n      onChange={(event) => {\n        const newTag = event.target.value;\n        if (newTag[0] === '#' || newTag.length === 0) setTagInput(newTag);\n      }}\n      onKeyDown={(event) => {\n        if (event.currentTarget.value.length < 2) return;\n        if ((event.key === ' ' || event.key === 'Enter') && tagInput[0] === '#') {\n          const tagListCopied: string[] = [...tagList];\n          tagListCopied.push(tagInput.slice(1));\n          setTagList(tagListCopied);\n          setTagInput('');\n          setModalState('hidden');\n        }\n      }}\n    />\n  );\n}\n\nexport default TagAreaToAdd;\n"]},"metadata":{},"sourceType":"module"}