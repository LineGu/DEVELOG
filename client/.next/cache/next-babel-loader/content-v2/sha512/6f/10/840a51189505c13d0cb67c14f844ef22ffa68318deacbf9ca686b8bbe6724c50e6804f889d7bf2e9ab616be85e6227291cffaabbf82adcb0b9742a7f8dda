{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/PostTagInput/PostTagInput.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport TextInput from '@atoms/TextInput/index';\nimport message from '@construction/message';\nconst TextAreaForTag = styled(TextInput).withConfig({\n  displayName: \"PostTagInput__TextAreaForTag\",\n  componentId: \"sc-5hze2e-0\"\n})([\"font-size:1.5em;font-weight:400;margin-left:0.4rem;background-color:\", \";color:\", \";&::placeholder{color:#a2acb4;}&::selection{background-color:#dfdfdf;color:#a2acb4;}\"], () => Theme.HEADER_BACK, () => Theme.INTRO);\n\nconst renderTagChanged = (event, setTagInput) => {\n  if (!event) return;\n  const newTag = event.target.value;\n  const isValidTagForm = newTag[0] === '#' || newTag.length === 0;\n  if (isValidTagForm) setTagInput(newTag);\n};\n\nfunction PostTagInput({\n  propsForTagArea\n}) {\n  const {\n    addTag,\n    setModalState\n  } = propsForTagArea;\n  return /*#__PURE__*/_jsxDEV(TextAreaForTag, {\n    placeholder: message.TAG_PLACEHOLDER,\n    onFocus: () => setModalState('show'),\n    onBlur: () => setModalState('hidden'),\n    onChange: renderTagChanged,\n    onKeyDown: addTag\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\nexport default PostTagInput;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/PostTagInput/PostTagInput.tsx"],"names":["React","styled","Theme","TextInput","message","TextAreaForTag","HEADER_BACK","INTRO","renderTagChanged","event","setTagInput","newTag","target","value","isValidTagForm","length","PostTagInput","propsForTagArea","addTag","setModalState","TAG_PLACEHOLDER"],"mappings":";;AAAA,OAAOA,KAAP,MAA8D,OAA9D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAeA,MAAMC,cAAc,GAAGJ,MAAM,CAACE,SAAD,CAAT;AAAA;AAAA;AAAA,gLAKE,MAAMD,KAAK,CAACI,WALd,EAMT,MAAMJ,KAAK,CAACK,KANH,CAApB;;AAgBA,MAAMC,gBAA2B,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;AAC1D,MAAI,CAACD,KAAL,EAAY;AACZ,QAAME,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAA5B;AACA,QAAMC,cAAc,GAAGH,MAAM,CAAC,CAAD,CAAN,KAAc,GAAd,IAAqBA,MAAM,CAACI,MAAP,KAAkB,CAA9D;AACA,MAAID,cAAJ,EAAoBJ,WAAW,CAACC,MAAD,CAAX;AACrB,CALD;;AAOA,SAASK,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAwE;AACtE,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA4BF,eAAlC;AAEA,sBACE,QAAC,cAAD;AACE,IAAA,WAAW,EAAEb,OAAO,CAACgB,eADvB;AAEE,IAAA,OAAO,EAAE,MAAMD,aAAa,CAAC,MAAD,CAF9B;AAGE,IAAA,MAAM,EAAE,MAAMA,aAAa,CAAC,QAAD,CAH7B;AAIE,IAAA,QAAQ,EAAEX,gBAJZ;AAKE,IAAA,SAAS,EAAEU;AALb;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;AAED,eAAeF,YAAf","sourcesContent":["import React, { ReactElement, SetStateAction, Dispatch } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport TextInput from '@atoms/TextInput/index';\nimport message from '@construction/message';\nimport { IOnKeyboardFunc } from '@interfaces';\nimport { StringState } from '@hookTypes/State';\n\ninterface ITagAreaProps {\n  propsForTagArea: {\n    addTag: IOnKeyboardFunc;\n    setModalState: StringState;\n  };\n}\n\ninterface IOnChange {\n  (event: React.ChangeEvent<HTMLTextAreaElement>, setTagInput: Dispatch<SetStateAction<string>>): void;\n}\n\nconst TextAreaForTag = styled(TextInput)`\n  font-size: 1.5em;\n  font-weight: 400;\n  margin-left: 0.4rem;\n\n  background-color: ${() => Theme.HEADER_BACK};\n  color: ${() => Theme.INTRO};\n  &::placeholder {\n    color: #a2acb4;\n  }\n  &::selection {\n    background-color: #dfdfdf;\n    color: #a2acb4;\n  }\n`;\n\nconst renderTagChanged: IOnChange = (event, setTagInput) => {\n  if (!event) return;\n  const newTag = event.target.value;\n  const isValidTagForm = newTag[0] === '#' || newTag.length === 0;\n  if (isValidTagForm) setTagInput(newTag);\n};\n\nfunction PostTagInput({ propsForTagArea }: ITagAreaProps): ReactElement {\n  const { addTag, setModalState } = propsForTagArea;\n\n  return (\n    <TextAreaForTag\n      placeholder={message.TAG_PLACEHOLDER}\n      onFocus={() => setModalState('show')}\n      onBlur={() => setModalState('hidden')}\n      onChange={renderTagChanged}\n      onKeyDown={addTag}\n    />\n  );\n}\n\nexport default PostTagInput;\n"]},"metadata":{},"sourceType":"module"}