{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/MarkdownEditor/MarkdownEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport WritingArea from '@organisms/Editor/WritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport EditorTagArea from '@organisms/Editor/TagArea/index';\nimport EditButtonBox from '@organisms/Editor/ButtonBox/index';\nimport editInputText from '@utils/editInputText';\nimport ProcessBar from '@molecules/ProcessBar';\nvar EditorAreaWrapper = styled.div.withConfig({\n  displayName: \"MarkdownEditor__EditorAreaWrapper\",\n  componentId: \"sc-13p7271-0\"\n})([\"width:50%;height:100vh;@media (max-width:\", \"){width:100%;}@media (max-width:\", \"){width:100%;}& > hr:not(processBar){position:absolute;top:13vh;left:3vw;width:9vw;border:4px solid \", \";@media (max-width:\", \"){top:2.7em;left:0.8em;width:4em;border:2px solid \", \";}}.show{animation-name:bounce;animation-duration:0.5s;}\"], function () {\n  return Theme.MOBILE;\n}, function () {\n  return Theme.PC;\n}, function () {\n  return Theme.EMPHASIS;\n}, function () {\n  return Theme.MOBILE;\n}, function () {\n  return Theme.EMPHASIS;\n});\n_c = EditorAreaWrapper;\n\nvar findCursorPoint = function findCursorPoint(element) {\n  var cursorPointStart = element === null || element === void 0 ? void 0 : element.selectionStart;\n  var cursorPointEnd = element === null || element === void 0 ? void 0 : element.selectionEnd;\n  var cursorPosition = [cursorPointStart, cursorPointEnd];\n  return cursorPosition;\n};\n\nvar uploadStateInit = {\n  process: 0,\n  error: ''\n};\n\nfunction MarkDownEditor(_ref) {\n  _s();\n\n  var input = _ref.input,\n      setInput = _ref.setInput;\n\n  var _useState = useState(''),\n      imageUrl = _useState[0],\n      setImageUrl = _useState[1];\n\n  var _useState2 = useState(uploadStateInit),\n      uploadState = _useState2[0],\n      setUploadState = _useState2[1];\n\n  var infoOfCursorToGo = useRef([false, [0, 0]]);\n\n  var _useState3 = useState([0, 0]),\n      cursorPosition = _useState3[0],\n      setCursorPosition = _useState3[1];\n\n  var inputAreaElem = useRef(null);\n  var isUploading = useRef(false);\n  isUploading.current = uploadState.process !== 0;\n  useEffect(function () {\n    if (!isUploading.current) return;\n    var currentCursor = cursorPosition[0];\n    var inputInsertedUploading = \"\".concat(input.slice(0, currentCursor), \"![Loading...]()\").concat(input.slice(currentCursor));\n    setInput(inputInsertedUploading);\n  }, [isUploading.current]);\n\n  var updateCusorByClick = function updateCusorByClick() {\n    setCursorPosition(findCursorPoint(inputAreaElem.current));\n  };\n\n  var updateCusorByKeyboard = function updateCusorByKeyboard(event) {\n    var cursorFinder = setTimeout(function () {\n      return setCursorPosition(findCursorPoint(inputAreaElem.current));\n    }, 400);\n    event.target.addEventListener('keyup', function () {\n      return clearTimeout(cursorFinder);\n    });\n  };\n\n  var writingAreaProps = {\n    input: input,\n    setInput: setInput,\n    updateCusorByClick: updateCusorByClick,\n    updateCusorByKeyboard: updateCusorByKeyboard,\n    inputAreaElem: inputAreaElem,\n    setImageUrl: setImageUrl,\n    setUploadState: setUploadState\n  };\n  var controlInputAndCursor = useCallback(function (event) {\n    var _inputAreaElem$curren;\n\n    var cursorPositionToGo = editInputText({\n      event: event,\n      input: input,\n      setInput: setInput,\n      cursorPosition: cursorPosition\n    });\n    infoOfCursorToGo.current = [true, cursorPositionToGo];\n    (_inputAreaElem$curren = inputAreaElem.current) === null || _inputAreaElem$curren === void 0 ? void 0 : _inputAreaElem$curren.focus();\n  }, [input, cursorPosition]);\n  var insertImageMarkdown = useCallback(function () {\n    var isNotVaildUrl = imageUrl === null || imageUrl === undefined || imageUrl.length === 0;\n\n    if (uploadState.error) {\n      alert('이미지 업로드 실패');\n      var previousInput = \"\".concat(input.slice(0, cursorPosition[0])).concat(input.slice(cursorPosition[0] + 15));\n      setInput(previousInput);\n      setImageUrl('');\n      setUploadState(uploadStateInit);\n      return;\n    }\n\n    if (isNotVaildUrl) return;\n    var inputWithNewImg = \"\".concat(input.slice(0, cursorPosition[0]), \"\\n![](\").concat(imageUrl, \")\\n\").concat(input.slice(cursorPosition[0] + 15));\n    setInput(inputWithNewImg);\n    setImageUrl('');\n  }, [imageUrl, uploadState]);\n  var moveCursorAfterEdit = useCallback(function () {\n    var _inputAreaElem$curren2, _inputAreaElem$curren3;\n\n    var didClickedEditButton = infoOfCursorToGo.current[0];\n    if (!didClickedEditButton) return;\n    var cursorPositionToGo = infoOfCursorToGo.current[1];\n\n    var _ref2 = cursorPositionToGo,\n        _ref3 = _slicedToArray(_ref2, 2),\n        startPosition = _ref3[0],\n        endPosition = _ref3[1];\n\n    (_inputAreaElem$curren2 = inputAreaElem.current) === null || _inputAreaElem$curren2 === void 0 ? void 0 : _inputAreaElem$curren2.focus();\n    (_inputAreaElem$curren3 = inputAreaElem.current) === null || _inputAreaElem$curren3 === void 0 ? void 0 : _inputAreaElem$curren3.setSelectionRange(startPosition, endPosition);\n    infoOfCursorToGo.current = [false, [0, 0]];\n    setCursorPosition(findCursorPoint(inputAreaElem.current));\n  }, [input]);\n  useEffect(function () {\n    moveCursorAfterEdit();\n  }, [input]);\n  useEffect(function () {\n    insertImageMarkdown();\n  }, [imageUrl, uploadState]);\n  return /*#__PURE__*/_jsxDEV(EditorAreaWrapper, {\n    process: isUploading.current ? uploadState.process : 0,\n    children: [/*#__PURE__*/_jsxDEV(ProcessBar, {\n      isUploading: isUploading.current,\n      uploadState: uploadState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostTitleInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditorTagArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditButtonBox, {\n      onClick: controlInputAndCursor,\n      tableProps: {\n        input: input,\n        setInput: setInput,\n        cursorPosition: cursorPosition\n      },\n      setImageUrl: setImageUrl,\n      setUploadState: setUploadState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WritingArea, {\n      className: \"textInput\",\n      writingAreaProps: writingAreaProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MarkDownEditor, \"pry0J1t35sIOAG5aHTW//Ax65Hk=\");\n\n_c2 = MarkDownEditor;\nexport default MarkDownEditor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditorAreaWrapper\");\n$RefreshReg$(_c2, \"MarkDownEditor\");","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/MarkdownEditor/MarkdownEditor.tsx"],"names":["React","useCallback","useState","useEffect","useRef","styled","Theme","WritingArea","PostTitleInput","EditorTagArea","EditButtonBox","editInputText","ProcessBar","EditorAreaWrapper","div","MOBILE","PC","EMPHASIS","findCursorPoint","element","cursorPointStart","selectionStart","cursorPointEnd","selectionEnd","cursorPosition","uploadStateInit","process","error","MarkDownEditor","input","setInput","imageUrl","setImageUrl","uploadState","setUploadState","infoOfCursorToGo","setCursorPosition","inputAreaElem","isUploading","current","currentCursor","inputInsertedUploading","slice","updateCusorByClick","updateCusorByKeyboard","event","cursorFinder","setTimeout","target","addEventListener","clearTimeout","writingAreaProps","controlInputAndCursor","cursorPositionToGo","focus","insertImageMarkdown","isNotVaildUrl","undefined","length","alert","previousInput","inputWithNewImg","moveCursorAfterEdit","didClickedEditButton","startPosition","endPosition","setSelectionRange"],"mappings":"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","sourcesContent":["import React, { ReactElement, useCallback, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport WritingArea from '@organisms/Editor/WritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport EditorTagArea from '@organisms/Editor/TagArea/index';\nimport EditButtonBox from '@organisms/Editor/ButtonBox/index';\nimport editInputText from '@utils/editInputText';\nimport { IPostInputProps, IUploadState } from '@interfaces';\nimport { IOnKeyboardFunc } from '@eventInterfaces';\nimport ProcessBar from '@molecules/ProcessBar';\n\nconst EditorAreaWrapper = styled.div<{ process: number }>`\n  width: 50%;\n  height: 100vh;\n  @media (max-width: ${() => Theme.MOBILE}) {\n    width: 100%;\n  }\n\n  @media (max-width: ${() => Theme.PC}) {\n    width: 100%;\n  }\n\n  & > hr:not(processBar) {\n    position: absolute;\n    top: 13vh;\n    left: 3vw;\n    width: 9vw;\n    border: 4px solid ${() => Theme.EMPHASIS};\n    @media (max-width: ${() => Theme.MOBILE}) {\n      top: 2.7em;\n      left: 0.8em;\n      width: 4em;\n      border: 2px solid ${() => Theme.EMPHASIS};\n    }\n  }\n\n  .show {\n    animation-name: bounce;\n    animation-duration: 0.5s;\n  }\n`;\n\nconst findCursorPoint = (element: HTMLTextAreaElement): number[] => {\n  const cursorPointStart = element?.selectionStart;\n  const cursorPointEnd = element?.selectionEnd;\n  const cursorPosition = [cursorPointStart, cursorPointEnd];\n\n  return cursorPosition;\n};\n\nconst uploadStateInit = { process: 0, error: '' };\n\nfunction MarkDownEditor({ input, setInput }: IPostInputProps): ReactElement {\n  const [imageUrl, setImageUrl] = useState<string>('');\n  const [uploadState, setUploadState] = useState<IUploadState>(uploadStateInit);\n  const infoOfCursorToGo = useRef<[boolean, number[]]>([false, [0, 0]]);\n  const [cursorPosition, setCursorPosition] = useState([0, 0]);\n  const inputAreaElem = useRef<HTMLTextAreaElement>(null);\n  const isUploading = useRef(false);\n\n  isUploading.current = uploadState.process !== 0;\n  useEffect(() => {\n    if (!isUploading.current) return;\n    const currentCursor = cursorPosition[0];\n    const inputInsertedUploading = `${input.slice(0, currentCursor)}![Loading...]()${input.slice(currentCursor)}`;\n    setInput(inputInsertedUploading);\n  }, [isUploading.current]);\n\n  const updateCusorByClick = () => {\n    setCursorPosition(findCursorPoint(inputAreaElem.current as HTMLTextAreaElement));\n  };\n\n  const updateCusorByKeyboard: IOnKeyboardFunc = (event) => {\n    const cursorFinder = setTimeout(\n      () => setCursorPosition(findCursorPoint(inputAreaElem.current as HTMLTextAreaElement)),\n      400,\n    );\n    event.target.addEventListener('keyup', () => clearTimeout(cursorFinder));\n  };\n\n  const writingAreaProps = {\n    input,\n    setInput,\n    updateCusorByClick,\n    updateCusorByKeyboard,\n    inputAreaElem,\n    setImageUrl,\n    setUploadState,\n  };\n\n  const controlInputAndCursor = useCallback(\n    (event) => {\n      const cursorPositionToGo = editInputText({ event, input, setInput, cursorPosition });\n      infoOfCursorToGo.current = [true, cursorPositionToGo];\n      inputAreaElem.current?.focus();\n    },\n    [input, cursorPosition],\n  );\n\n  const insertImageMarkdown = useCallback(() => {\n    const isNotVaildUrl = imageUrl === null || imageUrl === undefined || imageUrl.length === 0;\n    if (uploadState.error) {\n      alert('이미지 업로드 실패');\n      const previousInput = `${input.slice(0, cursorPosition[0])}${input.slice(cursorPosition[0] + 15)}`;\n      setInput(previousInput);\n      setImageUrl('');\n      setUploadState(uploadStateInit);\n      return;\n    }\n    if (isNotVaildUrl) return;\n    const inputWithNewImg = `${input.slice(0, cursorPosition[0])}\\n![](${imageUrl})\\n${input.slice(\n      cursorPosition[0] + 15,\n    )}`;\n    setInput(inputWithNewImg);\n    setImageUrl('');\n  }, [imageUrl, uploadState]);\n\n  const moveCursorAfterEdit = useCallback(() => {\n    const didClickedEditButton = infoOfCursorToGo.current[0];\n    if (!didClickedEditButton) return;\n    const cursorPositionToGo = infoOfCursorToGo.current[1];\n    const [startPosition, endPosition] = cursorPositionToGo as number[];\n\n    inputAreaElem.current?.focus();\n    inputAreaElem.current?.setSelectionRange(startPosition, endPosition);\n    infoOfCursorToGo.current = [false, [0, 0]];\n    setCursorPosition(findCursorPoint(inputAreaElem.current as HTMLTextAreaElement));\n  }, [input]);\n\n  useEffect(() => {\n    moveCursorAfterEdit();\n  }, [input]);\n\n  useEffect(() => {\n    insertImageMarkdown();\n  }, [imageUrl, uploadState]);\n\n  return (\n    <EditorAreaWrapper process={isUploading.current ? uploadState.process : 0}>\n      <ProcessBar isUploading={isUploading.current} uploadState={uploadState} />\n      <PostTitleInput />\n      <hr />\n      <EditorTagArea />\n      <EditButtonBox\n        onClick={controlInputAndCursor}\n        tableProps={{ input, setInput, cursorPosition }}\n        setImageUrl={setImageUrl}\n        setUploadState={setUploadState}\n      />\n      <WritingArea className=\"textInput\" writingAreaProps={writingAreaProps} />\n    </EditorAreaWrapper>\n  );\n}\n\nexport default MarkDownEditor;\n"]},"metadata":{},"sourceType":"module"}