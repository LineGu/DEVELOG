{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/atoms/TableModal/TableModal.tsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nconst StyledModal = styled.div.withConfig({\n  displayName: \"TableModal__StyledModal\",\n  componentId: \"sc-17zwdtm-0\"\n})([\"display:flex;flex-direction:column;pointer-events:visibleFill;position:absolute;margin:0;padding:5px 15px 10px 15px;border-radius:0.2em;& > span{color:\", \";margin-bottom:10px;}& > div{display:flex;}background-color:\", \";\"], () => Theme.HEADER_BACK, () => Theme.MODAL_EDIT);\nconst StyledBlock = styled.div.withConfig({\n  displayName: \"TableModal__StyledBlock\",\n  componentId: \"sc-17zwdtm-1\"\n})([\"pointer-events:visibleFill;width:20px;height:20px;border:1px solid \", \";background-color:\", \";margin:2px;padding:0;\"], () => Theme.HEADER_BACK, ({\n  colorProps\n}) => colorProps);\n\nfunction TableModal({\n  className\n}) {\n  const {\n    0: check,\n    1: setCheck\n  } = useState([-1, -1]);\n  const rowCount = new Array(10).fill(0);\n  const columnCount = new Array(8).fill(0);\n\n  const changeCheckPoint = event => {\n    const newCheckStr = event.currentTarget.id.split(',');\n    const newCheck = [parseInt(newCheckStr[0], 10), parseInt(newCheckStr[1], 10)];\n    setCheck(newCheck);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledModal, {\n    className: className,\n    onMouseLeave: () => setCheck([-1, -1]),\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: check === [-1, -1] ? '표 삽입' : `${check[0]} X ${check[1]} 표`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), columnCount.map((__, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: rowCount.map((__, subIndex) => /*#__PURE__*/_jsxDEV(StyledBlock, {\n          id: `${subIndex},${index}`,\n          onMouseOver: changeCheckPoint,\n          colorProps: check[0] >= subIndex && check[1] >= index ? Theme.HEADER_BACK : Theme.MODAL_EDIT\n        }, index * 10 + subIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\nexport default TableModal;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/atoms/TableModal/TableModal.tsx"],"names":["React","useState","styled","Theme","StyledModal","div","HEADER_BACK","MODAL_EDIT","StyledBlock","colorProps","TableModal","className","check","setCheck","rowCount","Array","fill","columnCount","changeCheckPoint","event","newCheckStr","currentTarget","id","split","newCheck","parseInt","map","__","index","subIndex"],"mappings":";;AACA,OAAOA,KAAP,IAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAGA,MAAMC,WAAW,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,qOASJ,MAAMF,KAAK,CAACG,WATR,EAeK,MAAMH,KAAK,CAACI,UAfjB,CAAjB;AAkBA,MAAMC,WAAW,GAAGN,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,4HAIK,MAAMF,KAAK,CAACG,WAJjB,EAKK,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAAoBA,UALzB,CAAjB;;AAUA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAkE;AAChE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,CAAW,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAX,CAAlC;AACA,QAAMa,QAAQ,GAAG,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,CAAnB,CAAjB;AACA,QAAMC,WAAW,GAAG,IAAIF,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,CAAlB,CAApB;;AAEA,QAAME,gBAAiC,GAAIC,KAAD,IAAW;AACnD,UAAMC,WAAqB,GAAGD,KAAK,CAACE,aAAN,CAAoBC,EAApB,CAAuBC,KAAvB,CAA6B,GAA7B,CAA9B;AACA,UAAMC,QAAQ,GAAG,CAACC,QAAQ,CAACL,WAAW,CAAC,CAAD,CAAZ,EAAiB,EAAjB,CAAT,EAA+BK,QAAQ,CAACL,WAAW,CAAC,CAAD,CAAZ,EAAiB,EAAjB,CAAvC,CAAjB;AACAP,IAAAA,QAAQ,CAACW,QAAD,CAAR;AACD,GAJD;;AAMA,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAEb,SAAxB;AAAmC,IAAA,YAAY,EAAE,MAAME,QAAQ,CAAC,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAD,CAA/D;AAAA,4BACE;AAAA,gBAAOD,KAAK,KAAK,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAV,GAAqB,MAArB,GAA+B,GAAEA,KAAK,CAAC,CAAD,CAAI,MAAKA,KAAK,CAAC,CAAD,CAAI;AAA/D;AAAA;AAAA;AAAA;AAAA,YADF,EAEGK,WAAW,CAACS,GAAZ,CAAgB,CAACC,EAAD,EAAKC,KAAL,KAAe;AAC9B,0BACE;AAAA,kBACGd,QAAQ,CAACY,GAAT,CAAa,CAACC,EAAD,EAAKE,QAAL,kBACZ,QAAC,WAAD;AAEE,UAAA,EAAE,EAAG,GAAEA,QAAS,IAAGD,KAAM,EAF3B;AAGE,UAAA,WAAW,EAAEV,gBAHf;AAIE,UAAA,UAAU,EAAEN,KAAK,CAAC,CAAD,CAAL,IAAYiB,QAAZ,IAAwBjB,KAAK,CAAC,CAAD,CAAL,IAAYgB,KAApC,GAA4CzB,KAAK,CAACG,WAAlD,GAAgEH,KAAK,CAACI;AAJpF,WACOqB,KAAK,GAAG,EAAR,GAAaC,QADpB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH,SAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAbA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;AAED,eAAelB,UAAf","sourcesContent":["import { IComponentProps } from '@interfaces';\nimport React, { ReactElement, useState } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport { IOnHoverDivFunc } from '@eventInterfaces';\n\nconst StyledModal = styled.div`\n  display: flex;\n  flex-direction: column;\n  pointer-events: visibleFill;\n  position: absolute;\n  margin: 0;\n  padding: 5px 15px 10px 15px;\n  border-radius: 0.2em;\n  & > span {\n    color: ${() => Theme.HEADER_BACK};\n    margin-bottom: 10px;\n  }\n  & > div {\n    display: flex;\n  }\n  background-color: ${() => Theme.MODAL_EDIT};\n`;\n\nconst StyledBlock = styled.div<{ colorProps: string }>`\n  pointer-events: visibleFill;\n  width: 20px;\n  height: 20px;\n  border: 1px solid ${() => Theme.HEADER_BACK};\n  background-color: ${({ colorProps }) => colorProps};\n  margin: 2px;\n  padding: 0;\n`;\n\nfunction TableModal({ className }: IComponentProps): ReactElement {\n  const [check, setCheck] = useState<number[]>([-1, -1]);\n  const rowCount = new Array(10).fill(0);\n  const columnCount = new Array(8).fill(0);\n\n  const changeCheckPoint: IOnHoverDivFunc = (event) => {\n    const newCheckStr: string[] = event.currentTarget.id.split(',');\n    const newCheck = [parseInt(newCheckStr[0], 10), parseInt(newCheckStr[1], 10)];\n    setCheck(newCheck);\n  };\n\n  return (\n    <StyledModal className={className} onMouseLeave={() => setCheck([-1, -1])}>\n      <span>{check === [-1, -1] ? '표 삽입' : `${check[0]} X ${check[1]} 표`}</span>\n      {columnCount.map((__, index) => {\n        return (\n          <div key={index}>\n            {rowCount.map((__, subIndex) => (\n              <StyledBlock\n                key={index * 10 + subIndex}\n                id={`${subIndex},${index}`}\n                onMouseOver={changeCheckPoint}\n                colorProps={check[0] >= subIndex && check[1] >= index ? Theme.HEADER_BACK : Theme.MODAL_EDIT}\n              />\n            ))}\n          </div>\n        );\n      })}\n    </StyledModal>\n  );\n}\n\nexport default TableModal;\n"]},"metadata":{},"sourceType":"module"}