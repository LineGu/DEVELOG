{"ast":null,"code":"var editInputText = function editInputText(event) {\n  var iconClicked = event.currentTarget.className.baseVal;\n  var positionToInsert = findFrontOfLine(input, cursorPosition);\n  var insertText = '';\n\n  switch (iconClicked) {\n    case 'h1':\n      insertText = '# ';\n      break;\n\n    case 'h2':\n      insertText = '## ';\n      break;\n\n    case 'h3':\n      insertText = '### ';\n      break;\n\n    case 'bold':\n      insertText = '**텍스트**';\n      break;\n\n    case 'italic':\n      insertText = '_텍스트_';\n      break;\n\n    case 'link':\n      insertText = '[링크텍스트](링크)';\n      break;\n\n    case 'quote':\n      insertText = '> ';\n      break;\n\n    default:\n      break;\n  }\n\n  var newInput = input.slice(0, positionToInsert) + insertText + input.slice(positionToInsert);\n  setInput(newInput);\n};\n\nexport default editInputText;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/editInputText.ts"],"names":["editInputText","event","iconClicked","currentTarget","className","baseVal","positionToInsert","findFrontOfLine","input","cursorPosition","insertText","newInput","slice","setInput"],"mappings":"AAAA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,MAAMC,WAAW,GAAGD,KAAK,CAACE,aAAN,CAAoBC,SAApB,CAA8BC,OAAlD;AACA,MAAMC,gBAAgB,GAAGC,eAAe,CAACC,KAAD,EAAQC,cAAR,CAAxC;AACA,MAAIC,UAAU,GAAG,EAAjB;;AACA,UAAQR,WAAR;AACE,SAAK,IAAL;AACEQ,MAAAA,UAAU,GAAG,IAAb;AACA;;AAEF,SAAK,IAAL;AACEA,MAAAA,UAAU,GAAG,KAAb;AACA;;AAEF,SAAK,IAAL;AACEA,MAAAA,UAAU,GAAG,MAAb;AACA;;AAEF,SAAK,MAAL;AACEA,MAAAA,UAAU,GAAG,SAAb;AACA;;AAEF,SAAK,QAAL;AACEA,MAAAA,UAAU,GAAG,OAAb;AACA;;AAEF,SAAK,MAAL;AACEA,MAAAA,UAAU,GAAG,aAAb;AACA;;AAEF,SAAK,OAAL;AACEA,MAAAA,UAAU,GAAG,IAAb;AACA;;AAEF;AACE;AA9BJ;;AAgCA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAeN,gBAAf,IAAmCI,UAAnC,GAAgDF,KAAK,CAACI,KAAN,CAAYN,gBAAZ,CAAjE;AACAO,EAAAA,QAAQ,CAACF,QAAD,CAAR;AACD,CAtCD;;AAwCA,eAAeX,aAAf","sourcesContent":["const editInputText = (event) => {\n  const iconClicked = event.currentTarget.className.baseVal;\n  const positionToInsert = findFrontOfLine(input, cursorPosition);\n  let insertText = '';\n  switch (iconClicked) {\n    case 'h1':\n      insertText = '# ';\n      break;\n\n    case 'h2':\n      insertText = '## ';\n      break;\n\n    case 'h3':\n      insertText = '### ';\n      break;\n\n    case 'bold':\n      insertText = '**텍스트**';\n      break;\n\n    case 'italic':\n      insertText = '_텍스트_';\n      break;\n\n    case 'link':\n      insertText = '[링크텍스트](링크)';\n      break;\n\n    case 'quote':\n      insertText = '> ';\n      break;\n\n    default:\n      break;\n  }\n  const newInput = input.slice(0, positionToInsert) + insertText + input.slice(positionToInsert);\n  setInput(newInput);\n};\n\nexport default editInputText;\n"]},"metadata":{},"sourceType":"module"}