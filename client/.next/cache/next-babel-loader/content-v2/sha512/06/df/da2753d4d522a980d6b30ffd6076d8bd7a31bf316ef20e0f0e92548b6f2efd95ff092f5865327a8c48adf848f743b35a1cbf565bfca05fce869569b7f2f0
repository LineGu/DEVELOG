{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport axios from 'axios';\nimport { URL } from '@construction/url';\nimport { headerOption } from '@config/headerForImgur';\nimport CurrentInsertion from '../Abstract/CurrentInsertion';\n\nvar ImgEditor = /*#__PURE__*/function (_CurrentInsertion) {\n  _inherits(ImgEditor, _CurrentInsertion);\n\n  var _super = _createSuper(ImgEditor);\n\n  function ImgEditor() {\n    var _this;\n\n    _classCallCheck(this, ImgEditor);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"textToInsert\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxSize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"uploadingState\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"indexToInsert\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"indexToGo\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"indexsToMove\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"setUploadingState\", function (ProgressEvent) {\n      var uploadingProgress = Math.round(ProgressEvent.loaded / ProgressEvent.total * 100);\n      _this.uploadingState = {\n        progress: uploadingProgress,\n        error: ''\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"uploadImg\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n        var isExcessSize, isValidFile, imgData, postConfig, response, imgUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                isExcessSize = file.size > _this.maxSize;\n                isValidFile = file && isExcessSize;\n                if (!isValidFile) _this.uploadingState = {\n                  progress: 0,\n                  error: 'NOT_VAILD_FILE'\n                };\n                imgData = new FormData();\n                imgData.append('image', file);\n                _context.prev = 5;\n                postConfig = {\n                  headers: headerOption,\n                  onUploadProgress: function onUploadProgress(ProgressEvent) {\n                    return _this.setUploadingState(ProgressEvent);\n                  }\n                };\n                _context.next = 9;\n                return axios.post(URL.IMGUR, imgData, postConfig);\n\n              case 9:\n                response = _context.sent;\n                imgUrl = response.data.data.link;\n                _this.uploadingState = {\n                  progress: 0,\n                  error: ''\n                };\n\n                _this.setTextToInsert(imgUrl);\n\n                _context.next = 18;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](5);\n                _this.uploadingState = {\n                  progress: 0,\n                  error: _context.t0\n                };\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[5, 15]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickEditButton\", function (_ref2) {\n      var input = _ref2.input,\n          currentCursorIndex = _ref2.currentCursorIndex,\n          moveCursor = _ref2.moveCursor;\n\n      _this.setIndexToInsert(currentCursorIndex);\n\n      _this.setIndexToGo(currentCursorIndex);\n\n      var updatedText = _this.insertText(input);\n\n      _this.moveCursorAfterEdit(moveCursor);\n\n      return updatedText;\n    });\n\n    _this.textToInsert = '';\n    _this.indexsToMove = [3, 3];\n    _this.maxSize = 5000000;\n    _this.uploadingState = {\n      progress: 0,\n      error: ''\n    };\n    _this.indexToInsert = 0;\n    _this.indexToGo = [0, 0];\n    return _this;\n  }\n\n  _createClass(ImgEditor, [{\n    key: \"setTextToInsert\",\n    value: function setTextToInsert(url) {\n      this.textToInsert = \"\\n![](\".concat(url, \")\\n\");\n    }\n  }]);\n\n  return ImgEditor;\n}(CurrentInsertion);\n\nexport { ImgEditor as default };","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/markdownEditor/Editors/Img.ts"],"names":["axios","URL","headerOption","CurrentInsertion","ImgEditor","ProgressEvent","uploadingProgress","Math","round","loaded","total","uploadingState","progress","error","file","isExcessSize","size","maxSize","isValidFile","imgData","FormData","append","postConfig","headers","onUploadProgress","setUploadingState","post","IMGUR","response","imgUrl","data","link","setTextToInsert","input","currentCursorIndex","moveCursor","setIndexToInsert","setIndexToGo","updatedText","insertText","moveCursorAfterEdit","textToInsert","indexsToMove","indexToInsert","indexToGo","url"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { URL } from '@construction/url';\nimport { headerOption } from '@config/headerForImgur';\nimport { IOnClickEditButton } from '@interfaces';\nimport CurrentInsertion from '../Abstract/CurrentInsertion';\n\nexport default class ImgEditor extends CurrentInsertion {\n  protected textToInsert: string;\n\n  public maxSize: number;\n\n  public uploadingState: { progress: number; error: string };\n\n  protected indexToInsert: number;\n\n  protected indexToGo: number[];\n\n  protected indexsToMove: number[];\n\n  constructor() {\n    super();\n    this.textToInsert = '';\n    this.indexsToMove = [3, 3];\n    this.maxSize = 5000000;\n    this.uploadingState = { progress: 0, error: '' };\n    this.indexToInsert = 0;\n    this.indexToGo = [0, 0];\n  }\n\n  protected setTextToInsert(url: string): void {\n    this.textToInsert = `\\n![](${url})\\n`;\n  }\n\n  public setUploadingState = (ProgressEvent: ProgressEvent): void => {\n    const uploadingProgress = Math.round((ProgressEvent.loaded / ProgressEvent.total) * 100);\n    this.uploadingState = { progress: uploadingProgress, error: '' };\n  };\n\n  public uploadImg = async (file: File): Promise<void> => {\n    const isExcessSize = file.size > this.maxSize;\n    const isValidFile = file && isExcessSize;\n    if (!isValidFile) this.uploadingState = { progress: 0, error: 'NOT_VAILD_FILE' };\n    const imgData = new FormData();\n    imgData.append('image', file);\n\n    try {\n      const postConfig = {\n        headers: headerOption,\n        onUploadProgress: (ProgressEvent: ProgressEvent) => this.setUploadingState(ProgressEvent),\n      };\n\n      const response = await axios.post(URL.IMGUR, imgData, postConfig);\n      const imgUrl = response.data.data.link;\n      this.uploadingState = { progress: 0, error: '' };\n      this.setTextToInsert(imgUrl);\n    } catch (error) {\n      this.uploadingState = { progress: 0, error };\n    }\n  };\n\n  public onClickEditButton = ({ input, currentCursorIndex, moveCursor }: IOnClickEditButton): string => {\n    this.setIndexToInsert(currentCursorIndex);\n    this.setIndexToGo(currentCursorIndex);\n    const updatedText = this.insertText(input);\n    this.moveCursorAfterEdit(moveCursor);\n\n    return updatedText;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}