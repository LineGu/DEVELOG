{"ast":null,"code":"import axios from 'axios';\nimport { headerOption } from '@config/headerForImgur';\nimport { url } from '@construction/url';\n\nconst uploadImg = async (file, setProcess) => {\n  const uploadInfo = {\n    data: '',\n    error: ''\n  };\n  const isExcessSize = file.size > 5000000;\n\n  const getUploadProgress = ProgressEvent => {\n    const progress = Math.round(ProgressEvent.loaded / ProgressEvent.total * 100);\n    setProcess({\n      process: progress,\n      error: ''\n    });\n  };\n\n  if (file && isExcessSize) {\n    uploadInfo.error = 'EXCESS';\n    return uploadInfo;\n  }\n\n  const imgData = new FormData();\n  imgData.append('image', file);\n\n  try {\n    const postConfig = {\n      headers: headerOption,\n      onUploadProgress: ProgressEvent => getUploadProgress(ProgressEvent)\n    };\n    const response = await axios.post(url.IMGUR, imgData, postConfig);\n    const imgLink = response.data.data.link;\n    uploadInfo.data = imgLink;\n    return uploadInfo;\n  } catch (err) {\n    uploadInfo.error = err;\n    return uploadInfo;\n  }\n};\n\nexport default uploadImg;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/uploadImg.ts"],"names":["axios","headerOption","url","uploadImg","file","setProcess","uploadInfo","data","error","isExcessSize","size","getUploadProgress","ProgressEvent","progress","Math","round","loaded","total","process","imgData","FormData","append","postConfig","headers","onUploadProgress","response","post","IMGUR","imgLink","link","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,GAAT,QAAoB,mBAApB;;AAQA,MAAMC,SAAS,GAAG,OAAOC,IAAP,EAAmBC,UAAnB,KAAyE;AACzF,QAAMC,UAAU,GAAG;AACjBC,IAAAA,IAAI,EAAE,EADW;AAEjBC,IAAAA,KAAK,EAAE;AAFU,GAAnB;AAIA,QAAMC,YAAY,GAAGL,IAAI,CAACM,IAAL,GAAY,OAAjC;;AAEA,QAAMC,iBAAiB,GAAIC,aAAD,IAAkC;AAC1D,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAYH,aAAa,CAACI,MAAd,GAAuBJ,aAAa,CAACK,KAAtC,GAA+C,GAA1D,CAAjB;AACAZ,IAAAA,UAAU,CAAC;AAAEa,MAAAA,OAAO,EAAEL,QAAX;AAAqBL,MAAAA,KAAK,EAAE;AAA5B,KAAD,CAAV;AACD,GAHD;;AAKA,MAAIJ,IAAI,IAAIK,YAAZ,EAA0B;AACxBH,IAAAA,UAAU,CAACE,KAAX,GAAmB,QAAnB;AACA,WAAOF,UAAP;AACD;;AAED,QAAMa,OAAO,GAAG,IAAIC,QAAJ,EAAhB;AACAD,EAAAA,OAAO,CAACE,MAAR,CAAe,OAAf,EAAwBjB,IAAxB;;AAEA,MAAI;AACF,UAAMkB,UAAU,GAAG;AACjBC,MAAAA,OAAO,EAAEtB,YADQ;AAEjBuB,MAAAA,gBAAgB,EAAGZ,aAAD,IAAkCD,iBAAiB,CAACC,aAAD;AAFpD,KAAnB;AAKA,UAAMa,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,IAAN,CAAWxB,GAAG,CAACyB,KAAf,EAAsBR,OAAtB,EAA+BG,UAA/B,CAAvB;AACA,UAAMM,OAAO,GAAGH,QAAQ,CAAClB,IAAT,CAAcA,IAAd,CAAmBsB,IAAnC;AACAvB,IAAAA,UAAU,CAACC,IAAX,GAAkBqB,OAAlB;AAEA,WAAOtB,UAAP;AACD,GAXD,CAWE,OAAOwB,GAAP,EAAY;AACZxB,IAAAA,UAAU,CAACE,KAAX,GAAmBsB,GAAnB;AACA,WAAOxB,UAAP;AACD;AACF,CAnCD;;AAqCA,eAAeH,SAAf","sourcesContent":["import axios from 'axios';\nimport { headerOption } from '@config/headerForImgur';\nimport { url } from '@construction/url';\nimport { SetStateProcess } from '@types';\n\ninterface IuploadInfo {\n  data: string;\n  error: string;\n}\n\nconst uploadImg = async (file: File, setProcess: SetStateProcess): Promise<IuploadInfo> => {\n  const uploadInfo = {\n    data: '',\n    error: '',\n  };\n  const isExcessSize = file.size > 5000000;\n\n  const getUploadProgress = (ProgressEvent: ProgressEvent) => {\n    const progress = Math.round((ProgressEvent.loaded / ProgressEvent.total) * 100);\n    setProcess({ process: progress, error: '' });\n  };\n\n  if (file && isExcessSize) {\n    uploadInfo.error = 'EXCESS';\n    return uploadInfo;\n  }\n\n  const imgData = new FormData();\n  imgData.append('image', file);\n\n  try {\n    const postConfig = {\n      headers: headerOption,\n      onUploadProgress: (ProgressEvent: ProgressEvent) => getUploadProgress(ProgressEvent),\n    };\n\n    const response = await axios.post(url.IMGUR, imgData, postConfig);\n    const imgLink = response.data.data.link;\n    uploadInfo.data = imgLink;\n\n    return uploadInfo;\n  } catch (err) {\n    uploadInfo.error = err;\n    return uploadInfo;\n  }\n};\n\nexport default uploadImg;\n"]},"metadata":{},"sourceType":"module"}