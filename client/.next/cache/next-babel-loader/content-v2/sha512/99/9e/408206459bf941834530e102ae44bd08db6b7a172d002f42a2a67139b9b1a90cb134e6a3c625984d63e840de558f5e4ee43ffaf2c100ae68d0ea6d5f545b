{"ast":null,"code":"import _defineProperty from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Theme from '@theme/index';\nvar REPEAT_START_TIMING = 3000;\nvar TEXT_PERIOD = 4000;\nvar MINIMUM_GAP_BOXES = '1%';\nvar MAXIMUM_GAP_BOXES = '100%';\nvar NUM_HIDE_TEXT = '0%';\nvar NUM_SHOW_TEXT = '100%';\n\nvar fadeText = function fadeText(props) {\n  var isMounted = props.isMounted,\n      setMargin = props.setMargin,\n      setOpacity = props.setOpacity,\n      timer = props.timer,\n      method = props.method;\n  var numListToApply = method === 'OUT' ? [MAXIMUM_GAP_BOXES, NUM_HIDE_TEXT] : [MINIMUM_GAP_BOXES, NUM_SHOW_TEXT];\n\n  if (!isMounted) {\n    clearTimeout(timer);\n    return;\n  }\n\n  setMargin(numListToApply[0]);\n  setOpacity(numListToApply[1]);\n};\n\nvar fadeOutTextBox = function fadeOutTextBox(props) {\n  var setTimingText = setTimeout(function () {\n    fadeText(_objectSpread(_objectSpread({}, props), {}, {\n      timer: setTimingText,\n      method: 'OUT'\n    }));\n    var hideText = setInterval(function () {\n      fadeText(_objectSpread(_objectSpread({}, props), {}, {\n        timer: hideText,\n        method: 'OUT'\n      }));\n    }, TEXT_PERIOD);\n  }, REPEAT_START_TIMING);\n};\n\nvar fadeInTextBox = function fadeInTextBox(props) {\n  var timerToShow = setInterval(function () {\n    fadeText(_objectSpread(_objectSpread({}, props), {}, {\n      timer: timerToShow,\n      method: 'IN'\n    }));\n  }, TEXT_PERIOD);\n};\n\nvar changeNextOrder = function changeNextOrder(_ref) {\n  var isMounted = _ref.isMounted,\n      color = _ref.color,\n      textList = _ref.textList,\n      setColor = _ref.setColor,\n      setIntro = _ref.setIntro;\n  var currentListIndex = 1;\n  var newColor = color;\n  var timerToChange = setInterval(function () {\n    if (!isMounted) {\n      clearInterval(timerToChange);\n      return;\n    }\n\n    newColor = newColor === Theme.BLACK ? Theme.POINT : Theme.BLACK;\n    setColor(newColor);\n    setIntro(textList[currentListIndex]);\n    currentListIndex += 1;\n    var isOverList = currentListIndex > textList.length - 1;\n    currentListIndex = isOverList ? 0 : currentListIndex;\n  }, TEXT_PERIOD);\n};\n\nvar animateIntroduceText = function animateIntroduceText(props) {\n  var textList = props.textList,\n      isMounted = props.isMounted,\n      color = props.color,\n      setMargin = props.setMargin,\n      setColor = props.setColor,\n      setOpacity = props.setOpacity,\n      setIntro = props.setIntro;\n  setMargin(MINIMUM_GAP_BOXES);\n  fadeOutTextBox({\n    isMounted: isMounted,\n    setMargin: setMargin,\n    setOpacity: setOpacity\n  });\n  fadeInTextBox({\n    isMounted: isMounted,\n    setMargin: setMargin,\n    setOpacity: setOpacity\n  });\n  changeNextOrder({\n    isMounted: isMounted,\n    color: color,\n    textList: textList,\n    setColor: setColor,\n    setIntro: setIntro\n  });\n};\n\nexport default animateIntroduceText;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/animateText.ts"],"names":["Theme","REPEAT_START_TIMING","TEXT_PERIOD","MINIMUM_GAP_BOXES","MAXIMUM_GAP_BOXES","NUM_HIDE_TEXT","NUM_SHOW_TEXT","fadeText","props","isMounted","setMargin","setOpacity","timer","method","numListToApply","clearTimeout","fadeOutTextBox","setTimingText","setTimeout","hideText","setInterval","fadeInTextBox","timerToShow","changeNextOrder","color","textList","setColor","setIntro","currentListIndex","newColor","timerToChange","clearInterval","BLACK","POINT","isOverList","length","animateIntroduceText"],"mappings":"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","sourcesContent":["import { Dispatch, SetStateAction } from 'react';\nimport { IColorProps } from '@interfaces';\nimport Theme from '@theme/index';\nimport { type } from 'os';\n\ninterface IFadeInOutProps {\n  isMounted: boolean;\n  setMargin: Dispatch<SetStateAction<string>>;\n  setOpacity: Dispatch<SetStateAction<string>>;\n}\n\ninterface IFadeProps extends IFadeInOutProps {\n  timer: NodeJS.Timeout;\n  method: string;\n}\n\ninterface IChangeOrderProps extends IColorProps {\n  isMounted: boolean;\n  textList: string[];\n  setColor: Dispatch<SetStateAction<string>>;\n  setIntro: Dispatch<SetStateAction<string>>;\n}\ninterface IFadeFunc {\n  (props: IFadeProps): void;\n}\n\ninterface IFadeInOutFunc {\n  (props: IFadeInOutProps): void;\n}\n\ninterface IChangeOrderFunc {\n  (props: IChangeOrderProps): void;\n}\n\ninterface IAnimateTextFunc {\n  (props: IFadeInOutProps & IChangeOrderProps): void;\n}\n\nconst REPEAT_START_TIMING = 3000;\nconst TEXT_PERIOD = 4000;\nconst MINIMUM_GAP_BOXES = '1%';\nconst MAXIMUM_GAP_BOXES = '100%';\nconst NUM_HIDE_TEXT = '0%';\nconst NUM_SHOW_TEXT = '100%';\n\nconst fadeText: IFadeFunc = (props) => {\n  const { isMounted, setMargin, setOpacity, timer, method } = props;\n  const numListToApply = method === 'OUT' ? [MAXIMUM_GAP_BOXES, NUM_HIDE_TEXT] : [MINIMUM_GAP_BOXES, NUM_SHOW_TEXT];\n  if (!isMounted) {\n    clearTimeout(timer);\n    return;\n  }\n  setMargin(numListToApply[0]);\n  setOpacity(numListToApply[1]);\n};\n\nconst fadeOutTextBox: IFadeInOutFunc = (props) => {\n  const setTimingText = setTimeout(() => {\n    fadeText({ ...props, timer: setTimingText, method: 'OUT' });\n    const hideText = setInterval(() => {\n      fadeText({ ...props, timer: hideText, method: 'OUT' });\n    }, TEXT_PERIOD);\n  }, REPEAT_START_TIMING);\n};\n\nconst fadeInTextBox: IFadeInOutFunc = (props) => {\n  const timerToShow = setInterval(() => {\n    fadeText({ ...props, timer: timerToShow, method: 'IN' });\n  }, TEXT_PERIOD);\n};\n\nconst changeNextOrder: IChangeOrderFunc = ({ isMounted, color, textList, setColor, setIntro }) => {\n  let currentListIndex = 1;\n  let newColor = color;\n  const timerToChange = setInterval(() => {\n    if (!isMounted) {\n      clearInterval(timerToChange);\n      return;\n    }\n    newColor = newColor === Theme.BLACK ? Theme.POINT : Theme.BLACK;\n    setColor(newColor);\n    setIntro(textList[currentListIndex]);\n    currentListIndex += 1;\n    const isOverList = currentListIndex > textList.length - 1;\n    currentListIndex = isOverList ? 0 : currentListIndex;\n  }, TEXT_PERIOD);\n};\n\nconst animateIntroduceText: IAnimateTextFunc = (props) => {\n  const { textList, isMounted, color, setMargin, setColor, setOpacity, setIntro } = props;\n  setMargin(MINIMUM_GAP_BOXES);\n\n  fadeOutTextBox({ isMounted, setMargin, setOpacity });\n  fadeInTextBox({ isMounted, setMargin, setOpacity });\n  changeNextOrder({ isMounted, color, textList, setColor, setIntro });\n};\n\nexport default animateIntroduceText;\n"]},"metadata":{},"sourceType":"module"}