{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/MarkdownEditor/MarkdownEditor.tsx\";\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport WritingArea from '@organisms/Editor/WritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport EditorTagArea from '@organisms/Editor/TagArea/index';\nimport EditButtonBox from '@organisms/Editor/ButtonBox/index';\nimport editInputText from '@utils/editInputText';\nimport ProcessBar from '@molecules/ProcessBar';\nimport useCursorPoint from '@hook/useCursorPoint';\nconst EditorAreaWrapper = styled.div.withConfig({\n  displayName: \"MarkdownEditor__EditorAreaWrapper\",\n  componentId: \"sc-13p7271-0\"\n})([\"width:50%;height:100vh;@media (max-width:\", \"){width:100%;}@media (max-width:\", \"){width:100%;}& > hr:not(processBar){position:absolute;top:13vh;left:3vw;width:9vw;border:4px solid \", \";@media (max-width:\", \"){top:2.7em;left:0.8em;width:4em;border:2px solid \", \";}}.show{animation-name:bounce;animation-duration:0.5s;}\"], () => Theme.MOBILE, () => Theme.PC, () => Theme.EMPHASIS, () => Theme.MOBILE, () => Theme.EMPHASIS);\n\nconst findCursorPoint = element => {\n  const cursorPointStart = element === null || element === void 0 ? void 0 : element.selectionStart;\n  const cursorPointEnd = element === null || element === void 0 ? void 0 : element.selectionEnd;\n  const cursorPosition = [cursorPointStart, cursorPointEnd];\n  return cursorPosition;\n};\n\nconst uploadStateInit = {\n  process: 0,\n  error: ''\n};\n\nfunction MarkDownEditor({\n  input,\n  setInput\n}) {\n  const {\n    0: imageUrl,\n    1: setImageUrl\n  } = useState('');\n  const {\n    0: uploadState,\n    1: setUploadState\n  } = useState(uploadStateInit);\n  const isUploading = useRef(false);\n  const inputAreaElem = useRef(null);\n  const {\n    cursorPosition,\n    setCursorPosition,\n    infoOfCursorToGo,\n    updateCusorPoint,\n    moveCursor\n  } = useCursorPoint(inputAreaElem.current);\n  isUploading.current = uploadState.process !== 0;\n  useEffect(() => {\n    if (!isUploading.current) return;\n    const currentCursor = cursorPosition[0];\n    const inputInsertedUploading = `${input.slice(0, currentCursor)}![Loading...]()${input.slice(currentCursor)}`;\n    setInput(inputInsertedUploading);\n  }, [isUploading.current]);\n  const writingAreaProps = {\n    input,\n    setInput,\n    inputAreaElem,\n    setImageUrl,\n    setUploadState\n  };\n  const controlInputAndCursor = useCallback(event => {\n    const cursorPositionToGo = editInputText({\n      event,\n      input,\n      setInput,\n      cursorPosition\n    });\n    moveCursor(cursorPositionToGo);\n  }, [input, cursorPosition]);\n  const insertImageMarkdown = useCallback(() => {\n    const isNotVaildUrl = imageUrl === null || imageUrl === undefined || imageUrl.length === 0;\n\n    if (uploadState.error) {\n      alert('이미지 업로드 실패');\n      const previousInput = `${input.slice(0, cursorPosition[0])}${input.slice(cursorPosition[0] + 15)}`;\n      setInput(previousInput);\n      setImageUrl('');\n      setUploadState(uploadStateInit);\n      return;\n    }\n\n    if (isNotVaildUrl) return;\n    const inputWithNewImg = `${input.slice(0, cursorPosition[0])}\\n![](${imageUrl})\\n${input.slice(cursorPosition[0] + 15)}`;\n    setInput(inputWithNewImg);\n    setImageUrl('');\n  }, [imageUrl, uploadState]);\n  const moveCursorAfterEdit = useCallback(() => {\n    var _inputAreaElem$curren, _inputAreaElem$curren2;\n\n    const didClickedEditButton = infoOfCursorToGo.current[0];\n    if (!didClickedEditButton) return;\n    const cursorPositionToGo = infoOfCursorToGo.current[1];\n    const [startPosition, endPosition] = cursorPositionToGo;\n    (_inputAreaElem$curren = inputAreaElem.current) === null || _inputAreaElem$curren === void 0 ? void 0 : _inputAreaElem$curren.focus();\n    (_inputAreaElem$curren2 = inputAreaElem.current) === null || _inputAreaElem$curren2 === void 0 ? void 0 : _inputAreaElem$curren2.setSelectionRange(startPosition, endPosition);\n    infoOfCursorToGo.current = [false, [0, 0]];\n    setCursorPosition(findCursorPoint(inputAreaElem.current));\n  }, [input]);\n  useEffect(() => {\n    moveCursorAfterEdit();\n  }, [input]);\n  useEffect(() => {\n    insertImageMarkdown();\n  }, [imageUrl, uploadState]);\n  return /*#__PURE__*/_jsxDEV(EditorAreaWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ProcessBar, {\n      isUploading: isUploading.current,\n      uploadState: uploadState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostTitleInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditorTagArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditButtonBox, {\n      onClick: controlInputAndCursor,\n      tableProps: {\n        input,\n        setInput,\n        cursorPosition\n      },\n      setImageUrl: setImageUrl,\n      setUploadState: setUploadState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WritingArea, {\n      className: \"textInput\",\n      writingAreaProps: writingAreaProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MarkDownEditor;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/MarkdownEditor/MarkdownEditor.tsx"],"names":["React","useCallback","useState","useEffect","useRef","styled","Theme","WritingArea","PostTitleInput","EditorTagArea","EditButtonBox","editInputText","ProcessBar","useCursorPoint","EditorAreaWrapper","div","MOBILE","PC","EMPHASIS","findCursorPoint","element","cursorPointStart","selectionStart","cursorPointEnd","selectionEnd","cursorPosition","uploadStateInit","process","error","MarkDownEditor","input","setInput","imageUrl","setImageUrl","uploadState","setUploadState","isUploading","inputAreaElem","setCursorPosition","infoOfCursorToGo","updateCusorPoint","moveCursor","current","currentCursor","inputInsertedUploading","slice","writingAreaProps","controlInputAndCursor","event","cursorPositionToGo","insertImageMarkdown","isNotVaildUrl","undefined","length","alert","previousInput","inputWithNewImg","moveCursorAfterEdit","didClickedEditButton","startPosition","endPosition","focus","setSelectionRange"],"mappings":"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","sourcesContent":["import React, { ReactElement, useCallback, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport WritingArea from '@organisms/Editor/WritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport EditorTagArea from '@organisms/Editor/TagArea/index';\nimport EditButtonBox from '@organisms/Editor/ButtonBox/index';\nimport editInputText from '@utils/editInputText';\nimport { IPostInputProps, IUploadState } from '@interfaces';\nimport { IOnKeyboardFunc } from '@eventInterfaces';\nimport ProcessBar from '@molecules/ProcessBar';\nimport useCursorPoint from '@hook/useCursorPoint';\n\nconst EditorAreaWrapper = styled.div`\n  width: 50%;\n  height: 100vh;\n  @media (max-width: ${() => Theme.MOBILE}) {\n    width: 100%;\n  }\n\n  @media (max-width: ${() => Theme.PC}) {\n    width: 100%;\n  }\n\n  & > hr:not(processBar) {\n    position: absolute;\n    top: 13vh;\n    left: 3vw;\n    width: 9vw;\n    border: 4px solid ${() => Theme.EMPHASIS};\n    @media (max-width: ${() => Theme.MOBILE}) {\n      top: 2.7em;\n      left: 0.8em;\n      width: 4em;\n      border: 2px solid ${() => Theme.EMPHASIS};\n    }\n  }\n\n  .show {\n    animation-name: bounce;\n    animation-duration: 0.5s;\n  }\n`;\n\nconst findCursorPoint = (element: HTMLTextAreaElement): number[] => {\n  const cursorPointStart = element?.selectionStart;\n  const cursorPointEnd = element?.selectionEnd;\n  const cursorPosition = [cursorPointStart, cursorPointEnd];\n\n  return cursorPosition;\n};\n\nconst uploadStateInit = { process: 0, error: '' };\n\nfunction MarkDownEditor({ input, setInput }: IPostInputProps): ReactElement {\n  const [imageUrl, setImageUrl] = useState<string>('');\n  const [uploadState, setUploadState] = useState<IUploadState>(uploadStateInit);\n  const isUploading = useRef(false);\n\n  const inputAreaElem = useRef<HTMLTextAreaElement>(null);\n  const { cursorPosition, setCursorPosition, infoOfCursorToGo, updateCusorPoint, moveCursor } = useCursorPoint(\n    inputAreaElem.current,\n  );\n\n  isUploading.current = uploadState.process !== 0;\n  useEffect(() => {\n    if (!isUploading.current) return;\n    const currentCursor = cursorPosition[0];\n    const inputInsertedUploading = `${input.slice(0, currentCursor)}![Loading...]()${input.slice(currentCursor)}`;\n    setInput(inputInsertedUploading);\n  }, [isUploading.current]);\n\n  const writingAreaProps = {\n    input,\n    setInput,\n    inputAreaElem,\n    setImageUrl,\n    setUploadState,\n  };\n\n  const controlInputAndCursor = useCallback(\n    (event) => {\n      const cursorPositionToGo = editInputText({ event, input, setInput, cursorPosition });\n      moveCursor(cursorPositionToGo);\n    },\n    [input, cursorPosition],\n  );\n\n  const insertImageMarkdown = useCallback(() => {\n    const isNotVaildUrl = imageUrl === null || imageUrl === undefined || imageUrl.length === 0;\n    if (uploadState.error) {\n      alert('이미지 업로드 실패');\n      const previousInput = `${input.slice(0, cursorPosition[0])}${input.slice(cursorPosition[0] + 15)}`;\n      setInput(previousInput);\n      setImageUrl('');\n      setUploadState(uploadStateInit);\n      return;\n    }\n    if (isNotVaildUrl) return;\n    const inputWithNewImg = `${input.slice(0, cursorPosition[0])}\\n![](${imageUrl})\\n${input.slice(\n      cursorPosition[0] + 15,\n    )}`;\n    setInput(inputWithNewImg);\n    setImageUrl('');\n  }, [imageUrl, uploadState]);\n\n  const moveCursorAfterEdit = useCallback(() => {\n    const didClickedEditButton = infoOfCursorToGo.current[0];\n    if (!didClickedEditButton) return;\n    const cursorPositionToGo = infoOfCursorToGo.current[1];\n    const [startPosition, endPosition] = cursorPositionToGo as number[];\n\n    inputAreaElem.current?.focus();\n    inputAreaElem.current?.setSelectionRange(startPosition, endPosition);\n    infoOfCursorToGo.current = [false, [0, 0]];\n    setCursorPosition(findCursorPoint(inputAreaElem.current as HTMLTextAreaElement));\n  }, [input]);\n\n  useEffect(() => {\n    moveCursorAfterEdit();\n  }, [input]);\n\n  useEffect(() => {\n    insertImageMarkdown();\n  }, [imageUrl, uploadState]);\n\n  return (\n    <EditorAreaWrapper>\n      <ProcessBar isUploading={isUploading.current} uploadState={uploadState} />\n      <PostTitleInput />\n      <hr />\n      <EditorTagArea />\n      <EditButtonBox\n        onClick={controlInputAndCursor}\n        tableProps={{ input, setInput, cursorPosition }}\n        setImageUrl={setImageUrl}\n        setUploadState={setUploadState}\n      />\n      <WritingArea className=\"textInput\" writingAreaProps={writingAreaProps} />\n    </EditorAreaWrapper>\n  );\n}\n\nexport default MarkDownEditor;\n"]},"metadata":{},"sourceType":"module"}