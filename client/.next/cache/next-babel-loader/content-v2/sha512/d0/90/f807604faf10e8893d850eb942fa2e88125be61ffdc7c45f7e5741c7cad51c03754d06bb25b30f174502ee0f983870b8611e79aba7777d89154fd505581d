{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/write/Editor/WritingArea/EditorWritingArea.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Theme from 'src/constants/Theme';\nimport getImgByDrag from '@utils/markdown/getImgByDrag';\nimport TextInput from 'src/components/write/TextInput';\nimport MESSAGE from '@constants/message';\nimport { Editors } from '@utils/markdown/markdownEditor/index';\nconst StyledMarkdownArea = styled(TextInput).withConfig({\n  displayName: \"EditorWritingArea__StyledMarkdownArea\",\n  componentId: \"sc-1m5mfjl-0\"\n})([\"width:93%;height:64vh;padding-left:3vw;background-color:\", \";color:\", \";font-size:1.5rem;@media (max-width:\", \"){width:100%;border:none;}&::selection{background-color:\", \";}@media (max-width:\", \"){width:91%;height:65vh;padding:1.2em 0 0 1.2em;font-size:1rem;}\"], () => Theme.HEADER_BACK, () => Theme.INTRO, () => Theme.TABLET, () => Theme.TEXT_SELECT, () => Theme.MOBILE);\n\nfunction EditorWritingArea({\n  editButtonProps: props,\n  className\n}) {\n  const {\n    input,\n    setInput,\n    inputAreaElem,\n    setUploadState\n  } = props;\n  const imgEditor = Editors.img;\n  const {\n    uploadImg\n  } = Editors.img;\n\n  const uploadImgByDrag = async event => {\n    const imgFile = getImgByDrag(event);\n    const timer = setInterval(() => {\n      setUploadState(imgEditor.uploadingState);\n    }, 10);\n    await uploadImg(imgFile); // updateByEditButton();\n\n    setUploadState(imgEditor.uploadingState);\n    clearInterval(timer);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledMarkdownArea, {\n    className: className,\n    placeholder: MESSAGE.POST_PLACEHOLDER,\n    state: input,\n    setState: setInput,\n    refElem: inputAreaElem,\n    onDrop: uploadImgByDrag\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\nexport default EditorWritingArea;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/write/Editor/WritingArea/EditorWritingArea.tsx"],"names":["React","styled","Theme","getImgByDrag","TextInput","MESSAGE","Editors","StyledMarkdownArea","HEADER_BACK","INTRO","TABLET","TEXT_SELECT","MOBILE","EditorWritingArea","editButtonProps","props","className","input","setInput","inputAreaElem","setUploadState","imgEditor","img","uploadImg","uploadImgByDrag","event","imgFile","timer","setInterval","uploadingState","clearInterval","POST_PLACEHOLDER"],"mappings":";;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,OAAT,QAAwB,sCAAxB;AAEA,MAAMC,kBAAkB,GAAGN,MAAM,CAACG,SAAD,CAAT;AAAA;AAAA;AAAA,4QAIF,MAAMF,KAAK,CAACM,WAJV,EAKb,MAAMN,KAAK,CAACO,KALC,EAOD,MAAMP,KAAK,CAACQ,MAPX,EAaA,MAAMR,KAAK,CAACS,WAbZ,EAeD,MAAMT,KAAK,CAACU,MAfX,CAAxB;;AAuBA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA,eAAe,EAAEC,KAAnB;AAA0BC,EAAAA;AAA1B,CAA3B,EAAqG;AACnG,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,aAAnB;AAAkCC,IAAAA;AAAlC,MAAqDL,KAA3D;AACA,QAAMM,SAAS,GAAGf,OAAO,CAACgB,GAA1B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBjB,OAAO,CAACgB,GAA9B;;AAEA,QAAME,eAAiC,GAAG,MAAOC,KAAP,IAAiB;AACzD,UAAMC,OAAO,GAAGvB,YAAY,CAACsB,KAAD,CAA5B;AACA,UAAME,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9BR,MAAAA,cAAc,CAACC,SAAS,CAACQ,cAAX,CAAd;AACD,KAFwB,EAEtB,EAFsB,CAAzB;AAGA,UAAMN,SAAS,CAACG,OAAD,CAAf,CALyD,CAMzD;;AACAN,IAAAA,cAAc,CAACC,SAAS,CAACQ,cAAX,CAAd;AACAC,IAAAA,aAAa,CAACH,KAAD,CAAb;AACD,GATD;;AAWA,sBACE,QAAC,kBAAD;AACE,IAAA,SAAS,EAAEX,SADb;AAEE,IAAA,WAAW,EAAEX,OAAO,CAAC0B,gBAFvB;AAGE,IAAA,KAAK,EAAEd,KAHT;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAKE,IAAA,OAAO,EAAEC,aALX;AAME,IAAA,MAAM,EAAEK;AANV;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;AAED,eAAeX,iBAAf","sourcesContent":["import React, { ReactElement } from 'react';\nimport styled from 'styled-components';\nimport Theme from 'src/constants/Theme';\nimport { IEditComponentProps, IOnDragEventFunc } from '@types';\nimport getImgByDrag from '@utils/markdown/getImgByDrag';\nimport TextInput from 'src/components/write/TextInput';\nimport MESSAGE from '@constants/message';\nimport { Editors } from '@utils/markdown/markdownEditor/index';\n\nconst StyledMarkdownArea = styled(TextInput)`\n  width: 93%;\n  height: 64vh;\n  padding-left: 3vw;\n  background-color: ${() => Theme.HEADER_BACK};\n  color: ${() => Theme.INTRO};\n  font-size: 1.5rem;\n  @media (max-width: ${() => Theme.TABLET}) {\n    width: 100%;\n    border: none;\n  }\n\n  &::selection {\n    background-color: ${() => Theme.TEXT_SELECT};\n  }\n  @media (max-width: ${() => Theme.MOBILE}) {\n    width: 91%;\n    height: 65vh;\n    padding: 1.2em 0 0 1.2em;\n    font-size: 1rem;\n  }\n`;\n\nfunction EditorWritingArea({ editButtonProps: props, className }: IEditComponentProps): ReactElement {\n  const { input, setInput, inputAreaElem, setUploadState } = props;\n  const imgEditor = Editors.img;\n  const { uploadImg } = Editors.img;\n\n  const uploadImgByDrag: IOnDragEventFunc = async (event) => {\n    const imgFile = getImgByDrag(event);\n    const timer = setInterval(() => {\n      setUploadState(imgEditor.uploadingState);\n    }, 10);\n    await uploadImg(imgFile);\n    // updateByEditButton();\n    setUploadState(imgEditor.uploadingState);\n    clearInterval(timer);\n  };\n\n  return (\n    <StyledMarkdownArea\n      className={className}\n      placeholder={MESSAGE.POST_PLACEHOLDER}\n      state={input}\n      setState={setInput}\n      refElem={inputAreaElem}\n      onDrop={uploadImgByDrag}\n    />\n  );\n}\n\nexport default EditorWritingArea;\n"]},"metadata":{},"sourceType":"module"}