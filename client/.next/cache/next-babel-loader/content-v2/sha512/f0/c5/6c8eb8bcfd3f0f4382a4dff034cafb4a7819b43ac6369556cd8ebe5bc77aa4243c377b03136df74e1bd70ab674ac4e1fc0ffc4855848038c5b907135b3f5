{"ast":null,"code":"import _slicedToArray from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Editor from './Editor';\n\nvar FrontInsertEditor = /*#__PURE__*/function (_Editor) {\n  _inherits(FrontInsertEditor, _Editor);\n\n  var _super = _createSuper(FrontInsertEditor);\n\n  function FrontInsertEditor(editType) {\n    var _this;\n\n    _classCallCheck(this, FrontInsertEditor);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"insertionText\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"editInput\", function (input, cursorPosition) {\n      var _this$findSideEdges = _this.findSideEdges(input, cursorPosition),\n          _this$findSideEdges2 = _slicedToArray(_this$findSideEdges, 2),\n          frontEdge = _this$findSideEdges2[0],\n          backEdge = _this$findSideEdges2[1];\n\n      var updatedText = _this.insertText(_this.insertionText, input, frontEdge);\n\n      var pointToGo = backEdge + _this.insertionText.length - 1;\n      var cursorToGo = [pointToGo, pointToGo];\n      return {\n        updatedText: updatedText,\n        cursorToGo: cursorToGo\n      };\n    });\n\n    _this.insertionText = _this.stringToInsert[editType];\n    return _this;\n  }\n\n  return FrontInsertEditor;\n}(Editor);\n\nexport { FrontInsertEditor as default };","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/markdownEditor/FrontInsertEditor.ts"],"names":["Editor","FrontInsertEditor","editType","input","cursorPosition","findSideEdges","frontEdge","backEdge","updatedText","insertText","insertionText","pointToGo","length","cursorToGo","stringToInsert"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;;IAEqBC,iB;;;;;AAGnB,6BAAmBC,QAAnB,EAAqC;AAAA;;AAAA;;AACnC;;AADmC;;AAAA,gEAKlB,UAACC,KAAD,EAAgBC,cAAhB,EAA4F;AAAA,gCAC/E,MAAKC,aAAL,CAAmBF,KAAnB,EAA0BC,cAA1B,CAD+E;AAAA;AAAA,UACtGE,SADsG;AAAA,UAC3FC,QAD2F;;AAE7G,UAAMC,WAAW,GAAG,MAAKC,UAAL,CAAgB,MAAKC,aAArB,EAAoCP,KAApC,EAA2CG,SAA3C,CAApB;;AACA,UAAMK,SAAS,GAAGJ,QAAQ,GAAG,MAAKG,aAAL,CAAmBE,MAA9B,GAAuC,CAAzD;AACA,UAAMC,UAAU,GAAG,CAACF,SAAD,EAAYA,SAAZ,CAAnB;AACA,aAAO;AAAEH,QAAAA,WAAW,EAAXA,WAAF;AAAeK,QAAAA,UAAU,EAAVA;AAAf,OAAP;AACD,KAXoC;;AAEnC,UAAKH,aAAL,GAAqB,MAAKI,cAAL,CAAoBZ,QAApB,CAArB;AAFmC;AAGpC;;;EAN4CF,M;;SAA1BC,iB","sourcesContent":["import Editor from './Editor';\n\nexport default class FrontInsertEditor extends Editor {\n  public insertionText: string;\n\n  public constructor(editType: string) {\n    super();\n    this.insertionText = this.stringToInsert[editType];\n  }\n\n  public editInput = (input: string, cursorPosition: number[]): { updatedText: string; cursorToGo: number[] } => {\n    const [frontEdge, backEdge] = this.findSideEdges(input, cursorPosition);\n    const updatedText = this.insertText(this.insertionText, input, frontEdge);\n    const pointToGo = backEdge + this.insertionText.length - 1;\n    const cursorToGo = [pointToGo, pointToGo];\n    return { updatedText, cursorToGo };\n  };\n}\n"]},"metadata":{},"sourceType":"module"}