{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/PostBox/PostBox.tsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport useDependencyTheme from '@hook/useDependencyTheme';\nimport Theme from '@theme/index';\nimport ThemeButton from '@molecules/ThemeBtn/index';\nimport EditButtonBox from '@molecules/EditButtonBox/index';\nimport Button from '@atoms/Button/index';\nimport editInputText from '@utils/editInputText';\nimport WritingArea from '@molecules/WritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport TagAddingBox from '@organisms/TagAddingBox/index';\nimport MarkdownPreview from '@molecules/MarkdownPreview/index';\nconst StyledPostBox = styled.div.withConfig({\n  displayName: \"PostBox__StyledPostBox\",\n  componentId: \"sc-1h6avyu-0\"\n})([\"display:flex;position:relative;word-wrap:break-word;white-space:pre-wrap;word-break:normal;pointer-events:none;.editArea{width:50%;height:100vh;& > hr{position:absolute;top:13vh;left:3vw;width:9vw;border:4px solid \", \";padding-bottm:300px;}.tagModal{top:13.5em;}.show{animation-name:bounce;animation-duration:0.5s;@keyframes bounce{0%{transform:translate(0%,-50%);opacity:0;}40%{transform:translate(0%,0%);}55%{transform:translate(0%,-5%);}100%{opacity:1;}}}}\"], () => Theme.EMPHASIS);\nconst StyledThemeButton = styled(ThemeButton).withConfig({\n  displayName: \"PostBox__StyledThemeButton\",\n  componentId: \"sc-1h6avyu-1\"\n})([\"pointer-events:auto;bottom:7vh;\"]);\nconst StyledButtonBox = styled.div.withConfig({\n  displayName: \"PostBox__StyledButtonBox\",\n  componentId: \"sc-1h6avyu-2\"\n})([\"position:absolute;right:42%;bottom:2rem;.save{}.submit{background-color:\", \";}\"], () => Theme.SUBMIT_BTN);\nconst StyledButton = styled(Button).withConfig({\n  displayName: \"PostBox__StyledButton\",\n  componentId: \"sc-1h6avyu-3\"\n})([\"margin-right:0.8em;&:hover{opacity:50%;}\"]);\n\nconst findCursorPoint = element => {\n  const cursorPointStart = element === null || element === void 0 ? void 0 : element.selectionStart;\n  const cursorPointEnd = element === null || element === void 0 ? void 0 : element.selectionEnd;\n  const cursorPosition = [cursorPointStart, cursorPointEnd];\n  return cursorPosition;\n};\n\nfunction PostBox() {\n  const {\n    0: input,\n    1: setInput\n  } = useState('');\n  const isEditText = useRef([false, [0, 0]]);\n  const {\n    0: cursorPosition,\n    1: setCursorPosition\n  } = useState([0, 0]);\n  const {\n    0: imageUrl,\n    1: setImageUrl\n  } = useState('');\n  const {\n    changeMode\n  } = useDependencyTheme();\n  const inputAreaElem = useRef(null);\n  const propsAboutTextComponent = {\n    input,\n    setInput,\n    setCursorPosition,\n    findCursorPoint,\n    inputAreaElem\n  };\n\n  const editTextByButton = event => {\n    var _inputAreaElem$curren;\n\n    const cursorPositionToGo = editInputText({\n      event,\n      input,\n      setInput,\n      cursorPosition\n    });\n    isEditText.current = [true, cursorPositionToGo];\n    (_inputAreaElem$curren = inputAreaElem.current) === null || _inputAreaElem$curren === void 0 ? void 0 : _inputAreaElem$curren.focus();\n  };\n\n  useEffect(() => {\n    if (isEditText.current[0]) {\n      var _inputAreaElem$curren2, _inputAreaElem$curren3;\n\n      const cursorToGo = isEditText.current[1];\n      const [startPosition, endPosition] = cursorToGo;\n      (_inputAreaElem$curren2 = inputAreaElem.current) === null || _inputAreaElem$curren2 === void 0 ? void 0 : _inputAreaElem$curren2.focus();\n      (_inputAreaElem$curren3 = inputAreaElem.current) === null || _inputAreaElem$curren3 === void 0 ? void 0 : _inputAreaElem$curren3.setSelectionRange(startPosition, endPosition);\n      isEditText.current = [false, [0, 0]];\n      setCursorPosition(findCursorPoint(inputAreaElem.current));\n    }\n  }, [input]);\n  useEffect(() => {\n    if (imageUrl === null || imageUrl === undefined || imageUrl.length === 0) return;\n    const newInput = `${input.slice(0, cursorPosition[0])}![](${imageUrl})${input.slice(cursorPosition[0])}`;\n    setInput(newInput);\n    setImageUrl('');\n  }, [imageUrl]);\n  return /*#__PURE__*/_jsxDEV(StyledPostBox, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editArea\",\n      children: [/*#__PURE__*/_jsxDEV(PostTitleInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TagAddingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditButtonBox, {\n        onClick: event => editTextByButton(event),\n        setImageUrl: setImageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WritingArea, {\n        className: \"textInput\",\n        propsAboutTextComponent: propsAboutTextComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MarkdownPreview, {\n      input: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledThemeButton, {\n      onClick: changeMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButtonBox, {\n      children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n        onClick: () => console.log('임시저장'),\n        className: \"save\",\n        children: \"\\uC784\\uC2DC\\uC800\\uC7A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n        onClick: () => console.log('등록'),\n        className: \"submit\",\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\nexport default PostBox;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/PostBox/PostBox.tsx"],"names":["React","useState","useRef","useEffect","styled","useDependencyTheme","Theme","ThemeButton","EditButtonBox","Button","editInputText","WritingArea","PostTitleInput","TagAddingBox","MarkdownPreview","StyledPostBox","div","EMPHASIS","StyledThemeButton","StyledButtonBox","SUBMIT_BTN","StyledButton","findCursorPoint","element","cursorPointStart","selectionStart","cursorPointEnd","selectionEnd","cursorPosition","PostBox","input","setInput","isEditText","setCursorPosition","imageUrl","setImageUrl","changeMode","inputAreaElem","propsAboutTextComponent","editTextByButton","event","cursorPositionToGo","current","focus","cursorToGo","startPosition","endPosition","setSelectionRange","undefined","length","newInput","slice","console","log"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport useDependencyTheme from '@hook/useDependencyTheme';\nimport Theme from '@theme/index';\nimport ThemeButton from '@molecules/ThemeBtn/index';\nimport EditButtonBox from '@molecules/EditButtonBox/index';\nimport Button from '@atoms/Button/index';\nimport editInputText from '@utils/editInputText';\nimport WritingArea from '@molecules/WritingArea/index';\nimport PostTitleInput from '@molecules/PostTitleInput/index';\nimport TagAddingBox from '@organisms/TagAddingBox/index';\nimport MarkdownPreview from '@molecules/MarkdownPreview/index';\n\nconst StyledPostBox = styled.div`\n  display: flex;\n  position: relative;\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  word-break: normal;\n  pointer-events: none;\n\n  .editArea {\n    width: 50%;\n    height: 100vh;\n    & > hr {\n      position: absolute;\n      top: 13vh;\n      left: 3vw;\n      width: 9vw;\n      border: 4px solid ${() => Theme.EMPHASIS};\n      padding-bottm: 300px;\n    }\n\n    .tagModal {\n      top: 13.5em;\n    }\n\n    .show {\n      animation-name: bounce;\n      animation-duration: 0.5s;\n\n      @keyframes bounce {\n        0% {\n          transform: translate(0%, -50%);\n          opacity: 0;\n        }\n        40% {\n          transform: translate(0%, 0%);\n        }\n        55% {\n          transform: translate(0%, -5%);\n        }\n        100% {\n          opacity: 1;\n        }\n      }\n    }\n  }\n`;\n\nconst StyledThemeButton = styled(ThemeButton)`\n  pointer-events: auto;\n  bottom: 7vh;\n`;\n\nconst StyledButtonBox = styled.div`\n  position: absolute;\n  right: 42%;\n  bottom: 2rem;\n  .save {\n  }\n  .submit {\n    background-color: ${() => Theme.SUBMIT_BTN};\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  margin-right: 0.8em;\n  &:hover {\n    opacity: 50%;\n  }\n`;\n\nconst findCursorPoint = (element: HTMLTextAreaElement): number[] => {\n  const cursorPointStart = element?.selectionStart;\n  const cursorPointEnd = element?.selectionEnd;\n  const cursorPosition = [cursorPointStart, cursorPointEnd];\n\n  return cursorPosition;\n};\n\nfunction PostBox(): ReactElement {\n  const [input, setInput] = useState('');\n  const isEditText = useRef([false, [0, 0]]);\n  const [cursorPosition, setCursorPosition] = useState([0, 0]);\n  const [imageUrl, setImageUrl] = useState<string>('');\n  const { changeMode } = useDependencyTheme();\n  const inputAreaElem = useRef<HTMLTextAreaElement>(null);\n\n  const propsAboutTextComponent = { input, setInput, setCursorPosition, findCursorPoint, inputAreaElem };\n\n  const editTextByButton = (event: React.MouseEvent<SVGElement, MouseEvent>) => {\n    const cursorPositionToGo = editInputText({ event, input, setInput, cursorPosition });\n    isEditText.current = [true, cursorPositionToGo];\n    inputAreaElem.current?.focus();\n  };\n\n  useEffect(() => {\n    if (isEditText.current[0]) {\n      const cursorToGo = isEditText.current[1];\n      const [startPosition, endPosition] = cursorToGo as number[];\n\n      inputAreaElem.current?.focus();\n      inputAreaElem.current?.setSelectionRange(startPosition, endPosition);\n      isEditText.current = [false, [0, 0]];\n      setCursorPosition(findCursorPoint(inputAreaElem.current as HTMLTextAreaElement));\n    }\n  }, [input]);\n\n  useEffect(() => {\n    if (imageUrl === null || imageUrl === undefined || imageUrl.length === 0) return;\n\n    const newInput = `${input.slice(0, cursorPosition[0])}![](${imageUrl})${input.slice(cursorPosition[0])}`;\n    setInput(newInput);\n    setImageUrl('');\n  }, [imageUrl]);\n\n  return (\n    <StyledPostBox>\n      <div className=\"editArea\">\n        <PostTitleInput />\n        <hr />\n        <TagAddingBox />\n        <EditButtonBox onClick={(event) => editTextByButton(event)} setImageUrl={setImageUrl} />\n        <WritingArea className=\"textInput\" propsAboutTextComponent={propsAboutTextComponent} />\n      </div>\n      <MarkdownPreview input={input} />\n      <StyledThemeButton onClick={changeMode} />\n      <StyledButtonBox>\n        <StyledButton onClick={() => console.log('임시저장')} className=\"save\">\n          임시저장\n        </StyledButton>\n        <StyledButton onClick={() => console.log('등록')} className=\"submit\">\n          등록\n        </StyledButton>\n      </StyledButtonBox>\n    </StyledPostBox>\n  );\n}\n\nexport default PostBox;\n"]},"metadata":{},"sourceType":"module"}