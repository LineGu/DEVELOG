{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TableModal/TableModal.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport addTable from '@utils/addTable';\nconst StyledModal = styled.div.withConfig({\n  displayName: \"TableModal__StyledModal\",\n  componentId: \"sc-10g38zi-0\"\n})([\"display:\", \";position:absolute;flex-direction:column;margin:0;padding:5px 15px 10px 15px;border-radius:0.2em;pointer-events:visibleFill;background-color:\", \";& > span{margin:5px 0px;color:\", \";}.block_row_box{display:flex;margin:0;padding:0;}\"], ({\n  isHidden\n}) => isHidden ? 'none' : 'flex', () => Theme.MODAL_EDIT, () => Theme.HEADER_BACK);\nconst Block = styled.div.withConfig({\n  displayName: \"TableModal__Block\",\n  componentId: \"sc-10g38zi-1\"\n})([\"width:20px;height:20px;margin:2px;padding:0;border:1px solid \", \";background-color:\", \";\"], ({\n  color\n}) => color === Theme.HEADER_BACK ? Theme.OUT_LINE : Theme.HEADER_BACK, ({\n  color\n}) => color);\n\nfunction TableModal({\n  className,\n  tableProps,\n  isHidden,\n  setIsHidden\n}) {\n  const initValueCheckedPoint = [-1, -1];\n  const rowBlockLength = 10;\n  const columnBlockLength = 8;\n  const {\n    0: checkedPoint,\n    1: setCheckedPoint\n  } = useState(initValueCheckedPoint);\n  const [xPoint, yPoint] = checkedPoint;\n  const rowBlockCount = new Array(rowBlockLength).fill(0);\n  const columnBlockCount = new Array(columnBlockLength).fill(0);\n  const resetCheckedPoint = useCallback(() => setCheckedPoint(initValueCheckedPoint), []);\n  const updateCheckedPoint = useCallback(event => {\n    const [xPointStr, yPointStr] = event.currentTarget.id.split(',');\n    const newCheckedPoint = [parseInt(xPointStr, 10), parseInt(yPointStr, 10)];\n    setCheckedPoint(newCheckedPoint);\n    event.stopPropagation();\n  }, []);\n  const hideTableModal = useCallback(() => {\n    setIsHidden(true);\n    resetCheckedPoint();\n  }, []);\n  const printCurrentCheckedPoint = useCallback(() => {\n    const isChecked = checkedPoint[0] !== initValueCheckedPoint[0];\n    const [rowCount, columnCount] = [xPoint + 1, yPoint + 1];\n    return isChecked ? `${rowCount} x ${columnCount} 표` : '표 삽입';\n  }, [checkedPoint]);\n  const resetCheckPointMouseLeaved = useCallback(event => {\n    event.stopPropagation();\n    if (event.target !== event.currentTarget) return;\n    resetCheckedPoint();\n  }, []);\n  const addTableByClick = useCallback(() => {\n    const [rowCount, columnCount] = [xPoint + 1, yPoint + 1];\n\n    const newTableProps = _objectSpread({\n      tableCount: [rowCount, columnCount]\n    }, tableProps);\n\n    addTable(newTableProps);\n    resetCheckedPoint();\n  }, [checkedPoint]);\n  const setBoxColor = useCallback((columnNum, rowNum) => {\n    const isCheckedBlock = checkedPoint[0] >= columnNum && checkedPoint[1] >= rowNum;\n    return isCheckedBlock ? Theme.HEADER_BACK : Theme.MODAL_EDIT;\n  }, [checkedPoint]);\n  useEffect(() => {\n    document.addEventListener('click', hideTableModal);\n    document.addEventListener('mouseover', resetCheckedPoint);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StyledModal, {\n    isHidden: isHidden,\n    className: className,\n    onMouseOver: event => event.stopPropagation(),\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: printCurrentCheckedPoint()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), columnBlockCount.map((__, rowNum) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block_row_box\",\n      onClick: addTableByClick,\n      children: rowBlockCount.map((_, colNum) => /*#__PURE__*/_jsxDEV(Block, {\n        id: `${colNum},${rowNum}`,\n        onMouseOver: updateCheckedPoint,\n        color: setBoxColor(colNum, rowNum)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this))\n    }, rowNum, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\nexport default TableModal;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TableModal/TableModal.tsx"],"names":["React","useState","useEffect","useCallback","styled","Theme","addTable","StyledModal","div","isHidden","MODAL_EDIT","HEADER_BACK","Block","color","OUT_LINE","TableModal","className","tableProps","setIsHidden","initValueCheckedPoint","rowBlockLength","columnBlockLength","checkedPoint","setCheckedPoint","xPoint","yPoint","rowBlockCount","Array","fill","columnBlockCount","resetCheckedPoint","updateCheckedPoint","event","xPointStr","yPointStr","currentTarget","id","split","newCheckedPoint","parseInt","stopPropagation","hideTableModal","printCurrentCheckedPoint","isChecked","rowCount","columnCount","resetCheckPointMouseLeaved","target","addTableByClick","newTableProps","tableCount","setBoxColor","columnNum","rowNum","isCheckedBlock","document","addEventListener","map","__","_","colNum"],"mappings":"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","sourcesContent":["import { IComponentProps, ITableProps } from '@interfaces';\nimport React, { ReactElement, useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport { IOnHoverDivFunc } from '@eventInterfaces';\nimport { setStateBool } from '@types';\nimport addTable from '@utils/addTable';\n\ninterface ITableModalProps extends IComponentProps {\n  tableProps: ITableProps;\n  isHidden: boolean;\n  setIsHidden: setStateBool;\n}\n\nconst StyledModal = styled.div<{ isHidden: boolean }>`\n  display: ${({ isHidden }) => (isHidden ? 'none' : 'flex')};\n  position: absolute;\n  flex-direction: column;\n  margin: 0;\n  padding: 5px 15px 10px 15px;\n  border-radius: 0.2em;\n  pointer-events: visibleFill;\n  background-color: ${() => Theme.MODAL_EDIT};\n\n  & > span {\n    margin: 5px 0px;\n    color: ${() => Theme.HEADER_BACK};\n  }\n\n  .block_row_box {\n    display: flex;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nconst Block = styled.div<{ color: string }>`\n  width: 20px;\n  height: 20px;\n  margin: 2px;\n  padding: 0;\n  border: 1px solid ${({ color }) => (color === Theme.HEADER_BACK ? Theme.OUT_LINE : Theme.HEADER_BACK)};\n  background-color: ${({ color }) => color};\n`;\n\nfunction TableModal({ className, tableProps, isHidden, setIsHidden }: ITableModalProps): ReactElement {\n  const initValueCheckedPoint = [-1, -1];\n  const rowBlockLength = 10;\n  const columnBlockLength = 8;\n  const [checkedPoint, setCheckedPoint] = useState<number[]>(initValueCheckedPoint);\n  const [xPoint, yPoint] = checkedPoint;\n  const rowBlockCount = new Array(rowBlockLength).fill(0);\n  const columnBlockCount = new Array(columnBlockLength).fill(0);\n\n  const resetCheckedPoint = useCallback(() => setCheckedPoint(initValueCheckedPoint), []);\n\n  const updateCheckedPoint: IOnHoverDivFunc = useCallback((event) => {\n    const [xPointStr, yPointStr] = event.currentTarget.id.split(',');\n    const newCheckedPoint = [parseInt(xPointStr, 10), parseInt(yPointStr, 10)];\n    setCheckedPoint(newCheckedPoint);\n    event.stopPropagation();\n  }, []);\n\n  const hideTableModal = useCallback(() => {\n    setIsHidden(true);\n    resetCheckedPoint();\n  }, []);\n\n  const printCurrentCheckedPoint = useCallback(() => {\n    const isChecked = checkedPoint[0] !== initValueCheckedPoint[0];\n    const [rowCount, columnCount] = [xPoint + 1, yPoint + 1];\n    return isChecked ? `${rowCount} x ${columnCount} 표` : '표 삽입';\n  }, [checkedPoint]);\n\n  const resetCheckPointMouseLeaved = useCallback((event) => {\n    event.stopPropagation();\n    if (event.target !== event.currentTarget) return;\n    resetCheckedPoint();\n  }, []);\n\n  const addTableByClick = useCallback(() => {\n    const [rowCount, columnCount] = [xPoint + 1, yPoint + 1];\n    const newTableProps = { tableCount: [rowCount, columnCount], ...tableProps };\n    addTable(newTableProps);\n    resetCheckedPoint();\n  }, [checkedPoint]);\n\n  const setBoxColor = useCallback(\n    (columnNum, rowNum) => {\n      const isCheckedBlock = checkedPoint[0] >= columnNum && checkedPoint[1] >= rowNum;\n      return isCheckedBlock ? Theme.HEADER_BACK : Theme.MODAL_EDIT;\n    },\n    [checkedPoint],\n  );\n\n  useEffect(() => {\n    document.addEventListener('click', hideTableModal);\n    document.addEventListener('mouseover', resetCheckedPoint);\n  }, []);\n\n  return (\n    <StyledModal isHidden={isHidden} className={className} onMouseOver={(event) => event.stopPropagation()}>\n      <span>{printCurrentCheckedPoint()}</span>\n      {columnBlockCount.map((__, rowNum) => (\n        <div className=\"block_row_box\" key={rowNum} onClick={addTableByClick}>\n          {rowBlockCount.map((_, colNum) => (\n            <Block id={`${colNum},${rowNum}`} onMouseOver={updateCheckedPoint} color={setBoxColor(colNum, rowNum)} />\n          ))}\n        </div>\n      ))}\n    </StyledModal>\n  );\n}\n\nexport default TableModal;\n"]},"metadata":{},"sourceType":"module"}