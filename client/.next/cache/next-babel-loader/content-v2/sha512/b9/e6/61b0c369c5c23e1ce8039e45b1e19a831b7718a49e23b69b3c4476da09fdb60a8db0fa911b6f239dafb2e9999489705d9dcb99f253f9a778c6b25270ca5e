{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/UI/molecules/TextLoop/TextLoop.tsx\";\nimport React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport useTextLoop from '@utils/textLoop';\nimport introduceList, { pointWord } from '@utils/introduceList';\nimport Theme from '@theme/index';\nimport FocusBox from '@atoms/FocusBox/index';\nconst StyledBackground = styled.img.withConfig({\n  displayName: \"TextLoop__StyledBackground\",\n  componentId: \"pdfwrd-0\"\n})([\"position:absolute;opacity:60%;width:100vmin;height:100%;z-index:0;pointer-events:none;transition:opacity 0.5s;\"]);\nconst StyledTextBox = styled.span.withConfig({\n  displayName: \"TextLoop__StyledTextBox\",\n  componentId: \"pdfwrd-1\"\n})([\"position:absolute;font-size:4vmin;font-family:'PT Sans';letter-spacing:2px;line-height:7vmin;text-align:center;transition:opacity 0.5s ease 0s;opacity:\", \";color:\", \";\"], ({\n  opacity\n}) => opacity, () => Theme.INTRO);\nconst StyledPointText = styled.span.withConfig({\n  displayName: \"TextLoop__StyledPointText\",\n  componentId: \"pdfwrd-2\"\n})([\"color:\", \";\"], () => Theme.POINT);\n\nfunction TextLoop() {\n  const {\n    margin,\n    color,\n    opacity,\n    introduce\n  } = useTextLoop(introduceList);\n  const sentenceDivided = introduce.split('/');\n  return /*#__PURE__*/_jsxDEV(FocusBox, {\n    margin: margin,\n    color: color,\n    children: [/*#__PURE__*/_jsxDEV(StyledBackground, {\n      src: Theme.INTRO_BG,\n      alt: \"background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTextBox, {\n      opacity: opacity,\n      children: sentenceDivided.map((sentence, sentenseIndex) => {\n        const wordDivided = sentence.split('#');\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [wordDivided.map((word, wordIndex) => pointWord.includes(word) ? /*#__PURE__*/_jsxDEV(StyledPointText, {\n            children: word\n          }, wordIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 44\n          }, this) : word), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, sentenseIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\nexport default TextLoop;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/UI/molecules/TextLoop/TextLoop.tsx"],"names":["React","Fragment","styled","useTextLoop","introduceList","pointWord","Theme","FocusBox","StyledBackground","img","StyledTextBox","span","opacity","INTRO","StyledPointText","POINT","TextLoop","margin","color","introduce","sentenceDivided","split","INTRO_BG","map","sentence","sentenseIndex","wordDivided","word","wordIndex","includes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,aAAP,IAAwBC,SAAxB,QAAyC,sBAAzC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAMA,MAAMC,gBAAgB,GAAGN,MAAM,CAACO,GAAV;AAAA;AAAA;AAAA,sHAAtB;AAUA,MAAMC,aAAa,GAAGR,MAAM,CAACS,IAAV;AAAA;AAAA;AAAA,gLAQN,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiBA,OARX,EASR,MAAMN,KAAK,CAACO,KATJ,CAAnB;AAYA,MAAMC,eAAe,GAAGZ,MAAM,CAACS,IAAV;AAAA;AAAA;AAAA,oBACV,MAAML,KAAK,CAACS,KADF,CAArB;;AAIA,SAASC,QAAT,GAAkC;AAChC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBN,IAAAA,OAAjB;AAA0BO,IAAAA;AAA1B,MAAwChB,WAAW,CAACC,aAAD,CAAzD;AACA,QAAMgB,eAAe,GAAGD,SAAS,CAACE,KAAV,CAAgB,GAAhB,CAAxB;AAEA,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAEJ,MAAlB;AAA0B,IAAA,KAAK,EAAEC,KAAjC;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEZ,KAAK,CAACgB,QAA7B;AAAuC,MAAA,GAAG,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,OAAO,EAAEV,OAAxB;AAAA,gBACGQ,eAAe,CAACG,GAAhB,CAAoB,CAACC,QAAD,EAAWC,aAAX,KAA6B;AAChD,cAAMC,WAAW,GAAGF,QAAQ,CAACH,KAAT,CAAe,GAAf,CAApB;AACA,4BACE,QAAC,QAAD;AAAA,qBACGK,WAAW,CAACH,GAAZ,CAAgB,CAACI,IAAD,EAAOC,SAAP,KACfvB,SAAS,CAACwB,QAAV,CAAmBF,IAAnB,iBAA2B,QAAC,eAAD;AAAA,sBAAkCA;AAAlC,aAAsBC,SAAtB;AAAA;AAAA;AAAA;AAAA,kBAA3B,GAAuFD,IADxF,CADH,eAIE;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAAeF,aAAf;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OAVA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;AAED,eAAeT,QAAf","sourcesContent":["import React, { Fragment, ReactElement } from 'react';\nimport styled from 'styled-components';\nimport useTextLoop from '@utils/textLoop';\nimport introduceList, { pointWord } from '@utils/introduceList';\nimport Theme from '@theme/index';\nimport FocusBox from '@atoms/FocusBox/index';\n\ninterface ITextBoxProps {\n  opacity: string;\n}\n\nconst StyledBackground = styled.img`\n  position: absolute;\n  opacity: 60%;\n  width: 100vmin;\n  height: 100%;\n  z-index: 0;\n  pointer-events: none;\n  transition: opacity 0.5s;\n`;\n\nconst StyledTextBox = styled.span<ITextBoxProps>`\n  position: absolute;\n  font-size: 4vmin;\n  font-family: 'PT Sans';\n  letter-spacing: 2px;\n  line-height: 7vmin;\n  text-align: center;\n  transition: opacity 0.5s ease 0s;\n  opacity: ${({ opacity }) => opacity};\n  color: ${() => Theme.INTRO};\n`;\n\nconst StyledPointText = styled.span`\n  color: ${() => Theme.POINT};\n`;\n\nfunction TextLoop(): ReactElement {\n  const { margin, color, opacity, introduce } = useTextLoop(introduceList);\n  const sentenceDivided = introduce.split('/');\n\n  return (\n    <FocusBox margin={margin} color={color}>\n      <StyledBackground src={Theme.INTRO_BG} alt=\"background\" />\n      <StyledTextBox opacity={opacity}>\n        {sentenceDivided.map((sentence, sentenseIndex) => {\n          const wordDivided = sentence.split('#');\n          return (\n            <Fragment key={sentenseIndex}>\n              {wordDivided.map((word, wordIndex) =>\n                pointWord.includes(word) ? <StyledPointText key={wordIndex}>{word}</StyledPointText> : word,\n              )}\n              <br />\n            </Fragment>\n          );\n        })}\n      </StyledTextBox>\n    </FocusBox>\n  );\n}\n\nexport default TextLoop;\n"]},"metadata":{},"sourceType":"module"}