{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/PostBox/PostBox.tsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atelierCaveLight, a11yDark } from 'react-syntax-highlighter/dist/cjs/styles/hljs';\nimport gfm from 'remark-gfm';\nimport useDependencyTheme from '@hook/useDependencyTheme';\nimport Theme from '@theme/index';\nimport ThemeButton from '@molecules/ThemeBtn/index';\nimport EditButtonBox from '@molecules/EditButtonBox/index';\nimport Button from '@atoms/Button/index';\nimport editInputText from '@utils/editInputText';\nconst StyledPostBox = styled.div.withConfig({\n  displayName: \"PostBox__StyledPostBox\",\n  componentId: \"sc-1h6avyu-0\"\n})([\"display:flex;position:relative;word-wrap:break-word;white-space:pre-wrap;word-break:normal;pointer-events:none;.editArea{width:50%;height:100vh;& > hr{position:absolute;top:13vh;left:3vw;width:9vw;border:4px solid \", \";padding-bottm:300px;}}.preview{width:50%;height:79vh;font-size:1.2rem;padding:10vh 6vw;outline:none;overflow-y:scroll;pointer-events:auto;color:\", \";h1{padding-bottom:1rem;border-bottom:1px solid \", \";}table{border-collapse:collapse;font-size:1rem;& th{border:1px solid \", \";border-bottom:2px solid \", \";padding:0.8rem 1.4rem;}& td{border:1px solid \", \";border-top:none;padding:0.8rem;}}a{color:\", \";text-decoration:none;}blockquote{margin:0;padding:0.2em;padding-left:3em;line-height:2rem;border-left:0.4em \", \" solid;}hr{width:100%;margin:2rem 0;color:\", \";opacity:60%;}p > code{font-size:1.3rem;font-weight:800;color:\", \";background-color:\", \";border-radius:0.3em;padding:0.15rem 0.5rem;margin:0 0.2rem 0 0.5rem;}& > *::selection{background-color:inherit;}@media (max-width:\", \"){display:none;}}\"], () => Theme.EMPHASIS, () => Theme.INTRO, () => Theme.LINK_MODAL, () => Theme.BASE, () => Theme.INTRO, () => Theme.BASE, () => Theme.MODE_MARK, () => Theme.POINT, () => Theme.BASE, () => Theme.CODE, () => Theme.EMPHASIS, () => Theme.TABLET);\nconst StyledMarkdownArea = styled.textarea.withConfig({\n  displayName: \"PostBox__StyledMarkdownArea\",\n  componentId: \"sc-1h6avyu-1\"\n})([\"width:100%;height:68vh;padding-left:3vw;font-size:1.4rem;pointer-events:auto;background-color:\", \";color:\", \";border:none;outline:none;resize:none;@media (max-width:\", \"){width:100%;border:none;}&::selection{background-color:#dfdfdf;}\"], () => Theme.HEADER_BACK, () => Theme.INTRO, () => Theme.TABLET);\nconst TextAreaForTitle = styled.textarea.withConfig({\n  displayName: \"PostBox__TextAreaForTitle\",\n  componentId: \"sc-1h6avyu-2\"\n})([\"width:100%;font-size:3.5em;font-weight:700;padding:5vh 0 0 3vw;border:none;outline:none;resize:none;pointer-events:auto;background-color:\", \";&::placeholder{color:#a2acb4;}\"], () => Theme.HEADER_BACK);\nconst TextAreaForTag = styled.input.withConfig({\n  displayName: \"PostBox__TextAreaForTag\",\n  componentId: \"sc-1h6avyu-3\"\n})([\"font-size:1.5em;font-weight:400;border:none;outline:none;resize:none;margin-left:0.4rem;padding-bottom:0.7rem;pointer-events:auto;background-color:\", \";&::placeholder{color:#a2acb4;}&::selection{background-color:#dfdfdf;color:#a2acb4;}\"], () => Theme.HEADER_BACK);\nconst StyledThemeButton = styled(ThemeButton).withConfig({\n  displayName: \"PostBox__StyledThemeButton\",\n  componentId: \"sc-1h6avyu-4\"\n})([\"pointer-events:auto;bottom:7vh;\"]);\n\nconst CodeBox = ({\n  value,\n  language\n}) => {\n  const {\n    mode\n  } = useDependencyTheme();\n  const style = mode === 'LightMode' ? atelierCaveLight : a11yDark;\n  return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n    language: language !== null && language !== void 0 ? language : '',\n    style: style,\n    customStyle: {\n      lineHeight: '1.4em',\n      fontSize: '1.2em',\n      borderRadius: '0.5em',\n      backgroundColor: Theme.CODE_BOX\n    },\n    children: value !== null && value !== void 0 ? value : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n\nconst StyledTagContainer = styled.div.withConfig({\n  displayName: \"PostBox__StyledTagContainer\",\n  componentId: \"sc-1h6avyu-5\"\n})([\"display:flex;flex-wrap:wrap;align-items:space-beetween;margin:1.2rem 0 1.2rem 2rem;\"]);\nconst StyledTagUnit = styled.div.withConfig({\n  displayName: \"PostBox__StyledTagUnit\",\n  componentId: \"sc-1h6avyu-6\"\n})([\"height:1.7rem;font-size:1.2rem;font-weight:600;margin:0 3rem 0.7rem 0.5rem;color:\", \";&:hover{opacity:60%;cursor:pointer;}\"], () => Theme.MODE_MARK);\nconst StyledButtonBox = styled.div.withConfig({\n  displayName: \"PostBox__StyledButtonBox\",\n  componentId: \"sc-1h6avyu-7\"\n})([\"position:absolute;right:42%;bottom:2rem;.save{}.submit{background-color:\", \";}\"], () => Theme.SUBMIT_BTN);\nconst StyledButton = styled(Button).withConfig({\n  displayName: \"PostBox__StyledButton\",\n  componentId: \"sc-1h6avyu-8\"\n})([\"margin-right:0.8em;\"]);\n\nconst findCursorPoint = element => {\n  const cursorPointStart = element === null || element === void 0 ? void 0 : element.selectionStart;\n  const cursorPointEnd = element === null || element === void 0 ? void 0 : element.selectionEnd;\n  const cursorPosition = [cursorPointStart, cursorPointEnd];\n  return cursorPosition;\n};\n\nconst b64toBlob = (b64Data, contentType = '', sliceSize = 512) => {\n  const byteCharacters = atob(b64Data);\n  const byteArrays = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n    const byteNumbers = new Array(slice.length);\n\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    const byteArray = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n\n  const blob = new Blob(byteArrays, {\n    type: contentType\n  });\n  return blob;\n};\n\nfunction PostBox() {\n  const {\n    0: input,\n    1: setInput\n  } = useState('');\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: tagInput,\n    1: setTagInput\n  } = useState('');\n  const {\n    0: tagList,\n    1: setTagList\n  } = useState([]);\n  const isEditText = useRef([false, [0, 0]]);\n  const {\n    0: cursorPosition,\n    1: setCursorPosition\n  } = useState([0, 0]);\n  const {\n    0: images,\n    1: setImages\n  } = useState(null);\n  const {\n    changeMode\n  } = useDependencyTheme();\n  const inputAreaElem = useRef(null);\n  useEffect(() => {\n    if (isEditText.current[0]) {\n      var _inputAreaElem$curren, _inputAreaElem$curren2;\n\n      const cursorToGo = isEditText.current[1];\n      const [startPosition, endPosition] = cursorToGo;\n      (_inputAreaElem$curren = inputAreaElem.current) === null || _inputAreaElem$curren === void 0 ? void 0 : _inputAreaElem$curren.focus();\n      (_inputAreaElem$curren2 = inputAreaElem.current) === null || _inputAreaElem$curren2 === void 0 ? void 0 : _inputAreaElem$curren2.setSelectionRange(startPosition, endPosition);\n      isEditText.current = [false, [0, 0]];\n      setCursorPosition(findCursorPoint(inputAreaElem.current));\n    }\n  }, [input]);\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => {\n      const src = reader.result; // document.querySelector('#img').src = src;\n\n      const blob = b64toBlob(src, '');\n      const blobUrl = URL.createObjectURL(blob);\n      const newInput = `${input.slice(0, cursorPosition[0])}![](${blobUrl})${input.slice(cursorPosition[0])}`;\n      setInput(newInput);\n    }, false);\n    if (images === null) return;\n    reader.readAsDataURL(images[0]);\n  }, [images]);\n  return /*#__PURE__*/_jsxDEV(StyledPostBox, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editArea\",\n      children: [/*#__PURE__*/_jsxDEV(TextAreaForTitle, {\n        placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: title,\n        onChange: event => setTitle(event.target.value),\n        spellCheck: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTagContainer, {\n        children: [tagList.map((tag, index) => /*#__PURE__*/_jsxDEV(StyledTagUnit, {\n          onClick: () => {\n            const tagIndex = index;\n            const tagListCopied = [...tagList];\n            tagListCopied.splice(tagIndex, 1);\n            setTagList(tagListCopied);\n          },\n          children: tag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(TextAreaForTag, {\n          placeholder: \"\\uD0DC\\uADF8\\uB97C \\uCD94\\uAC00\\uD558\\uC138\\uC694\",\n          spellCheck: \"false\",\n          value: tagInput,\n          onChange: event => {\n            const newTag = event.target.value;\n            if (newTag[0] !== '#') return;\n            setTagInput(newTag);\n          },\n          onKeyDown: event => {\n            if ((event.key === ' ' || event.key === 'Enter') && tagInput[0] === '#') {\n              const tagListCopied = [...tagList];\n              tagListCopied.push(tagInput.slice(1));\n              setTagList(tagListCopied);\n              setTagInput('');\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditButtonBox, {\n        onClick: event => {\n          var _inputAreaElem$curren3;\n\n          const cursorPositionToGo = editInputText({\n            event,\n            input,\n            setInput,\n            cursorPosition\n          });\n          isEditText.current = [true, cursorPositionToGo];\n          (_inputAreaElem$curren3 = inputAreaElem.current) === null || _inputAreaElem$curren3 === void 0 ? void 0 : _inputAreaElem$curren3.focus();\n        },\n        getImages: setImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledMarkdownArea, {\n        className: \"textInput\",\n        spellCheck: \"false\",\n        placeholder: \"\\uC774\\uC57C\\uAE30\\uB97C \\uC801\\uC5B4\\uBCF4\\uC138\\uC694..\",\n        value: input,\n        onChange: event => {\n          setInput(event.target.value);\n        },\n        onClick: () => setCursorPosition(findCursorPoint(inputAreaElem.current)),\n        onKeyUp: event => {\n          const cursorFinder = setTimeout(() => setCursorPosition(findCursorPoint(inputAreaElem.current)), 400);\n          event.target.addEventListener('keyup', () => clearTimeout(cursorFinder));\n        },\n        ref: inputAreaElem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      plugins: [[gfm, {\n        tableCellPadding: 'true'\n      }]],\n      source: title === '' ? input : `# ${title}\\n${input}`,\n      className: \"preview\",\n      renderers: {\n        code: CodeBox\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledThemeButton, {\n      onClick: changeMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButtonBox, {\n      children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n        className: \"save\",\n        children: \"\\uC784\\uC2DC\\uC800\\uC7A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n        className: \"submit\",\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n}\n\nexport default PostBox;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/organisms/PostBox/PostBox.tsx"],"names":["React","useState","useRef","useEffect","styled","ReactMarkdown","SyntaxHighlighter","atelierCaveLight","a11yDark","gfm","useDependencyTheme","Theme","ThemeButton","EditButtonBox","Button","editInputText","StyledPostBox","div","EMPHASIS","INTRO","LINK_MODAL","BASE","MODE_MARK","POINT","CODE","TABLET","StyledMarkdownArea","textarea","HEADER_BACK","TextAreaForTitle","TextAreaForTag","input","StyledThemeButton","CodeBox","value","language","mode","style","lineHeight","fontSize","borderRadius","backgroundColor","CODE_BOX","StyledTagContainer","StyledTagUnit","StyledButtonBox","SUBMIT_BTN","StyledButton","findCursorPoint","element","cursorPointStart","selectionStart","cursorPointEnd","selectionEnd","cursorPosition","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","blob","Blob","type","PostBox","setInput","title","setTitle","tagInput","setTagInput","tagList","setTagList","isEditText","setCursorPosition","images","setImages","changeMode","inputAreaElem","current","cursorToGo","startPosition","endPosition","focus","setSelectionRange","reader","FileReader","addEventListener","src","result","blobUrl","URL","createObjectURL","newInput","readAsDataURL","event","target","map","tag","index","tagIndex","tagListCopied","splice","newTag","key","cursorPositionToGo","cursorFinder","setTimeout","clearTimeout","tableCellPadding","code"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atelierCaveLight, a11yDark } from 'react-syntax-highlighter/dist/cjs/styles/hljs';\nimport gfm from 'remark-gfm';\nimport useDependencyTheme from '@hook/useDependencyTheme';\nimport Theme from '@theme/index';\nimport ThemeButton from '@molecules/ThemeBtn/index';\nimport EditButtonBox from '@molecules/EditButtonBox/index';\nimport Button from '@atoms/Button/index';\nimport editInputText, { findFrontOfLine } from '@utils/editInputText';\n\nconst StyledPostBox = styled.div`\n  display: flex;\n  position: relative;\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  word-break: normal;\n  pointer-events: none;\n\n  .editArea {\n    width: 50%;\n    height: 100vh;\n    & > hr {\n      position: absolute;\n      top: 13vh;\n      left: 3vw;\n      width: 9vw;\n      border: 4px solid ${() => Theme.EMPHASIS};\n      padding-bottm: 300px;\n    }\n  }\n  .preview {\n    width: 50%;\n    height: 79vh;\n    font-size: 1.2rem;\n    padding: 10vh 6vw;\n    outline: none;\n    overflow-y: scroll;\n    pointer-events: auto;\n    color: ${() => Theme.INTRO};\n\n    h1 {\n      padding-bottom: 1rem;\n      border-bottom: 1px solid ${() => Theme.LINK_MODAL};\n    }\n    table {\n      border-collapse: collapse;\n      font-size: 1rem;\n      & th {\n        border: 1px solid ${() => Theme.BASE};\n        border-bottom: 2px solid ${() => Theme.INTRO};\n        padding: 0.8rem 1.4rem;\n      }\n      & td {\n        border: 1px solid ${() => Theme.BASE};\n        border-top: none;\n        padding: 0.8rem;\n      }\n    }\n    a {\n      color: ${() => Theme.MODE_MARK};\n      text-decoration: none;\n    }\n    blockquote {\n      margin: 0;\n      padding: 0.2em;\n      padding-left: 3em;\n      line-height: 2rem;\n      border-left: 0.4em ${() => Theme.POINT} solid;\n    }\n    hr {\n      width: 100%;\n      margin: 2rem 0;\n      color: ${() => Theme.BASE};\n      opacity: 60%;\n    }\n    p > code {\n      font-size: 1.3rem;\n      font-weight: 800;\n      color: ${() => Theme.CODE};\n      background-color: ${() => Theme.EMPHASIS};\n      border-radius: 0.3em;\n      padding: 0.15rem 0.5rem;\n      margin: 0 0.2rem 0 0.5rem;\n    }\n    & > *::selection {\n      background-color: inherit;\n    }\n\n    @media (max-width: ${() => Theme.TABLET}) {\n      display: none;\n    }\n  }\n`;\n\nconst StyledMarkdownArea = styled.textarea`\n  width: 100%;\n  height: 68vh;\n  padding-left: 3vw;\n  font-size: 1.4rem;\n  pointer-events: auto;\n\n  background-color: ${() => Theme.HEADER_BACK};\n\n  color: ${() => Theme.INTRO};\n  border: none;\n\n  outline: none;\n  resize: none;\n  @media (max-width: ${() => Theme.TABLET}) {\n    width: 100%;\n    border: none;\n  }\n\n  &::selection {\n    background-color: #dfdfdf;\n  }\n`;\n\nconst TextAreaForTitle = styled.textarea`\n  width: 100%;\n  font-size: 3.5em;\n  font-weight: 700;\n  padding: 5vh 0 0 3vw;\n  border: none;\n  outline: none;\n  resize: none;\n  pointer-events: auto;\n  background-color: ${() => Theme.HEADER_BACK};\n  &::placeholder {\n    color: #a2acb4;\n  }\n`;\n\nconst TextAreaForTag = styled.input<{ value: string }>`\n  font-size: 1.5em;\n  font-weight: 400;\n  border: none;\n  outline: none;\n  resize: none;\n  margin-left: 0.4rem;\n  padding-bottom: 0.7rem;\n  pointer-events: auto;\n  background-color: ${() => Theme.HEADER_BACK};\n  &::placeholder {\n    color: #a2acb4;\n  }\n  &::selection {\n    background-color: #dfdfdf;\n    color: #a2acb4;\n  }\n`;\n\nconst StyledThemeButton = styled(ThemeButton)`\n  pointer-events: auto;\n  bottom: 7vh;\n`;\n\ninterface ICodeBoxProps {\n  value: string;\n  language: string;\n  className: string;\n}\n\nconst CodeBox = ({ value, language }: ICodeBoxProps): ReactElement => {\n  const { mode } = useDependencyTheme();\n  const style = mode === 'LightMode' ? atelierCaveLight : a11yDark;\n  return (\n    <SyntaxHighlighter\n      language={language ?? ''}\n      style={style}\n      customStyle={{\n        lineHeight: '1.4em',\n        fontSize: '1.2em',\n        borderRadius: '0.5em',\n        backgroundColor: Theme.CODE_BOX,\n      }}\n    >\n      {value ?? ''}\n    </SyntaxHighlighter>\n  );\n};\n\nconst StyledTagContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: space-beetween;\n  margin: 1.2rem 0 1.2rem 2rem;\n`;\n\nconst StyledTagUnit = styled.div`\n  height: 1.7rem;\n  font-size: 1.2rem;\n  font-weight: 600;\n  margin: 0 3rem 0.7rem 0.5rem;\n  color: ${() => Theme.MODE_MARK};\n\n  &:hover {\n    opacity: 60%;\n    cursor: pointer;\n  }\n`;\n\nconst StyledButtonBox = styled.div`\n  position: absolute;\n  right: 42%;\n  bottom: 2rem;\n  .save {\n  }\n  .submit {\n    background-color: ${() => Theme.SUBMIT_BTN};\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  margin-right: 0.8em;\n`;\n\nconst findCursorPoint = (element: HTMLTextAreaElement): number[] => {\n  const cursorPointStart = element?.selectionStart;\n  const cursorPointEnd = element?.selectionEnd;\n  const cursorPosition = [cursorPointStart, cursorPointEnd];\n\n  return cursorPosition;\n};\n\nconst b64toBlob = (b64Data, contentType = '', sliceSize = 512) => {\n  const byteCharacters = atob(b64Data);\n  const byteArrays = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n    const byteNumbers = new Array(slice.length);\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    const byteArray = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n\n  const blob = new Blob(byteArrays, { type: contentType });\n  return blob;\n};\n\nfunction PostBox(): ReactElement {\n  const [input, setInput] = useState('');\n  const [title, setTitle] = useState('');\n  const [tagInput, setTagInput] = useState('');\n  const [tagList, setTagList] = useState<string[]>([]);\n  const isEditText = useRef([false, [0, 0]]);\n  const [cursorPosition, setCursorPosition] = useState([0, 0]);\n  const [images, setImages] = useState<FileList | null>(null);\n  const { changeMode } = useDependencyTheme();\n  const inputAreaElem = useRef<HTMLTextAreaElement>(null);\n  useEffect(() => {\n    if (isEditText.current[0]) {\n      const cursorToGo = isEditText.current[1];\n      const [startPosition, endPosition] = cursorToGo as number[];\n\n      inputAreaElem.current?.focus();\n      inputAreaElem.current?.setSelectionRange(startPosition, endPosition);\n      isEditText.current = [false, [0, 0]];\n      setCursorPosition(findCursorPoint(inputAreaElem.current as HTMLTextAreaElement));\n    }\n  }, [input]);\n\n  useEffect(() => {\n    const reader = new FileReader();\n    reader.addEventListener(\n      'load',\n      () => {\n        const src = reader.result;\n        // document.querySelector('#img').src = src;\n        const blob = b64toBlob(src, '');\n        const blobUrl = URL.createObjectURL(blob);\n        const newInput = `${input.slice(0, cursorPosition[0])}![](${blobUrl})${input.slice(cursorPosition[0])}`;\n        setInput(newInput);\n      },\n      false,\n    );\n    if (images === null) return;\n    reader.readAsDataURL(images[0]);\n  }, [images]);\n\n  return (\n    <StyledPostBox>\n      <div className=\"editArea\">\n        <TextAreaForTitle\n          placeholder=\"제목을 입력하세요\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          spellCheck=\"false\"\n        />\n        <hr />\n        <StyledTagContainer>\n          {tagList.map((tag, index) => (\n            <StyledTagUnit\n              key={index}\n              onClick={() => {\n                const tagIndex = index;\n                const tagListCopied: string[] = [...tagList];\n                tagListCopied.splice(tagIndex, 1);\n                setTagList(tagListCopied);\n              }}\n            >\n              {tag}\n            </StyledTagUnit>\n          ))}\n          <TextAreaForTag\n            placeholder=\"태그를 추가하세요\"\n            spellCheck=\"false\"\n            value={tagInput}\n            onChange={(event) => {\n              const newTag = event.target.value;\n              if (newTag[0] !== '#') return;\n              setTagInput(newTag);\n            }}\n            onKeyDown={(event) => {\n              if ((event.key === ' ' || event.key === 'Enter') && tagInput[0] === '#') {\n                const tagListCopied: string[] = [...tagList];\n                tagListCopied.push(tagInput.slice(1));\n                setTagList(tagListCopied);\n                setTagInput('');\n              }\n            }}\n          />\n        </StyledTagContainer>\n\n        <EditButtonBox\n          onClick={(event) => {\n            const cursorPositionToGo = editInputText({ event, input, setInput, cursorPosition });\n            isEditText.current = [true, cursorPositionToGo];\n            inputAreaElem.current?.focus();\n          }}\n          getImages={setImages}\n        />\n        <StyledMarkdownArea\n          className=\"textInput\"\n          spellCheck=\"false\"\n          placeholder=\"이야기를 적어보세요..\"\n          value={input}\n          onChange={(event) => {\n            setInput(event.target.value);\n          }}\n          onClick={() => setCursorPosition(findCursorPoint(inputAreaElem.current as HTMLTextAreaElement))}\n          onKeyUp={(event) => {\n            const cursorFinder = setTimeout(\n              () => setCursorPosition(findCursorPoint(inputAreaElem.current as HTMLTextAreaElement)),\n              400,\n            );\n            event.target.addEventListener('keyup', () => clearTimeout(cursorFinder));\n          }}\n          ref={inputAreaElem}\n        />\n      </div>\n      <ReactMarkdown\n        plugins={[[gfm, { tableCellPadding: 'true' }]]}\n        source={title === '' ? input : `# ${title}\\n${input}`}\n        className=\"preview\"\n        renderers={{ code: CodeBox }}\n      />\n      <StyledThemeButton onClick={changeMode} />\n      <StyledButtonBox>\n        <StyledButton className=\"save\">임시저장</StyledButton>\n        <StyledButton className=\"submit\">등록</StyledButton>\n      </StyledButtonBox>\n    </StyledPostBox>\n  );\n}\n\nexport default PostBox;\n"]},"metadata":{},"sourceType":"module"}