{"ast":null,"code":"import FrontInsertEditor from './FrontInsertEditor';\nimport CurrentInsertEditor from './CurrentInsertEditor';\nconst Editors = {\n  h1Editor: new FrontInsertEditor('h1'),\n  h2Editor: new FrontInsertEditor('h2'),\n  h3Editor: new FrontInsertEditor('h3'),\n  quoteEditor: new FrontInsertEditor('quote'),\n  checkboxEditor: new FrontInsertEditor('checkbox'),\n  boldEditor: new CurrentInsertEditor('bold'),\n  italicEditor: new CurrentInsertEditor('italic'),\n  linkEditor: new CurrentInsertEditor('link'),\n  codeEditor: new CurrentInsertEditor('code'),\n  tableEditor: new CurrentInsertEditor('table')\n};\n\nconst editByButton = ({\n  input,\n  event,\n  cursorPosition,\n  tableCount = [0, 0]\n}) => {\n  const editType = event.currentTarget.id;\n  const editorName = `${editType}Editor`;\n  const editInputFunc = Editors[editorName].editInput;\n  if (editType === 'table') Editors[editorName].setTableText(tableCount);\n  const {\n    updatedText,\n    cursorToGo\n  } = editInputFunc(input, cursorPosition);\n  return {\n    updatedText,\n    cursorToGo\n  };\n};\n\nexport default editByButton;","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/utils/markdownEditor/index.ts"],"names":["FrontInsertEditor","CurrentInsertEditor","Editors","h1Editor","h2Editor","h3Editor","quoteEditor","checkboxEditor","boldEditor","italicEditor","linkEditor","codeEditor","tableEditor","editByButton","input","event","cursorPosition","tableCount","editType","currentTarget","id","editorName","editInputFunc","editInput","setTableText","updatedText","cursorToGo"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAkBA,MAAMC,OAAmB,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,IAAIH,iBAAJ,CAAsB,IAAtB,CADgB;AAE1BI,EAAAA,QAAQ,EAAE,IAAIJ,iBAAJ,CAAsB,IAAtB,CAFgB;AAG1BK,EAAAA,QAAQ,EAAE,IAAIL,iBAAJ,CAAsB,IAAtB,CAHgB;AAI1BM,EAAAA,WAAW,EAAE,IAAIN,iBAAJ,CAAsB,OAAtB,CAJa;AAK1BO,EAAAA,cAAc,EAAE,IAAIP,iBAAJ,CAAsB,UAAtB,CALU;AAM1BQ,EAAAA,UAAU,EAAE,IAAIP,mBAAJ,CAAwB,MAAxB,CANc;AAO1BQ,EAAAA,YAAY,EAAE,IAAIR,mBAAJ,CAAwB,QAAxB,CAPY;AAQ1BS,EAAAA,UAAU,EAAE,IAAIT,mBAAJ,CAAwB,MAAxB,CARc;AAS1BU,EAAAA,UAAU,EAAE,IAAIV,mBAAJ,CAAwB,MAAxB,CATc;AAU1BW,EAAAA,WAAW,EAAE,IAAIX,mBAAJ,CAAwB,OAAxB;AAVa,CAA5B;;AAaA,MAAMY,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,cAAhB;AAAgCC,EAAAA,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ;AAA7C,CAAD,KAA4F;AAC/G,QAAMC,QAAQ,GAAGH,KAAK,CAACI,aAAN,CAAoBC,EAArC;AACA,QAAMC,UAAU,GAAI,GAAEH,QAAS,QAA/B;AACA,QAAMI,aAAa,GAAGpB,OAAO,CAACmB,UAAD,CAAP,CAAoBE,SAA1C;AAEA,MAAIL,QAAQ,KAAK,OAAjB,EAA0BhB,OAAO,CAACmB,UAAD,CAAP,CAAoBG,YAApB,CAAiCP,UAAjC;AAC1B,QAAM;AAAEQ,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA8BJ,aAAa,CAACR,KAAD,EAAQE,cAAR,CAAjD;AAEA,SAAO;AAAES,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAP;AACD,CATD;;AAWA,eAAeb,YAAf","sourcesContent":["import FrontInsertEditor from './FrontInsertEditor';\nimport CurrentInsertEditor from './CurrentInsertEditor';\n\ninterface IEditTextProps {\n  event: React.MouseEvent<SVGElement, MouseEvent>;\n  input: string;\n  cursorPosition: number[];\n  tableCount?: number[];\n}\n\ninterface IResultOfEditor {\n  updatedText: string;\n  cursorToGo: number[];\n}\n\ntype editorType = {\n  [editorName: string]: FrontInsertEditor | CurrentInsertEditor;\n};\n\nconst Editors: editorType = {\n  h1Editor: new FrontInsertEditor('h1'),\n  h2Editor: new FrontInsertEditor('h2'),\n  h3Editor: new FrontInsertEditor('h3'),\n  quoteEditor: new FrontInsertEditor('quote'),\n  checkboxEditor: new FrontInsertEditor('checkbox'),\n  boldEditor: new CurrentInsertEditor('bold'),\n  italicEditor: new CurrentInsertEditor('italic'),\n  linkEditor: new CurrentInsertEditor('link'),\n  codeEditor: new CurrentInsertEditor('code'),\n  tableEditor: new CurrentInsertEditor('table'),\n};\n\nconst editByButton = ({ input, event, cursorPosition, tableCount = [0, 0] }: IEditTextProps): IResultOfEditor => {\n  const editType = event.currentTarget.id;\n  const editorName = `${editType}Editor`;\n  const editInputFunc = Editors[editorName].editInput;\n\n  if (editType === 'table') Editors[editorName].setTableText(tableCount);\n  const { updatedText, cursorToGo } = editInputFunc(input, cursorPosition);\n\n  return { updatedText, cursorToGo };\n};\n\nexport default editByButton;\n"]},"metadata":{},"sourceType":"module"}