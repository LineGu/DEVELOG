{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/hyungu/Desktop/front-dev/projects/develog/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TagAreaToAdd/TagAreaToAdd.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport TextInput from '@atoms/TextInput/index';\nimport message from '@construction/message';\nvar TextAreaForTag = styled(TextInput).withConfig({\n  displayName: \"TagAreaToAdd__TextAreaForTag\",\n  componentId: \"sc-16axhvg-0\"\n})([\"font-size:1.5em;font-weight:400;margin-left:0.4rem;padding-bottom:0.7rem;background-color:\", \";color:\", \";&::placeholder{color:#a2acb4;}&::selection{background-color:#dfdfdf;color:#a2acb4;}\"], function () {\n  return Theme.HEADER_BACK;\n}, function () {\n  return Theme.INTRO;\n});\n_c = TextAreaForTag;\n\nvar renderTagChanged = function renderTagChanged(event, setText) {\n  if (!event) return;\n  var newTag = event.target.value;\n  var isValidTagForm = newTag[0] === '#' || newTag.length === 0;\n  if (isValidTagForm) setText(newTag);\n};\n\nvar addTag = function addTag(event) {\n  var isNotValidTag = !event || event.currentTarget.value.length < 2;\n  if (isNotValidTag) return;\n  var isRequestToAdd = event.key === ' ' || event.key === 'Enter';\n\n  if (isRequestToAdd) {\n    var tagListCopied = _toConsumableArray(tagList);\n\n    tagListCopied.push(tagInput.slice(1));\n    setTagList(tagListCopied);\n    setTagInput('');\n    setModalState('hidden');\n  }\n};\n\nfunction TagAreaToAdd(_ref) {\n  var propsForTagArea = _ref.propsForTagArea;\n  var tagInput = propsForTagArea.tagInput,\n      setTagInput = propsForTagArea.setTagInput,\n      tagList = propsForTagArea.tagList,\n      setTagList = propsForTagArea.setTagList,\n      setModalState = propsForTagArea.setModalState;\n  return /*#__PURE__*/_jsxDEV(TextAreaForTag, {\n    placeholder: message.TAG_PLACEHOLDER,\n    onFocus: function onFocus() {\n      return setModalState('show');\n    },\n    onBlur: function onBlur() {\n      return setModalState('hidden');\n    },\n    onChange: renderTagChanged,\n    onKeyDown: function onKeyDown(event) {\n      var isNotValidTag = !event || event.currentTarget.value.length < 2;\n      if (isNotValidTag) return;\n      var isRequestToAdd = event.key === ' ' || event.key === 'Enter';\n\n      if (isRequestToAdd) {\n        var tagListCopied = _toConsumableArray(tagList);\n\n        tagListCopied.push(tagInput.slice(1));\n        setTagList(tagListCopied);\n        setTagInput('');\n        setModalState('hidden');\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = TagAreaToAdd;\nexport default TagAreaToAdd;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextAreaForTag\");\n$RefreshReg$(_c2, \"TagAreaToAdd\");","map":{"version":3,"sources":["/Users/hyungu/Desktop/front-dev/projects/develog/client/src/components/molecules/TagAreaToAdd/TagAreaToAdd.tsx"],"names":["React","styled","Theme","TextInput","message","TextAreaForTag","HEADER_BACK","INTRO","renderTagChanged","event","setText","newTag","target","value","isValidTagForm","length","addTag","isNotValidTag","currentTarget","isRequestToAdd","key","tagListCopied","tagList","push","tagInput","slice","setTagList","setTagInput","setModalState","TagAreaToAdd","propsForTagArea","TAG_PLACEHOLDER"],"mappings":";;;AAAA,OAAOA,KAAP,MAA8D,OAA9D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAYA,IAAMC,cAAc,GAAGJ,MAAM,CAACE,SAAD,CAAT;AAAA;AAAA;AAAA,sMAME;AAAA,SAAMD,KAAK,CAACI,WAAZ;AAAA,CANF,EAOT;AAAA,SAAMJ,KAAK,CAACK,KAAZ;AAAA,CAPS,CAApB;KAAMF,c;;AAiBN,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAgDC,OAAhD,EAA8F;AACrH,MAAI,CAACD,KAAL,EAAY;AACZ,MAAME,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAA5B;AACA,MAAMC,cAAc,GAAGH,MAAM,CAAC,CAAD,CAAN,KAAc,GAAd,IAAqBA,MAAM,CAACI,MAAP,KAAkB,CAA9D;AACA,MAAID,cAAJ,EAAoBJ,OAAO,CAACC,MAAD,CAAP;AACrB,CALD;;AAOA,IAAMK,MAAM,GAAG,SAATA,MAAS,CAACP,KAAD,EAAW;AACxB,MAAMQ,aAAa,GAAG,CAACR,KAAD,IAAUA,KAAK,CAACS,aAAN,CAAoBL,KAApB,CAA0BE,MAA1B,GAAmC,CAAnE;AACA,MAAIE,aAAJ,EAAmB;AACnB,MAAME,cAAc,GAAGV,KAAK,CAACW,GAAN,KAAc,GAAd,IAAqBX,KAAK,CAACW,GAAN,KAAc,OAA1D;;AACA,MAAID,cAAJ,EAAoB;AAClB,QAAME,aAAuB,sBAAOC,OAAP,CAA7B;;AACAD,IAAAA,aAAa,CAACE,IAAd,CAAmBC,QAAQ,CAACC,KAAT,CAAe,CAAf,CAAnB;AACAC,IAAAA,UAAU,CAACL,aAAD,CAAV;AACAM,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAC,IAAAA,aAAa,CAAC,QAAD,CAAb;AACD;AACF,CAXD;;AAaA,SAASC,YAAT,OAAwE;AAAA,MAAhDC,eAAgD,QAAhDA,eAAgD;AAAA,MAC9DN,QAD8D,GACAM,eADA,CAC9DN,QAD8D;AAAA,MACpDG,WADoD,GACAG,eADA,CACpDH,WADoD;AAAA,MACvCL,OADuC,GACAQ,eADA,CACvCR,OADuC;AAAA,MAC9BI,UAD8B,GACAI,eADA,CAC9BJ,UAD8B;AAAA,MAClBE,aADkB,GACAE,eADA,CAClBF,aADkB;AAGtE,sBACE,QAAC,cAAD;AACE,IAAA,WAAW,EAAExB,OAAO,CAAC2B,eADvB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMH,aAAa,CAAC,MAAD,CAAnB;AAAA,KAFX;AAGE,IAAA,MAAM,EAAE;AAAA,aAAMA,aAAa,CAAC,QAAD,CAAnB;AAAA,KAHV;AAIE,IAAA,QAAQ,EAAEpB,gBAJZ;AAKE,IAAA,SAAS,EAAE,mBAACC,KAAD,EAAW;AACpB,UAAMQ,aAAa,GAAG,CAACR,KAAD,IAAUA,KAAK,CAACS,aAAN,CAAoBL,KAApB,CAA0BE,MAA1B,GAAmC,CAAnE;AACA,UAAIE,aAAJ,EAAmB;AACnB,UAAME,cAAc,GAAGV,KAAK,CAACW,GAAN,KAAc,GAAd,IAAqBX,KAAK,CAACW,GAAN,KAAc,OAA1D;;AACA,UAAID,cAAJ,EAAoB;AAClB,YAAME,aAAuB,sBAAOC,OAAP,CAA7B;;AACAD,QAAAA,aAAa,CAACE,IAAd,CAAmBC,QAAQ,CAACC,KAAT,CAAe,CAAf,CAAnB;AACAC,QAAAA,UAAU,CAACL,aAAD,CAAV;AACAM,QAAAA,WAAW,CAAC,EAAD,CAAX;AACAC,QAAAA,aAAa,CAAC,QAAD,CAAb;AACD;AACF;AAhBH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;MAvBQC,Y;AAyBT,eAAeA,YAAf","sourcesContent":["import React, { ReactElement, SetStateAction, Dispatch } from 'react';\nimport styled from 'styled-components';\nimport Theme from '@theme/index';\nimport TextInput from '@atoms/TextInput/index';\nimport message from '@construction/message';\n\ninterface ITagAreaProps {\n  propsForTagArea: {\n    tagInput: string;\n    setTagInput: Dispatch<SetStateAction<string>>;\n    tagList: string[];\n    setTagList: Dispatch<SetStateAction<string[]>>;\n    setModalState: Dispatch<SetStateAction<string>>;\n  };\n}\n\nconst TextAreaForTag = styled(TextInput)`\n  font-size: 1.5em;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  padding-bottom: 0.7rem;\n\n  background-color: ${() => Theme.HEADER_BACK};\n  color: ${() => Theme.INTRO};\n  &::placeholder {\n    color: #a2acb4;\n  }\n  &::selection {\n    background-color: #dfdfdf;\n    color: #a2acb4;\n  }\n`;\n\nconst renderTagChanged = (event: React.ChangeEvent<HTMLTextAreaElement>, setText: Dispatch<SetStateAction<string>>) => {\n  if (!event) return;\n  const newTag = event.target.value;\n  const isValidTagForm = newTag[0] === '#' || newTag.length === 0;\n  if (isValidTagForm) setText(newTag);\n};\n\nconst addTag = (event) => {\n  const isNotValidTag = !event || event.currentTarget.value.length < 2;\n  if (isNotValidTag) return;\n  const isRequestToAdd = event.key === ' ' || event.key === 'Enter';\n  if (isRequestToAdd) {\n    const tagListCopied: string[] = [...tagList];\n    tagListCopied.push(tagInput.slice(1));\n    setTagList(tagListCopied);\n    setTagInput('');\n    setModalState('hidden');\n  }\n};\n\nfunction TagAreaToAdd({ propsForTagArea }: ITagAreaProps): ReactElement {\n  const { tagInput, setTagInput, tagList, setTagList, setModalState } = propsForTagArea;\n\n  return (\n    <TextAreaForTag\n      placeholder={message.TAG_PLACEHOLDER}\n      onFocus={() => setModalState('show')}\n      onBlur={() => setModalState('hidden')}\n      onChange={renderTagChanged}\n      onKeyDown={(event) => {\n        const isNotValidTag = !event || event.currentTarget.value.length < 2;\n        if (isNotValidTag) return;\n        const isRequestToAdd = event.key === ' ' || event.key === 'Enter';\n        if (isRequestToAdd) {\n          const tagListCopied: string[] = [...tagList];\n          tagListCopied.push(tagInput.slice(1));\n          setTagList(tagListCopied);\n          setTagInput('');\n          setModalState('hidden');\n        }\n      }}\n    />\n  );\n}\n\nexport default TagAreaToAdd;\n"]},"metadata":{},"sourceType":"module"}